/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ExternalFormsApiController : ControllerBase
    { 
        /// <summary>
        /// Create External Link
        /// </summary>
        /// <remarks>Create External Link</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/contact-or-orgs-externaldata/data/token/data/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ContactOrOrgsExternaldataDataTokenDataByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalOrgContactTokenDataResponse), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ContactOrOrgsExternaldataDataTokenDataByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalOrgContactTokenDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"linkData\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"org_id\" : 1,\r\n    \"id\" : 0,\r\n    \"created_by\" : 6,\r\n    \"shortLink\" : \"shortLink\",\r\n    \"entity\" : 5,\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"orgFields\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"contactFields\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"experienceFields\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalOrgContactTokenDataResponse>(exampleJson)
            : default(ExternalOrgContactTokenDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Link
        /// </summary>
        /// <remarks>Create External Link</remarks>
        /// <param name="entity"></param>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/data/externaldata/{entity}/token/{token}/data")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1DataExternaldataByEntityTokenByTokenData")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalTokenDataResponse), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1DataExternaldataByEntityTokenByTokenData([FromRoute (Name = "entity")][Required]string entity, [FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalTokenDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"linkData\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"org_id\" : 1,\r\n    \"id\" : 0,\r\n    \"created_by\" : 6,\r\n    \"shortLink\" : \"shortLink\",\r\n    \"entity\" : 5,\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"fields\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"contacts\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalTokenDataResponse>(exampleJson)
            : default(ExternalTokenDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="contactExternalInputs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/contact/{contact_external_inputs}/customfields")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataContactByContactExternalInputsCustomfields")]
        [SwaggerResponse(statusCode: 200, type: typeof(PendingContactDataResponse), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataContactByContactExternalInputsCustomfields([FromRoute (Name = "contact_external_inputs")][Required]string contactExternalInputs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PendingContactDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"contact\" : {\r\n    \"lastName\" : \"lastName\",\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 0,\r\n    \"title\" : \"title\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"org_id\" : 6,\r\n    \"id\" : 1,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PendingContactDataResponse>(exampleJson)
            : default(PendingContactDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/contacts/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataContactsPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ViewableContactExternalInput>), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataContactsPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ViewableContactExternalInput>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"dualSubmitted\" : true,\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"org_external_input_id\" : 0,\r\n  \"orgName\" : \"orgName\",\r\n  \"title\" : \"title\",\r\n  \"createdByLastName\" : \"createdByLastName\",\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"firstName\" : \"firstName\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"org_id\" : 1,\r\n  \"id\" : 6,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"dualSubmitted\" : true,\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"org_external_input_id\" : 0,\r\n  \"orgName\" : \"orgName\",\r\n  \"title\" : \"title\",\r\n  \"createdByLastName\" : \"createdByLastName\",\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"firstName\" : \"firstName\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"org_id\" : 1,\r\n  \"id\" : 6,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ViewableContactExternalInput>>(exampleJson)
            : default(List<ViewableContactExternalInput>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="experienceExternalInputs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/experience/{experience_external_inputs}/customfields")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataExperienceByExperienceExternalInputsCustomfields")]
        [SwaggerResponse(statusCode: 200, type: typeof(PendingExternalExperienceDataResponse), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataExperienceByExperienceExternalInputsCustomfields([FromRoute (Name = "experience_external_inputs")][Required]string experienceExternalInputs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PendingExternalExperienceDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"experience\" : {\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"contact_id\" : 6,\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PendingExternalExperienceDataResponse>(exampleJson)
            : default(PendingExternalExperienceDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/experiences/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataExperiencesPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExternalExperienceViewableDataResponse>), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataExperiencesPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExternalExperienceViewableDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"numberOfSpots\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"org_external_input_id\" : 6,\r\n  \"org_id\" : 5,\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"id\" : 0,\r\n  \"contact_id\" : 5,\r\n  \"createdByLastName\" : \"createdByLastName\"\r\n}, {\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"numberOfSpots\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"org_external_input_id\" : 6,\r\n  \"org_id\" : 5,\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"id\" : 0,\r\n  \"contact_id\" : 5,\r\n  \"createdByLastName\" : \"createdByLastName\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExternalExperienceViewableDataResponse>>(exampleJson)
            : default(List<ExternalExperienceViewableDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="organizationExternalInputs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/organization/{organization_external_inputs}/customfields")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataOrganizationByOrganizationExternalInputsCustomfields")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentProposalResponseData), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataOrganizationByOrganizationExternalInputsCustomfields([FromRoute (Name = "organization_external_inputs")][Required]string organizationExternalInputs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentProposalResponseData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"org\" : {\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"website\" : \"website\",\r\n    \"dualSubmitted\" : true,\r\n    \"locationName\" : \"locationName\",\r\n    \"latitude\" : \"latitude\",\r\n    \"description\" : \"description\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 2,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"longitude\" : \"longitude\"\r\n  },\r\n  \"contact\" : {\r\n    \"lastName\" : \"lastName\",\r\n    \"dualSubmitted\" : true,\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 0,\r\n    \"orgName\" : \"orgName\",\r\n    \"title\" : \"title\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"org_id\" : 1,\r\n    \"id\" : 6,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"experience\" : {\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 6,\r\n    \"org_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"contact_id\" : 5,\r\n    \"createdByLastName\" : \"createdByLastName\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentProposalResponseData>(exampleJson)
            : default(StudentProposalResponseData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/organizations/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataOrganizationsPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OrganizationExternalInputDTO>), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataOrganizationsPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OrganizationExternalInputDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"website\" : \"website\",\r\n  \"dualSubmitted\" : true,\r\n  \"locationName\" : \"locationName\",\r\n  \"latitude\" : \"latitude\",\r\n  \"description\" : \"description\",\r\n  \"createdByLastName\" : \"createdByLastName\",\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 2,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"longitude\" : \"longitude\"\r\n}, {\r\n  \"createdByFirstName\" : \"createdByFirstName\",\r\n  \"website\" : \"website\",\r\n  \"dualSubmitted\" : true,\r\n  \"locationName\" : \"locationName\",\r\n  \"latitude\" : \"latitude\",\r\n  \"description\" : \"description\",\r\n  \"createdByLastName\" : \"createdByLastName\",\r\n  \"createdByEmail\" : \"createdByEmail\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 2,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"longitude\" : \"longitude\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<OrganizationExternalInputDTO>>(exampleJson)
            : default(List<OrganizationExternalInputDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// GetPendingExternalData
        /// </summary>
        /// <remarks>GetPendingExternalData</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externaldata/student-proposals/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternaldataStudentProposalsPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StudentProposalResponseData>), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternaldataStudentProposalsPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StudentProposalResponseData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"org\" : {\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"website\" : \"website\",\r\n    \"dualSubmitted\" : true,\r\n    \"locationName\" : \"locationName\",\r\n    \"latitude\" : \"latitude\",\r\n    \"description\" : \"description\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 2,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"longitude\" : \"longitude\"\r\n  },\r\n  \"contact\" : {\r\n    \"lastName\" : \"lastName\",\r\n    \"dualSubmitted\" : true,\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 0,\r\n    \"orgName\" : \"orgName\",\r\n    \"title\" : \"title\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"org_id\" : 1,\r\n    \"id\" : 6,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"experience\" : {\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 6,\r\n    \"org_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"contact_id\" : 5,\r\n    \"createdByLastName\" : \"createdByLastName\"\r\n  }\r\n}, {\r\n  \"org\" : {\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"website\" : \"website\",\r\n    \"dualSubmitted\" : true,\r\n    \"locationName\" : \"locationName\",\r\n    \"latitude\" : \"latitude\",\r\n    \"description\" : \"description\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 2,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"longitude\" : \"longitude\"\r\n  },\r\n  \"contact\" : {\r\n    \"lastName\" : \"lastName\",\r\n    \"dualSubmitted\" : true,\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 0,\r\n    \"orgName\" : \"orgName\",\r\n    \"title\" : \"title\",\r\n    \"createdByLastName\" : \"createdByLastName\",\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"org_id\" : 1,\r\n    \"id\" : 6,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"experience\" : {\r\n    \"createdByEmail\" : \"createdByEmail\",\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdByFirstName\" : \"createdByFirstName\",\r\n    \"org_external_input_id\" : 6,\r\n    \"org_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"contact_id\" : 5,\r\n    \"createdByLastName\" : \"createdByLastName\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StudentProposalResponseData>>(exampleJson)
            : default(List<StudentProposalResponseData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Link
        /// </summary>
        /// <remarks>Create External Link</remarks>
        /// <param name="entity"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/External Forms/api/consumer/v1/externalsubmissions/link/{entity}")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalFormsApiConsumerV1ExternalsubmissionsLinkByEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetExternalFormsApiConsumerV1ExternalsubmissionsLinkByEntity([FromRoute (Name = "entity")][Required]string entity, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Contact
        /// </summary>
        /// <remarks>Create External Contact</remarks>
        /// <param name="contactExternalInputs"></param>
        /// <param name="rejectExternalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/External Forms/api/consumer/v1/external/contact/{contact_external_inputs}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExternalFormsApiConsumerV1ExternalContactByContactExternalInputs")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExternalFormsApiConsumerV1ExternalContactByContactExternalInputs([FromRoute (Name = "contact_external_inputs")][Required]string contactExternalInputs, [FromBody]RejectExternalRequest rejectExternalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Experience
        /// </summary>
        /// <remarks>Create External Experience</remarks>
        /// <param name="experienceExternalInputs"></param>
        /// <param name="rejectExternalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/External Forms/api/consumer/v1/external/experience/{experience_external_inputs}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExternalFormsApiConsumerV1ExternalExperienceByExperienceExternalInputs")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExternalFormsApiConsumerV1ExternalExperienceByExperienceExternalInputs([FromRoute (Name = "experience_external_inputs")][Required]string experienceExternalInputs, [FromBody]RejectExternalRequest rejectExternalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Org
        /// </summary>
        /// <remarks>Create External Org</remarks>
        /// <param name="organizationExternalInputs"></param>
        /// <param name="rejectExternalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/External Forms/api/consumer/v1/external/organization/{organization_external_inputs}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExternalFormsApiConsumerV1ExternalOrganizationByOrganizationExternalInputs")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExternalFormsApiConsumerV1ExternalOrganizationByOrganizationExternalInputs([FromRoute (Name = "organization_external_inputs")][Required]string organizationExternalInputs, [FromBody]RejectExternalRequest rejectExternalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Contact
        /// </summary>
        /// <remarks>Create External Contact</remarks>
        /// <param name="token"></param>
        /// <param name="createExternalContactRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/External Forms/api/consumer/v1/external/contact/create/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExternalFormsApiConsumerV1ExternalContactCreateByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExternalFormsApiConsumerV1ExternalContactCreateByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CreateExternalContactRequest createExternalContactRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Experience
        /// </summary>
        /// <remarks>Create External Experience</remarks>
        /// <param name="token"></param>
        /// <param name="createExternalExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/External Forms/api/consumer/v1/external/experience/create/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExternalFormsApiConsumerV1ExternalExperienceCreateByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExternalFormsApiConsumerV1ExternalExperienceCreateByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CreateExternalExperienceRequest createExternalExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Org
        /// </summary>
        /// <remarks>Create External Org</remarks>
        /// <param name="token"></param>
        /// <param name="createExternalOrgRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/External Forms/api/consumer/v1/external/organization/create/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExternalFormsApiConsumerV1ExternalOrganizationCreateByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExternalFormsApiConsumerV1ExternalOrganizationCreateByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CreateExternalOrgRequest createExternalOrgRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Org And Contact
        /// </summary>
        /// <remarks>Create External Org And Contact</remarks>
        /// <param name="token"></param>
        /// <param name="createExternalContactAndOrgRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/External Forms/api/consumer/v1/external/organizationcontact/create/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExternalFormsApiConsumerV1ExternalOrganizationcontactCreateByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExternalFormsApiConsumerV1ExternalOrganizationcontactCreateByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CreateExternalContactAndOrgRequest createExternalContactAndOrgRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create External Org And Contact
        /// </summary>
        /// <remarks>Create External Org And Contact</remarks>
        /// <param name="token"></param>
        /// <param name="createExternalContactAndOrgRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/External Forms/api/consumer/v1/external/organizationcontactexperience/create/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExternalFormsApiConsumerV1ExternalOrganizationcontactexperienceCreateByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExternalFormsApiConsumerV1ExternalOrganizationcontactexperienceCreateByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CreateExternalContactAndOrgRequest createExternalContactAndOrgRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
