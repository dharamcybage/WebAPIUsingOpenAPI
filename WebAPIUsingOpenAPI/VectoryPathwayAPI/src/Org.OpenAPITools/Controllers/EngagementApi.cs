/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class EngagementApiController : ControllerBase
    { 
        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>Engagement Task Set</remarks>
        /// <param name="engagementTaskSets"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets/{engagement_task_sets}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSets")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSets([FromRoute (Name = "engagement_task_sets")][Required]string engagementTaskSets, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Attendence
        /// </summary>
        /// <remarks>Engagement Attendence</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/attendance-intern-dash/live-data")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1AttendanceInternDashLiveData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<InternAttendanceResponse>), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1AttendanceInternDashLiveData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<InternAttendanceResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"checkedIn\" : 6,\r\n  \"customFields\" : [ {\r\n    \"name\" : \"name\",\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"inLocation\" : 1,\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"checkedIn\" : 6,\r\n  \"customFields\" : [ {\r\n    \"name\" : \"name\",\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"inLocation\" : 1,\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<InternAttendanceResponse>>(exampleJson)
            : default(List<InternAttendanceResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Alert
        /// </summary>
        /// <remarks>User Experience Alert</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/alerts")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementAlerts")]
        [SwaggerResponse(statusCode: 200, type: typeof(EngagementAlertsResponse), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementAlerts([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EngagementAlertsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"outOfGeoForShift\" : [ {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"outOfGeoNow\" : [ {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"missedShift\" : [ {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"absentNow\" : [ {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"recentlyDismissed\" : [ {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"userExperienceAlert\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"alert\" : 1,\r\n      \"user_experience_id\" : 0,\r\n      \"shift_id\" : 6,\r\n      \"id\" : 5,\r\n      \"dismissedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"shift\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkedInStatus\" : 0,\r\n      \"geoStatus\" : 1,\r\n      \"user_experience_id\" : 6,\r\n      \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"time_log_id\" : 5,\r\n      \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"isCurrentShift\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"timeLog\" : {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    },\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"type\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EngagementAlertsResponse>(exampleJson)
            : default(EngagementAlertsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Alert
        /// </summary>
        /// <remarks>User Experience Alert</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/stats")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementStats")]
        [SwaggerResponse(statusCode: 200, type: typeof(OverallEngagementAlertDataResponse), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementStats([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OverallEngagementAlertDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"properLocationStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"attendancePositiveStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"duringPercentage\" : 2.3021358869347655,\r\n  \"punchedInNegativeStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"duringStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"attendancePercentage\" : 9.301444243932576,\r\n  \"generalInfoPercentage\" : 5.962133916683182,\r\n  \"punchedInPercentage\" : 6.027456183070403,\r\n  \"properLocationPercentage\" : 1.4658129805029452,\r\n  \"attendanceNegativeStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"scheduledShiftsPercentage\" : 7.061401241503109,\r\n  \"prePercentage\" : 0.8008281904610115,\r\n  \"preStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"postStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"scheduledNegativeStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"punchedInStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"properLocationNegativeStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"postPercentage\" : 5.637376656633329,\r\n  \"generalInfoStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"scheduledPositiveStudents\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OverallEngagementAlertDataResponse>(exampleJson)
            : default(OverallEngagementAlertDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Tasks
        /// </summary>
        /// <remarks>Engagement Tasks</remarks>
        /// <param name="userExperience"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasks/{user_experience}")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksByUserExperience")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserExperienceTaskDTO>), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksByUserExperience([FromRoute (Name = "user_experience")][Required]string userExperience, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserExperienceTaskDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"notes\" : \"notes\",\r\n  \"user_experience_id\" : 0,\r\n  \"form_id\" : 1,\r\n  \"taskName\" : \"taskName\",\r\n  \"id\" : 6,\r\n  \"complete\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"notes\" : \"notes\",\r\n  \"user_experience_id\" : 0,\r\n  \"form_id\" : 1,\r\n  \"taskName\" : \"taskName\",\r\n  \"id\" : 6,\r\n  \"complete\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<UserExperienceTaskDTO>>(exampleJson)
            : default(List<UserExperienceTaskDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Tasks
        /// </summary>
        /// <remarks>Engagement Tasks</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasks/students")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksStudents")]
        [SwaggerResponse(statusCode: 200, type: typeof(EngagementStudentSearchResponse), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksStudents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EngagementStudentSearchResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"users\" : [ {\r\n    \"basicUser\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"experiences\" : [ {\r\n      \"userExperience\" : {\r\n        \"experience_id\" : 5,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"isCurrent\" : true,\r\n        \"user_id\" : 5,\r\n        \"id\" : 6,\r\n        \"term_id\" : 1,\r\n        \"contact_id\" : 0,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"experience\" : {\r\n        \"organizationName\" : \"organizationName\",\r\n        \"reflection_form_approval\" : 2,\r\n        \"form_submission_id\" : 4,\r\n        \"contactName\" : \"contactName\",\r\n        \"conditional_badge_group_id\" : 7,\r\n        \"form_id\" : 5,\r\n        \"description\" : \"description\",\r\n        \"allowsTotalTimelogHoursSubmission\" : true,\r\n        \"contact_id\" : 3,\r\n        \"created_by\" : 5,\r\n        \"location_id\" : 6,\r\n        \"numberOfSpots\" : 2,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"reflection_form_id\" : 0,\r\n        \"organization_id\" : 1,\r\n        \"name\" : \"name\",\r\n        \"hideFromSearch\" : true,\r\n        \"id\" : 9,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }\r\n    }, {\r\n      \"userExperience\" : {\r\n        \"experience_id\" : 5,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"isCurrent\" : true,\r\n        \"user_id\" : 5,\r\n        \"id\" : 6,\r\n        \"term_id\" : 1,\r\n        \"contact_id\" : 0,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"experience\" : {\r\n        \"organizationName\" : \"organizationName\",\r\n        \"reflection_form_approval\" : 2,\r\n        \"form_submission_id\" : 4,\r\n        \"contactName\" : \"contactName\",\r\n        \"conditional_badge_group_id\" : 7,\r\n        \"form_id\" : 5,\r\n        \"description\" : \"description\",\r\n        \"allowsTotalTimelogHoursSubmission\" : true,\r\n        \"contact_id\" : 3,\r\n        \"created_by\" : 5,\r\n        \"location_id\" : 6,\r\n        \"numberOfSpots\" : 2,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"reflection_form_id\" : 0,\r\n        \"organization_id\" : 1,\r\n        \"name\" : \"name\",\r\n        \"hideFromSearch\" : true,\r\n        \"id\" : 9,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }\r\n    } ]\r\n  }, {\r\n    \"basicUser\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"experiences\" : [ {\r\n      \"userExperience\" : {\r\n        \"experience_id\" : 5,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"isCurrent\" : true,\r\n        \"user_id\" : 5,\r\n        \"id\" : 6,\r\n        \"term_id\" : 1,\r\n        \"contact_id\" : 0,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"experience\" : {\r\n        \"organizationName\" : \"organizationName\",\r\n        \"reflection_form_approval\" : 2,\r\n        \"form_submission_id\" : 4,\r\n        \"contactName\" : \"contactName\",\r\n        \"conditional_badge_group_id\" : 7,\r\n        \"form_id\" : 5,\r\n        \"description\" : \"description\",\r\n        \"allowsTotalTimelogHoursSubmission\" : true,\r\n        \"contact_id\" : 3,\r\n        \"created_by\" : 5,\r\n        \"location_id\" : 6,\r\n        \"numberOfSpots\" : 2,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"reflection_form_id\" : 0,\r\n        \"organization_id\" : 1,\r\n        \"name\" : \"name\",\r\n        \"hideFromSearch\" : true,\r\n        \"id\" : 9,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }\r\n    }, {\r\n      \"userExperience\" : {\r\n        \"experience_id\" : 5,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"isCurrent\" : true,\r\n        \"user_id\" : 5,\r\n        \"id\" : 6,\r\n        \"term_id\" : 1,\r\n        \"contact_id\" : 0,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"experience\" : {\r\n        \"organizationName\" : \"organizationName\",\r\n        \"reflection_form_approval\" : 2,\r\n        \"form_submission_id\" : 4,\r\n        \"contactName\" : \"contactName\",\r\n        \"conditional_badge_group_id\" : 7,\r\n        \"form_id\" : 5,\r\n        \"description\" : \"description\",\r\n        \"allowsTotalTimelogHoursSubmission\" : true,\r\n        \"contact_id\" : 3,\r\n        \"created_by\" : 5,\r\n        \"location_id\" : 6,\r\n        \"numberOfSpots\" : 2,\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"reflection_form_id\" : 0,\r\n        \"organization_id\" : 1,\r\n        \"name\" : \"name\",\r\n        \"hideFromSearch\" : true,\r\n        \"id\" : 9,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }\r\n    } ]\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EngagementStudentSearchResponse>(exampleJson)
            : default(EngagementStudentSearchResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Tasks
        /// </summary>
        /// <remarks>Engagement Tasks</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasks/students/{users}")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksStudentsByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(EngagementStudentSearchResponseUserInfo), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksStudentsByUsers([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EngagementStudentSearchResponseUserInfo));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"basicUser\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"experiences\" : [ {\r\n    \"userExperience\" : {\r\n      \"experience_id\" : 5,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"isCurrent\" : true,\r\n      \"user_id\" : 5,\r\n      \"id\" : 6,\r\n      \"term_id\" : 1,\r\n      \"contact_id\" : 0,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  }, {\r\n    \"userExperience\" : {\r\n      \"experience_id\" : 5,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"isCurrent\" : true,\r\n      \"user_id\" : 5,\r\n      \"id\" : 6,\r\n      \"term_id\" : 1,\r\n      \"contact_id\" : 0,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experience\" : {\r\n      \"organizationName\" : \"organizationName\",\r\n      \"reflection_form_approval\" : 2,\r\n      \"form_submission_id\" : 4,\r\n      \"contactName\" : \"contactName\",\r\n      \"conditional_badge_group_id\" : 7,\r\n      \"form_id\" : 5,\r\n      \"description\" : \"description\",\r\n      \"allowsTotalTimelogHoursSubmission\" : true,\r\n      \"contact_id\" : 3,\r\n      \"created_by\" : 5,\r\n      \"location_id\" : 6,\r\n      \"numberOfSpots\" : 2,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"reflection_form_id\" : 0,\r\n      \"organization_id\" : 1,\r\n      \"name\" : \"name\",\r\n      \"hideFromSearch\" : true,\r\n      \"id\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EngagementStudentSearchResponseUserInfo>(exampleJson)
            : default(EngagementStudentSearchResponseUserInfo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>EngagementTasksSet</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksets")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EngagementTaskSetDTO>), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksets([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EngagementTaskSetDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<EngagementTaskSetDTO>>(exampleJson)
            : default(List<EngagementTaskSetDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>Engagement Task Set</remarks>
        /// <param name="engagementTaskSets"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets/{engagement_task_sets}")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSets")]
        [SwaggerResponse(statusCode: 200, type: typeof(EngagementTaskSetDTO), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSets([FromRoute (Name = "engagement_task_sets")][Required]string engagementTaskSets, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EngagementTaskSetDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EngagementTaskSetDTO>(exampleJson)
            : default(EngagementTaskSetDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>Engagement Task Set</remarks>
        /// <param name="engagementTaskSets"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets/{engagement_task_sets}/tasks")]
        [ValidateModelState]
        [SwaggerOperation("GetEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSetsTasks")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DefaultEngagementTaskDTO>), description: "OK")]
        public virtual IActionResult GetEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSetsTasks([FromRoute (Name = "engagement_task_sets")][Required]string engagementTaskSets, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DefaultEngagementTaskDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"engagement_task_set_id\" : 0,\r\n  \"name\" : \"name\",\r\n  \"id\" : 6,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"engagement_task_set_id\" : 0,\r\n  \"name\" : \"name\",\r\n  \"id\" : 6,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DefaultEngagementTaskDTO>>(exampleJson)
            : default(List<DefaultEngagementTaskDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Alert
        /// </summary>
        /// <remarks>User Experience Alert</remarks>
        /// <param name="userExperienceAlert"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Engagement/api/consumer/v1/engagement/alerts/{user_experience_alert}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEngagementApiConsumerV1EngagementAlertsByUserExperienceAlert")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEngagementApiConsumerV1EngagementAlertsByUserExperienceAlert([FromRoute (Name = "user_experience_alert")][Required]string userExperienceAlert, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Tasks
        /// </summary>
        /// <remarks>Engagement Tasks</remarks>
        /// <param name="userExperienceTasks"></param>
        /// <param name="completeExperienceTaskRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Engagement/api/consumer/v1/engagement/tasks/complete/{user_experience_tasks}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchEngagementApiConsumerV1EngagementTasksCompleteByUserExperienceTasks")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEngagementApiConsumerV1EngagementTasksCompleteByUserExperienceTasks([FromRoute (Name = "user_experience_tasks")][Required]string userExperienceTasks, [FromBody]CompleteExperienceTaskRequest completeExperienceTaskRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Tasks
        /// </summary>
        /// <remarks>Engagement Tasks</remarks>
        /// <param name="userExperience"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Engagement/api/consumer/v1/engagement/tasks/stage/{user_experience}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEngagementApiConsumerV1EngagementTasksStageByUserExperience")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEngagementApiConsumerV1EngagementTasksStageByUserExperience([FromRoute (Name = "user_experience")][Required]string userExperience, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>Engagement Task Set</remarks>
        /// <param name="createEngagementTaskSetRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEngagementApiConsumerV1EngagementTasksets")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEngagementApiConsumerV1EngagementTasksets([FromBody]CreateEngagementTaskSetRequest createEngagementTaskSetRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Engagement Task Set
        /// </summary>
        /// <remarks>Engagement Task Set</remarks>
        /// <param name="engagementTaskSets"></param>
        /// <param name="addTaskToEngagementSetRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Engagement/api/consumer/v1/engagement/tasksets/{engagement_task_sets}/task")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSetsTask")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEngagementApiConsumerV1EngagementTasksetsByEngagementTaskSetsTask([FromRoute (Name = "engagement_task_sets")][Required]string engagementTaskSets, [FromBody]AddTaskToEngagementSetRequest addTaskToEngagementSetRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
