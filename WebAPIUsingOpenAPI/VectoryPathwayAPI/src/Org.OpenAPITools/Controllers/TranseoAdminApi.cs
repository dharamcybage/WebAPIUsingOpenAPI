/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TranseoAdminApiController : ControllerBase
    { 
        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/csv-headers/{district_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminCsvHeadersByDistrictId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminCsvHeadersByDistrictId([FromRoute (Name = "district_id")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminDistricts")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminPortalDistrictResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminDistricts([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminPortalDistrictResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"districts\" : [ {\r\n    \"studentInformationSystem\" : {\r\n      \"name\" : \"name\",\r\n      \"id\" : 0\r\n    },\r\n    \"numberOfDistrictAdministrators\" : 0,\r\n    \"name\" : \"name\",\r\n    \"ncesID\" : \"ncesID\",\r\n    \"id\" : 6,\r\n    \"numberOfSuperUsers\" : 1\r\n  }, {\r\n    \"studentInformationSystem\" : {\r\n      \"name\" : \"name\",\r\n      \"id\" : 0\r\n    },\r\n    \"numberOfDistrictAdministrators\" : 0,\r\n    \"name\" : \"name\",\r\n    \"ncesID\" : \"ncesID\",\r\n    \"id\" : 6,\r\n    \"numberOfSuperUsers\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminPortalDistrictResponse>(exampleJson)
            : default(TranseoAdminPortalDistrictResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{district_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictId")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminSingleDistrictResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictId([FromRoute (Name = "district_id")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminSingleDistrictResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalAccountReferenceId\" : \"externalAccountReferenceId\",\r\n  \"superUsers\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"csvCoursesUploadMapping\" : \"{}\",\r\n  \"csvGuardiansUploadMapping\" : \"{}\",\r\n  \"classlinkTenantId\" : \"classlinkTenantId\",\r\n  \"districtAdministrators\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"products\" : [ null, null ],\r\n  \"csvClassesUploadMapping\" : \"{}\",\r\n  \"counselorOneRosterField\" : \"counselorOneRosterField\",\r\n  \"uploadedPsPlugins\" : [ null, null ],\r\n  \"isShutDown\" : true,\r\n  \"arrowsOnboardingLink\" : \"arrowsOnboardingLink\",\r\n  \"useEarnedCreditsForBadgeCalculations\" : true,\r\n  \"ignoreInvalidSchoolCodes\" : true,\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 6,\r\n  \"samlMetadata\" : \"samlMetadata\",\r\n  \"skipGoogleNameTransfer\" : true,\r\n  \"settings\" : \"{}\",\r\n  \"icPlugins\" : [ null, null ],\r\n  \"cleverDistrictId\" : \"cleverDistrictId\",\r\n  \"ncesID\" : \"ncesID\",\r\n  \"csvUserUploadMapping\" : \"{}\",\r\n  \"studentsCanUpdateCluster\" : true,\r\n  \"psPlugins\" : [ null, null ],\r\n  \"googleDomain\" : \"googleDomain\",\r\n  \"csvCollegeStudentUploadMapping\" : \"{}\",\r\n  \"microsoftDomain\" : \"microsoftDomain\",\r\n  \"allowInvalidEmailsInCSV\" : true,\r\n  \"blockEmailSendsToUsers\" : true,\r\n  \"csvRemoveUsersUploadMapping\" : \"{}\",\r\n  \"schools\" : [ {\r\n    \"ssoId\" : \"ssoId\",\r\n    \"studentCount\" : 9,\r\n    \"startingGrade\" : 5,\r\n    \"oneRosterId\" : \"oneRosterId\",\r\n    \"adminCount\" : 7,\r\n    \"name\" : \"name\",\r\n    \"ncesID\" : \"ncesID\",\r\n    \"id\" : 2,\r\n    \"teacherCount\" : 1,\r\n    \"endingGrade\" : 5,\r\n    \"internalCode\" : \"internalCode\"\r\n  }, {\r\n    \"ssoId\" : \"ssoId\",\r\n    \"studentCount\" : 9,\r\n    \"startingGrade\" : 5,\r\n    \"oneRosterId\" : \"oneRosterId\",\r\n    \"adminCount\" : 7,\r\n    \"name\" : \"name\",\r\n    \"ncesID\" : \"ncesID\",\r\n    \"id\" : 2,\r\n    \"teacherCount\" : 1,\r\n    \"endingGrade\" : 5,\r\n    \"internalCode\" : \"internalCode\"\r\n  } ],\r\n  \"csvEnrollmentsUploadMapping\" : \"{}\",\r\n  \"creditCalculationMethod\" : 0,\r\n  \"csvCredentialsUploadMapping\" : \"{}\",\r\n  \"studentInformationSystem\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  },\r\n  \"csvEarnedCreditsUploadMapping\" : \"{}\",\r\n  \"name\" : \"name\",\r\n  \"csvSupplementalUploadMapping\" : \"{}\",\r\n  \"uploadedIcPlugins\" : [ null, null ],\r\n  \"shortName\" : \"shortName\",\r\n  \"csvTestsUploadMapping\" : \"{}\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminSingleDistrictResponse>(exampleJson)
            : default(TranseoAdminSingleDistrictResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{district_id}/course-custom-fields")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdCourseCustomFields")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdCourseCustomFields([FromRoute (Name = "district_id")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{district_id}/required-profile-form")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdRequiredProfileForm")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdRequiredProfileForm([FromRoute (Name = "district_id")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{district_id}/upload-driver-settings")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdUploadDriverSettings")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DistrictUploadDriverSettingsDTO>), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictIdUploadDriverSettings([FromRoute (Name = "district_id")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DistrictUploadDriverSettingsDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"displayName\" : \"displayName\",\r\n  \"disabled\" : true\r\n}, {\r\n  \"displayName\" : \"displayName\",\r\n  \"disabled\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DistrictUploadDriverSettingsDTO>>(exampleJson)
            : default(List<DistrictUploadDriverSettingsDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="supportOrgs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/intermediary/{support_orgs}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminIntermediaryBySupportOrgs")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminIntermediaryResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminIntermediaryBySupportOrgs([FromRoute (Name = "support_orgs")][Required]string supportOrgs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminIntermediaryResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"isCenterOfControl\" : true,\r\n  \"districts\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"isTransitioning\" : true,\r\n  \"id\" : 6\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminIntermediaryResponse>(exampleJson)
            : default(TranseoAdminIntermediaryResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="activities"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/marketplace/activity/{activities}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminMarketplaceActivityByActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(ActivityDTO), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminMarketplaceActivityByActivities([FromRoute (Name = "activities")][Required]string activities, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ActivityDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"allowsResubmission\" : true,\r\n  \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"sponsorReminderDays\" : 6,\r\n  \"registration_form_id\" : 7,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"premium\" : true,\r\n  \"imageUrl\" : \"imageUrl\",\r\n  \"id\" : 5,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"order\" : 6,\r\n  \"tag_ids\" : [ 1, 1 ],\r\n  \"maxNumberRegistrations\" : 6,\r\n  \"studentReminderDays\" : 9,\r\n  \"numberApprovalsRequired\" : 4,\r\n  \"conditional_badge_group_id\" : 9,\r\n  \"form_id\" : 3,\r\n  \"created_by\" : 8,\r\n  \"iframeUrl\" : \"iframeUrl\",\r\n  \"canRegister\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"activity_type_id\" : 9,\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"visibleForEveryone\" : true,\r\n  \"name\" : \"name\",\r\n  \"approvalProcess\" : 1,\r\n  \"folder_id\" : 6,\r\n  \"isEvent\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ActivityDTO>(exampleJson)
            : default(ActivityDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/marketplace/form/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminMarketplaceFormByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminMarketplaceFormByForms([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/sis")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminSis")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DistrictSISDTO>), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminSis([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DistrictSISDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DistrictSISDTO>>(exampleJson)
            : default(List<DistrictSISDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="userId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{user_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminUserByUserId")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminUserDataResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminUserByUserId([FromRoute (Name = "user_id")][Required]string userId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminUserDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"birthday\" : \"birthday\",\r\n  \"lastName\" : \"lastName\",\r\n  \"lastSignInIP\" : \"lastSignInIP\",\r\n  \"approxExitDate\" : \"approxExitDate\",\r\n  \"role\" : 6,\r\n  \"districtName\" : \"districtName\",\r\n  \"supportOrgName\" : \"supportOrgName\",\r\n  \"isApprovedToUsePlatform\" : true,\r\n  \"studentId\" : \"studentId\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"firstName\" : \"firstName\",\r\n  \"lastSignInTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"schools\" : [ {\r\n    \"startingGrade\" : 0,\r\n    \"name\" : \"name\",\r\n    \"id\" : 1,\r\n    \"endingGrade\" : 6\r\n  }, {\r\n    \"startingGrade\" : 0,\r\n    \"name\" : \"name\",\r\n    \"id\" : 1,\r\n    \"endingGrade\" : 6\r\n  } ],\r\n  \"superUserCanAlsoViewPlatform\" : true,\r\n  \"grade\" : 0,\r\n  \"canResetPassword\" : true,\r\n  \"isDistrictSuperUser\" : true,\r\n  \"id\" : 1,\r\n  \"schoolName\" : \"schoolName\",\r\n  \"isTranseoAdmin\" : true,\r\n  \"email\" : \"email\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminUserDataResponse>(exampleJson)
            : default(TranseoAdminUserDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user-login/{users}")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalAdminUserLoginByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminLoginResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalAdminUserLoginByUsers([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"district_ids\" : [ 0, 0 ],\r\n  \"school_id\" : 6,\r\n  \"transeoAdminCanOnlyAdjustMarketplace\" : true,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminLoginResponse>(exampleJson)
            : default(TranseoAdminLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-bundle-admin/district-list")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalBundleAdminDistrictList")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminDistrictListResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalBundleAdminDistrictList([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminDistrictListResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"districts\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminDistrictListResponse>(exampleJson)
            : default(TranseoAdminDistrictListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Transeo Admin/api/consumer/v1/portal-bundle-admin/support-org-list")]
        [ValidateModelState]
        [SwaggerOperation("GetTranseoAdminApiConsumerV1PortalBundleAdminSupportOrgList")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminSupportOrgListResponse), description: "OK")]
        public virtual IActionResult GetTranseoAdminApiConsumerV1PortalBundleAdminSupportOrgList([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminSupportOrgListResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"supportOrgs\" : [ {\r\n    \"isCenterOfControl\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"isCenterOfControl\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminSupportOrgListResponse>(exampleJson)
            : default(TranseoAdminSupportOrgListResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="schools"></param>
        /// <param name="grade"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{districts}/school-ending-year/{schools}/{grade}")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchoolEndingYearBySchoolsByGrade")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchoolEndingYearBySchoolsByGrade([FromRoute (Name = "districts")][Required]string districts, [FromRoute (Name = "schools")][Required]string schools, [FromRoute (Name = "grade")][Required]string grade, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="schools"></param>
        /// <param name="grade"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{districts}/school-starting-year/{schools}/{grade}")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchoolStartingYearBySchoolsByGrade")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchoolStartingYearBySchoolsByGrade([FromRoute (Name = "districts")][Required]string districts, [FromRoute (Name = "schools")][Required]string schools, [FromRoute (Name = "grade")][Required]string grade, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="transeoAdminUpdatePasswordRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{users}/password")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersPassword")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersPassword([FromRoute (Name = "users")][Required]string users, [FromBody]TranseoAdminUpdatePasswordRequest transeoAdminUpdatePasswordRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="role"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{users}/role/{role}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersRoleByRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersRoleByRole([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "role")][Required]string role, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="schools"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{users}/school/{schools}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersSchoolBySchools")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersSchoolBySchools([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "schools")][Required]string schools, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{users}/super-user")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersSuperUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersSuperUser([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="users"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/user/{users}/view-platform")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersViewPlatform")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchTranseoAdminApiConsumerV1PortalAdminUserByUsersViewPlatform([FromRoute (Name = "users")][Required]string users, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="createNewClientRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/client")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminClient")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminClient([FromBody]CreateNewClientRequest createNewClientRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="infiniteCampusPluginContext"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district/{districts}/ic-plugin")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsIcPlugin")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsIcPlugin([FromRoute (Name = "districts")][Required]string districts, [FromBody]InfiniteCampusPluginContext infiniteCampusPluginContext, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="powerschoolPluginContext"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district/{districts}/ps-plugin")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsPsPlugin")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsPsPlugin([FromRoute (Name = "districts")][Required]string districts, [FromBody]PowerschoolPluginContext powerschoolPluginContext, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="createSuperUserRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district/{districts}/super-user")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsSuperUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsSuperUser([FromRoute (Name = "districts")][Required]string districts, [FromBody]CreateSuperUserRequest createSuperUserRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="uploadPluginRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district/{districts}/upload-ic-plugin")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsUploadIcPlugin")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsUploadIcPlugin([FromRoute (Name = "districts")][Required]string districts, [FromBody]UploadPluginRequest uploadPluginRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="uploadPluginRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district/{districts}/upload-ps-plugin")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsUploadPsPlugin")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictByDistrictsUploadPsPlugin([FromRoute (Name = "districts")][Required]string districts, [FromBody]UploadPluginRequest uploadPluginRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="adminUpdateSettingsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/district-settings/{districts}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictSettingsByDistricts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictSettingsByDistricts([FromRoute (Name = "districts")][Required]string districts, [FromBody]AdminUpdateSettingsRequest adminUpdateSettingsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{districts}/clear-courses")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsClearCourses")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsClearCourses([FromRoute (Name = "districts")][Required]string districts, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="createNewClientRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{districts}/school")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchool")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsSchool([FromRoute (Name = "districts")][Required]string districts, [FromBody]CreateNewClientRequest createNewClientRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="districts"></param>
        /// <param name="driverType"></param>
        /// <param name="districtUploadDriverSettingsUpdateRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/districts/{districts}/upload-driver-settings/{driver_type}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsUploadDriverSettingsByDriverType")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminDistrictsByDistrictsUploadDriverSettingsByDriverType([FromRoute (Name = "districts")][Required]string districts, [FromRoute (Name = "driver_type")][Required]string driverType, [FromBody]DistrictUploadDriverSettingsUpdateRequest districtUploadDriverSettingsUpdateRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="supportOrgs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/intermediary/{support_orgs}/transition-to-local")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminIntermediaryBySupportOrgsTransitionToLocal")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminIntermediaryBySupportOrgsTransitionToLocal([FromRoute (Name = "support_orgs")][Required]string supportOrgs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="updateCategoriesRequests"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/marketplace/categories")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminMarketplaceCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminMarketplaceCategories([FromBody]UpdateCategoriesRequests updateCategoriesRequests, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="marketplaceResourceFetchRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/marketplace/resources")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminMarketplaceResources")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminMarketplaceDTOItem), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminMarketplaceResources([FromBody]MarketplaceResourceFetchRequest marketplaceResourceFetchRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminMarketplaceDTOItem));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"appearsInMarketplace\" : true,\r\n  \"name\" : \"name\",\r\n  \"districts\" : [ 6, 6 ],\r\n  \"categories\" : [ null, null ],\r\n  \"id\" : 0,\r\n  \"type\" : \"type\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminMarketplaceDTOItem>(exampleJson)
            : default(AdminMarketplaceDTOItem);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="updateVisibilityRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/marketplace/visibility")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminMarketplaceVisibility")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminMarketplaceVisibility([FromBody]UpdateVisibilityRequest updateVisibilityRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Transeo Admin
        /// </summary>
        /// <remarks>Transeo Admin</remarks>
        /// <param name="searchRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Transeo Admin/api/consumer/v1/portal-admin/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostTranseoAdminApiConsumerV1PortalAdminSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BasicUser>), description: "OK")]
        public virtual IActionResult PostTranseoAdminApiConsumerV1PortalAdminSearch([FromBody]SearchRequest searchRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<BasicUser>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<BasicUser>>(exampleJson)
            : default(List<BasicUser>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
