/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class OnboardingFormsApiController : ControllerBase
    { 
        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="onboardingForms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Onboarding Forms/api/consumer/v1/onboarding/forms-delete/{onboarding_forms}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteOnboardingFormsApiConsumerV1OnboardingFormsDeleteByOnboardingForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteOnboardingFormsApiConsumerV1OnboardingFormsDeleteByOnboardingForms([FromRoute (Name = "onboarding_forms")][Required]string onboardingForms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="entity"></param>
        /// <param name="entityId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Onboarding Forms/api/consumer/v1/onboarding/forms/{entity}/entity/{entity_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OpportunityGroupDTO>), description: "OK")]
        public virtual IActionResult GetOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityId([FromRoute (Name = "entity")][Required]string entity, [FromRoute (Name = "entity_id")][Required]string entityId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OpportunityGroupDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"created_by\" : 0,\r\n  \"experienceIds\" : [ 6, 6 ],\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"created_by\" : 0,\r\n  \"experienceIds\" : [ 6, 6 ],\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<OpportunityGroupDTO>>(exampleJson)
            : default(List<OpportunityGroupDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="entity"></param>
        /// <param name="entityId"></param>
        /// <param name="formId"></param>
        /// <param name="formSubmissionId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Onboarding Forms/api/consumer/v1/onboarding/forms/{entity}/entity/{entity_id}/{form_id}/sub/{form_submission_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityIdByFormIdSubByFormSubmissionId")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormSubmissionResponse), description: "OK")]
        public virtual IActionResult GetOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityIdByFormIdSubByFormSubmissionId([FromRoute (Name = "entity")][Required]string entity, [FromRoute (Name = "entity_id")][Required]string entityId, [FromRoute (Name = "form_id")][Required]string formId, [FromRoute (Name = "form_submission_id")][Required]string formSubmissionId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormSubmissionResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormSubmissionResponse>(exampleJson)
            : default(FormSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="entity"></param>
        /// <param name="entityId"></param>
        /// <param name="formId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Onboarding Forms/api/consumer/v1/onboarding/forms/{entity}/entity/{entity_id}/{form_id}")]
        [ValidateModelState]
        [SwaggerOperation("PatchOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityIdByFormId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchOnboardingFormsApiConsumerV1OnboardingFormsByEntityEntityByEntityIdByFormId([FromRoute (Name = "entity")][Required]string entity, [FromRoute (Name = "entity_id")][Required]string entityId, [FromRoute (Name = "form_id")][Required]string formId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="entity"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Onboarding Forms/api/consumer/v1/pathwayos/onboarding/forms/{entity}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostOnboardingFormsApiConsumerV1PathwayosOnboardingFormsByEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostOnboardingFormsApiConsumerV1PathwayosOnboardingFormsByEntity([FromRoute (Name = "entity")][Required]string entity, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Onboarding Forms
        /// </summary>
        /// <remarks>Onboarding Forms</remarks>
        /// <param name="entity"></param>
        /// <param name="formId"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Onboarding Forms/api/consumer/v1/pathwayos/onboarding/forms/{entity}/bulk-add/{form_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostOnboardingFormsApiConsumerV1PathwayosOnboardingFormsByEntityBulkAddByFormId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostOnboardingFormsApiConsumerV1PathwayosOnboardingFormsByEntityBulkAddByFormId([FromRoute (Name = "entity")][Required]string entity, [FromRoute (Name = "form_id")][Required]string formId, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
