/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class EventsApiController : ControllerBase
    { 
        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEventShifts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/co-curricular-event-shifts/{co_curricular_event_shifts}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEventShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEventShifts([FromRoute (Name = "co_curricular_event_shifts")][Required]string coCurricularEventShifts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="coCurricularEventTypes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/co-curricular-event-types/{co_curricular_event_types}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1CoCurricularEventTypesByCoCurricularEventTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1CoCurricularEventTypesByCoCurricularEventTypes([FromRoute (Name = "co_curricular_event_types")][Required]string coCurricularEventTypes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventAnnouncement
        /// </summary>
        /// <remarks>CoCurricularEventAnnouncement</remarks>
        /// <param name="coCurricularEventAnnouncements"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/co-curricular-events-messages/{co_curricular_event_announcements}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1CoCurricularEventsMessagesByCoCurricularEventAnnouncements")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1CoCurricularEventsMessagesByCoCurricularEventAnnouncements([FromRoute (Name = "co_curricular_event_announcements")][Required]string coCurricularEventAnnouncements, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="inviteToken"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/event-registration-external/{inviteToken}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1EventRegistrationExternalByInviteToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1EventRegistrationExternalByInviteToken([FromRoute (Name = "inviteToken")][Required]string inviteToken, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDates")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDates([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="coCurricularEventAttendees"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/shift/attendees/{co_curricular_event_attendees}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShiftAttendeesByCoCurricularEventAttendees")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShiftAttendeesByCoCurricularEventAttendees([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromRoute (Name = "co_curricular_event_attendees")][Required]string coCurricularEventAttendees, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/delete-entire-event/{co_curricular_events}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1ManageCoCurricularEventsDeleteEntireEventByCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1ManageCoCurricularEventsDeleteEntireEventByCoCurricularEvents([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventAttendees"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Events/api/consumer/v1/student-manage-co-curricular-events/{co_curricular_event_attendees}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteEventsApiConsumerV1StudentManageCoCurricularEventsByCoCurricularEventAttendees")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteEventsApiConsumerV1StudentManageCoCurricularEventsByCoCurricularEventAttendees([FromRoute (Name = "co_curricular_event_attendees")][Required]string coCurricularEventAttendees, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="code"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/all-manage-co-curricular-events/qr-code-checkin/{code}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1AllManageCoCurricularEventsQrCodeCheckinByCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1AllManageCoCurricularEventsQrCodeCheckinByCode([FromRoute (Name = "code")][Required]string code, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="coCurricularEventTypes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-event-count-by-type/{co_curricular_event_types}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventCountByTypeByCoCurricularEventTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventTypeControllerEventCountByTypeResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventCountByTypeByCoCurricularEventTypes([FromRoute (Name = "co_curricular_event_types")][Required]string coCurricularEventTypes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventTypeControllerEventCountByTypeResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"past\" : 6,\r\n  \"upcoming\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventTypeControllerEventCountByTypeResponse>(exampleJson)
            : default(CoCurricularEventTypeControllerEventCountByTypeResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-event-types")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventTypes([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventsControllerCoCurricularEventTableResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEvents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventsControllerCoCurricularEventTableResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"participantsCount\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"contactEmail\" : \"contactEmail\",\r\n  \"contactFirstName\" : \"contactFirstName\",\r\n  \"description\" : \"description\",\r\n  \"type\" : \"type\",\r\n  \"attendedCount\" : 5,\r\n  \"isAllDay\" : true,\r\n  \"maxNumberOfStudents\" : 0,\r\n  \"organization\" : \"organization\",\r\n  \"name\" : \"name\",\r\n  \"location\" : \"location\",\r\n  \"contactLastName\" : \"contactLastName\",\r\n  \"id\" : 1,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"registeredCount\" : 5\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventsControllerCoCurricularEventTableResponse>(exampleJson)
            : default(CoCurricularEventsControllerCoCurricularEventTableResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events/bpp-external-creation-data")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventsBppExternalCreationData")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventsControllerExternalEventCreationLinkResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventsBppExternalCreationData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventsControllerExternalEventCreationLinkResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"schools\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"organizations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"bppOrganizationId\" : 6,\r\n  \"eventTypes\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventsControllerExternalEventCreationLinkResponse>(exampleJson)
            : default(CoCurricularEventsControllerExternalEventCreationLinkResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events/{co_curricular_events}/edit-data")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventsByCoCurricularEventsEditData")]
        [SwaggerResponse(statusCode: 200, type: typeof(CreateCoCurricularEventRequest), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventsByCoCurricularEventsEditData([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CreateCoCurricularEventRequest));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"finalRegistrationDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"postOnSchoolCalendar\" : true,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"event_type_id\" : 5,\r\n  \"isAllDay\" : true,\r\n  \"file\" : {\r\n    \"fileName\" : \"fileName\",\r\n    \"content\" : \"content\"\r\n  },\r\n  \"shifts\" : [ {\r\n    \"hours\" : 7.061401241503109,\r\n    \"startTime\" : \"startTime\",\r\n    \"id\" : 2,\r\n    \"maxRegistrations\" : 9,\r\n    \"endTime\" : \"endTime\"\r\n  }, {\r\n    \"hours\" : 7.061401241503109,\r\n    \"startTime\" : \"startTime\",\r\n    \"id\" : 2,\r\n    \"maxRegistrations\" : 9,\r\n    \"endTime\" : \"endTime\"\r\n  } ],\r\n  \"fileUrl\" : \"fileUrl\",\r\n  \"id\" : 3,\r\n  \"repetitionType\" : 1,\r\n  \"registrationCodeRequired\" : true,\r\n  \"addedToPublicCalendar\" : true,\r\n  \"ownerIds\" : [ 0, 0 ],\r\n  \"form_id\" : 4,\r\n  \"secondReminderDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"externalSubmissionId\" : 1,\r\n  \"firstReminderDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"group_id\" : 6,\r\n  \"registrationType\" : 1,\r\n  \"schoolIds\" : [ 5, 5 ],\r\n  \"repetitionIteration\" : 1,\r\n  \"organization_id\" : 2,\r\n  \"maxNumberOfStudents\" : 7,\r\n  \"name\" : \"name\",\r\n  \"location\" : \"location\",\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CreateCoCurricularEventRequest>(exampleJson)
            : default(CreateCoCurricularEventRequest);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events-check-out/open-check-ins")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventsCheckOutOpenCheckIns")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerStudentOpenShiftResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventsCheckOutOpenCheckIns([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerStudentOpenShiftResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"id\" : 0,\r\n  \"event\" : \"event\",\r\n  \"timeIn\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerStudentOpenShiftResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerStudentOpenShiftResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events/external-submissions")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventsExternalSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventsExternalSubmissions([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="createActivityTypeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/co-curricular-events/external-submissions/links")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1CoCurricularEventsExternalSubmissionsLinks")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventsControllerExternalLinkResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1CoCurricularEventsExternalSubmissionsLinks([FromBody]CreateActivityTypeRequest createActivityTypeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventsControllerExternalLinkResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"link\" : \"link\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventsControllerExternalLinkResponse>(exampleJson)
            : default(CoCurricularEventsControllerExternalLinkResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/district-cocurriculareventtypes")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1DistrictCocurriculareventtypes")]
        public virtual IActionResult GetEventsApiConsumerV1DistrictCocurriculareventtypes([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// CoCurricularEventCalendar
        /// </summary>
        /// <remarks>CoCurricularEventCalendar</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/engage-calendar")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1EngageCalendar")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventCalendarControllerCalendarEvent), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1EngageCalendar([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventCalendarControllerCalendarEvent));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"allDay\" : true,\r\n  \"eventId\" : 1,\r\n  \"start\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"end\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 0,\r\n  \"type\" : 6,\r\n  \"title\" : \"title\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventCalendarControllerCalendarEvent>(exampleJson)
            : default(CoCurricularEventCalendarControllerCalendarEvent);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventCalendar
        /// </summary>
        /// <remarks>CoCurricularEventCalendar</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/engage-calendar/school-codes")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1EngageCalendarSchoolCodes")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventCalendarControllerSchoolCodeResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1EngageCalendarSchoolCodes([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventCalendarControllerSchoolCodeResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"name\" : \"name\",\r\n  \"link\" : \"link\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventCalendarControllerSchoolCodeResponse>(exampleJson)
            : default(CoCurricularEventCalendarControllerSchoolCodeResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/event-registration-external/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1EventRegistrationExternalByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerExternalEventRegistrationData), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1EventRegistrationExternalByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerExternalEventRegistrationData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"allDay\" : true,\r\n  \"eventId\" : 6,\r\n  \"registrationType\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"eventDescription\" : \"eventDescription\",\r\n  \"eventName\" : \"eventName\",\r\n  \"shifts\" : [ null, null ],\r\n  \"location\" : \"location\",\r\n  \"eventDateId\" : 1,\r\n  \"requiresCode\" : true,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerExternalEventRegistrationData>(exampleJson)
            : default(ManageCoCurricularEventsControllerExternalEventRegistrationData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="inviteToken"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/event-registration-invite-external/{inviteToken}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1EventRegistrationInviteExternalByInviteToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerExternalEventInviteRegistrationData), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1EventRegistrationInviteExternalByInviteToken([FromRoute (Name = "inviteToken")][Required]string inviteToken, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerExternalEventInviteRegistrationData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"eventId\" : 0,\r\n  \"shiftId\" : 6,\r\n  \"allDay\" : true,\r\n  \"registrationType\" : 5,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"eventDescription\" : \"eventDescription\",\r\n  \"eventName\" : \"eventName\",\r\n  \"shifts\" : [ null, null ],\r\n  \"location\" : \"location\",\r\n  \"eventDateId\" : 1,\r\n  \"requiresCode\" : true,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerExternalEventInviteRegistrationData>(exampleJson)
            : default(ManageCoCurricularEventsControllerExternalEventInviteRegistrationData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventCalendar
        /// </summary>
        /// <remarks>CoCurricularEventCalendar</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/external-calendar/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ExternalCalendarByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventCalendarControllerExternalCalendarData), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ExternalCalendarByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventCalendarControllerExternalCalendarData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school\" : \"school\",\r\n  \"events\" : [ {\r\n    \"allDay\" : true,\r\n    \"eventId\" : 1,\r\n    \"start\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"end\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"type\" : 6,\r\n    \"title\" : \"title\"\r\n  }, {\r\n    \"allDay\" : true,\r\n    \"eventId\" : 1,\r\n    \"start\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"end\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"type\" : 6,\r\n    \"title\" : \"title\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventCalendarControllerExternalCalendarData>(exampleJson)
            : default(CoCurricularEventCalendarControllerExternalCalendarData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/external-engage-event-find/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ExternalEngageEventFindByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoCurricularEventsControllerExternalEventCreationLinkResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ExternalEngageEventFindByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoCurricularEventsControllerExternalEventCreationLinkResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"schools\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"organizations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"bppOrganizationId\" : 6,\r\n  \"eventTypes\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoCurricularEventsControllerExternalEventCreationLinkResponse>(exampleJson)
            : default(CoCurricularEventsControllerExternalEventCreationLinkResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDates")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerViewCoCurricularEventResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDates([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerViewCoCurricularEventResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"eventId\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"canEdit\" : true,\r\n  \"form_id\" : 1,\r\n  \"description\" : \"description\",\r\n  \"type\" : \"type\",\r\n  \"registrationLink\" : \"registrationLink\",\r\n  \"isRepeating\" : true,\r\n  \"group_id\" : 5,\r\n  \"registrationType\" : 5,\r\n  \"organization\" : \"organization\",\r\n  \"name\" : \"name\",\r\n  \"registrationCode\" : \"registrationCode\",\r\n  \"location\" : \"location\",\r\n  \"fileUrl\" : \"fileUrl\",\r\n  \"eventDateId\" : 6,\r\n  \"announcements\" : [ null, null ],\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerViewCoCurricularEventResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerViewCoCurricularEventResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="coCurricularEventShifts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/attendees/{co_curricular_event_shifts}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendeesByCoCurricularEventShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerSpecificShiftResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendeesByCoCurricularEventShifts([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromRoute (Name = "co_curricular_event_shifts")][Required]string coCurricularEventShifts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerSpecificShiftResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"id\" : 0,\r\n  \"isStudent\" : true,\r\n  \"email\" : \"email\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerSpecificShiftResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerSpecificShiftResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/qr-code")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesQrCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerQRCodeResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesQrCode([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerQRCodeResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"qrCodeLink\" : \"qrCodeLink\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerQRCodeResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerQRCodeResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/shifts")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerShiftResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShifts([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerShiftResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"startTime\" : \"startTime\",\r\n  \"id\" : 6,\r\n  \"endTime\" : \"endTime\",\r\n  \"maxRegistrations\" : 1,\r\n  \"numberOfSignups\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerShiftResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerShiftResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/dates-for-event/{co_curricular_events}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1ManageCoCurricularEventsDatesForEventByCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerDatesForEventResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1ManageCoCurricularEventsDatesForEventByCoCurricularEvents([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerDatesForEventResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 0,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerDatesForEventResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerDatesForEventResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/api/consumer/v1/student-manage-co-curricular-events/event-details/{co_curricular_event_dates}")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsApiConsumerV1StudentManageCoCurricularEventsEventDetailsByCoCurricularEventDates")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerStudentViewCoCurricularEventResponse), description: "OK")]
        public virtual IActionResult GetEventsApiConsumerV1StudentManageCoCurricularEventsEventDetailsByCoCurricularEventDates([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerStudentViewCoCurricularEventResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"numberOfSpotsTaken\" : 2,\r\n  \"eventId\" : 9,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"contactName\" : \"contactName\",\r\n  \"shift\" : \"{}\",\r\n  \"description\" : \"description\",\r\n  \"attendeeId\" : 6,\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"registrationType\" : 1,\r\n  \"group_id\" : 3,\r\n  \"maxNumberOfStudents\" : 4,\r\n  \"name\" : \"name\",\r\n  \"shifts\" : [ {\r\n    \"hours\" : 7.061401241503109,\r\n    \"numberOfRegisteredStudents\" : 5,\r\n    \"startTime\" : \"startTime\",\r\n    \"endTime\" : \"endTime\",\r\n    \"maxRegistrations\" : 5,\r\n    \"id\" : 2\r\n  }, {\r\n    \"hours\" : 7.061401241503109,\r\n    \"numberOfRegisteredStudents\" : 5,\r\n    \"startTime\" : \"startTime\",\r\n    \"endTime\" : \"endTime\",\r\n    \"maxRegistrations\" : 5,\r\n    \"id\" : 2\r\n  } ],\r\n  \"fileUrl\" : \"fileUrl\",\r\n  \"location\" : \"location\",\r\n  \"hasSignedUp\" : true,\r\n  \"eventDateId\" : 0,\r\n  \"announcements\" : [ null, null ],\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"registrationCodeRequired\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerStudentViewCoCurricularEventResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerStudentViewCoCurricularEventResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Messag
        /// </summary>
        /// <remarks>User Messag</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/User Message/api/consumer/v1/user-messages/admin")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsUserMessageApiConsumerV1UserMessagesAdmin")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminMessageDTO), description: "OK")]
        public virtual IActionResult GetEventsUserMessageApiConsumerV1UserMessagesAdmin([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminMessageDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"students\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"groups\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 5\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 5\r\n  } ],\r\n  \"id\" : 0,\r\n  \"message\" : \"message\",\r\n  \"parents\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminMessageDTO>(exampleJson)
            : default(AdminMessageDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Message
        /// </summary>
        /// <remarks>User Messag</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Events/User Message/api/consumer/v1/user-messages/student")]
        [ValidateModelState]
        [SwaggerOperation("GetEventsUserMessageApiConsumerV1UserMessagesStudent")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentMessageDTO), description: "OK")]
        public virtual IActionResult GetEventsUserMessageApiConsumerV1UserMessagesStudent([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentMessageDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"sender\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"id\" : 0,\r\n  \"message\" : \"message\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentMessageDTO>(exampleJson)
            : default(StudentMessageDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEventShifts"></param>
        /// <param name="createCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/co-curricular-event-shifts/{co_curricular_event_shifts}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEventShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEventShifts([FromRoute (Name = "co_curricular_event_shifts")][Required]string coCurricularEventShifts, [FromBody]CreateCoCurricularEventRequest createCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="coCurricularEventTypes"></param>
        /// <param name="createActivityTypeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/co-curricular-event-types/{co_curricular_event_types}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1CoCurricularEventTypesByCoCurricularEventTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1CoCurricularEventTypesByCoCurricularEventTypes([FromRoute (Name = "co_curricular_event_types")][Required]string coCurricularEventTypes, [FromBody]CreateActivityTypeRequest createActivityTypeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="createCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/co-curricular-events/{co_curricular_events}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1CoCurricularEventsByCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1CoCurricularEventsByCoCurricularEvents([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromBody]CreateCoCurricularEventRequest createCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventAttendees"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/co-curricular-events-check-out/check-out/{co_curricular_event_attendees}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1CoCurricularEventsCheckOutCheckOutByCoCurricularEventAttendees")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1CoCurricularEventsCheckOutCheckOutByCoCurricularEventAttendees([FromRoute (Name = "co_curricular_event_attendees")][Required]string coCurricularEventAttendees, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/co-curricular-events/clone/{co_curricular_events}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1CoCurricularEventsCloneByCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1CoCurricularEventsCloneByCoCurricularEvents([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="inviteToken"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/event-registration-invite-external-shift/{inviteToken}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1EventRegistrationInviteExternalShiftByInviteToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1EventRegistrationInviteExternalShiftByInviteToken([FromRoute (Name = "inviteToken")][Required]string inviteToken, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="coCurricularEventAttendees"></param>
        /// <param name="coCurricularEventShifts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/shift/attendees/{co_curricular_event_attendees}/{co_curricular_event_shifts}")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShiftAttendeesByCoCurricularEventAttendeesByCoCurricularEventShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesShiftAttendeesByCoCurricularEventAttendeesByCoCurricularEventShifts([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromRoute (Name = "co_curricular_event_attendees")][Required]string coCurricularEventAttendees, [FromRoute (Name = "co_curricular_event_shifts")][Required]string coCurricularEventShifts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularGroupAnnouncement
        /// </summary>
        /// <remarks>CoCurricularGroupAnnouncement</remarks>
        /// <param name="coCurricularGroupAnnouncementControllerBulkDeleteAnnouncementRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Events/CoCurricular Events/api/consumer/v1/groups/messages/delete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchEventsCoCurricularEventsApiConsumerV1GroupsMessagesDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchEventsCoCurricularEventsApiConsumerV1GroupsMessagesDelete([FromBody]CoCurricularGroupAnnouncementControllerBulkDeleteAnnouncementRequest coCurricularGroupAnnouncementControllerBulkDeleteAnnouncementRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEvents"></param>
        /// <param name="createCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-event-shifts/{co_curricular_events}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEventShiftsByCoCurricularEvents([FromRoute (Name = "co_curricular_events")][Required]string coCurricularEvents, [FromBody]CreateCoCurricularEventRequest createCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventType
        /// </summary>
        /// <remarks>CoCurricularEventType</remarks>
        /// <param name="createActivityTypeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-event-types")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEventTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEventTypes([FromBody]CreateActivityTypeRequest createActivityTypeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="createCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-events")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEvents([FromBody]CreateCoCurricularEventRequest createCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="coCurricularEventsControllerCreateExternalCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-events/bpp-external-creation")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEventsBppExternalCreation")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEventsBppExternalCreation([FromBody]CoCurricularEventsControllerCreateExternalCoCurricularEventRequest coCurricularEventsControllerCreateExternalCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEventAnnouncement
        /// </summary>
        /// <remarks>CoCurricularEventAnnouncement</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="coCurricularGroupAnnouncementControllerCreateEventAnnouncementRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-events-messages/{co_curricular_event_dates}/messages/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEventsMessagesByCoCurricularEventDatesMessagesCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEventsMessagesByCoCurricularEventDatesMessagesCreate([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromBody]CoCurricularGroupAnnouncementControllerCreateEventAnnouncementRequest coCurricularGroupAnnouncementControllerCreateEventAnnouncementRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="externalCoCurricularEvents"></param>
        /// <param name="coCurricularEventsControllerPostFeedbackOnExternalSubmission"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/co-curricular-events/reject-external-submissions/{external_co_curricular_events}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1CoCurricularEventsRejectExternalSubmissionsByExternalCoCurricularEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1CoCurricularEventsRejectExternalSubmissionsByExternalCoCurricularEvents([FromRoute (Name = "external_co_curricular_events")][Required]string externalCoCurricularEvents, [FromBody]CoCurricularEventsControllerPostFeedbackOnExternalSubmission coCurricularEventsControllerPostFeedbackOnExternalSubmission, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="manageCoCurricularEventsControllerExternalRegisterForEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/event-registration-external")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1EventRegistrationExternal")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1EventRegistrationExternal([FromBody]ManageCoCurricularEventsControllerExternalRegisterForEventRequest manageCoCurricularEventsControllerExternalRegisterForEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularEvents
        /// </summary>
        /// <remarks>CoCurricularEvents</remarks>
        /// <param name="token"></param>
        /// <param name="coCurricularEventsControllerCreateExternalCoCurricularEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/external-engage-event-submission/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1ExternalEngageEventSubmissionByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1ExternalEngageEventSubmissionByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CoCurricularEventsControllerCreateExternalCoCurricularEventRequest coCurricularEventsControllerCreateExternalCoCurricularEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="manageCoCurricularEventsControllerEventUserMessageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/attendee-message")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendeeMessage")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendeeMessage([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromBody]ManageCoCurricularEventsControllerEventUserMessageRequest manageCoCurricularEventsControllerEventUserMessageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="manageCoCurricularEventsControllerGetAllShiftAttendeesRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/manage-co-curricular-events/{co_curricular_event_dates}/attendees")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendees")]
        [SwaggerResponse(statusCode: 200, type: typeof(ManageCoCurricularEventsControllerGetAllShiftAttendeesResponse), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1ManageCoCurricularEventsByCoCurricularEventDatesAttendees([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromBody]ManageCoCurricularEventsControllerGetAllShiftAttendeesRequest manageCoCurricularEventsControllerGetAllShiftAttendeesRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ManageCoCurricularEventsControllerGetAllShiftAttendeesResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"shiftData\" : {\r\n    \"startTime\" : \"startTime\",\r\n    \"id\" : 6,\r\n    \"endTime\" : \"endTime\",\r\n    \"maxRegistrations\" : 1,\r\n    \"numberOfSignups\" : 0\r\n  },\r\n  \"shiftResponses\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"id\" : 0,\r\n    \"isStudent\" : true,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"id\" : 0,\r\n    \"isStudent\" : true,\r\n    \"email\" : \"email\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ManageCoCurricularEventsControllerGetAllShiftAttendeesResponse>(exampleJson)
            : default(ManageCoCurricularEventsControllerGetAllShiftAttendeesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ManageCoCurricularEvents
        /// </summary>
        /// <remarks>ManageCoCurricularEvents</remarks>
        /// <param name="coCurricularEventDates"></param>
        /// <param name="manageCoCurricularEventsControllerRegisterForEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/api/consumer/v1/student-manage-co-curricular-events/register/{co_curricular_event_dates}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsApiConsumerV1StudentManageCoCurricularEventsRegisterByCoCurricularEventDates")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsApiConsumerV1StudentManageCoCurricularEventsRegisterByCoCurricularEventDates([FromRoute (Name = "co_curricular_event_dates")][Required]string coCurricularEventDates, [FromBody]ManageCoCurricularEventsControllerRegisterForEventRequest manageCoCurricularEventsControllerRegisterForEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CoCurricularGroupAnnouncement
        /// </summary>
        /// <remarks>CoCurricularGroupAnnouncement</remarks>
        /// <param name="serviceGroups"></param>
        /// <param name="coCurricularGroupAnnouncementControllerCreateAnnouncementRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/CoCurricular Events/api/consumer/v1/groups/{service_groups}/messages/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsCoCurricularEventsApiConsumerV1GroupsByServiceGroupsMessagesCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsCoCurricularEventsApiConsumerV1GroupsByServiceGroupsMessagesCreate([FromRoute (Name = "service_groups")][Required]string serviceGroups, [FromBody]CoCurricularGroupAnnouncementControllerCreateAnnouncementRequest coCurricularGroupAnnouncementControllerCreateAnnouncementRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Messag
        /// </summary>
        /// <remarks>User Messag</remarks>
        /// <param name="userMessageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Events/User Message/api/consumer/v1/user-messages/send")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostEventsUserMessageApiConsumerV1UserMessagesSend")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostEventsUserMessageApiConsumerV1UserMessagesSend([FromBody]UserMessageRequest userMessageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
