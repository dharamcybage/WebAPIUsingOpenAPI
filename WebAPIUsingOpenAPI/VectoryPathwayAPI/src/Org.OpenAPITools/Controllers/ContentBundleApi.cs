/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ContentBundleApiController : ControllerBase
    { 
        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="activities"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/detatch/activity/{activities}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchActivityByActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchActivityByActivities([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "activities")][Required]string activities, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="badges"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/detatch/badge/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchBadgeByBadges")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchBadgeByBadges([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "badges")][Required]string badges, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/detatch/form/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchFormByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDetatchFormByForms([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/delete/{content_bundles}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteContentBundleApiConsumerV1PortalAdminBundleDeleteByContentBundles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteContentBundleApiConsumerV1PortalAdminBundleDeleteByContentBundles([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundles")]
        [ValidateModelState]
        [SwaggerOperation("GetContentBundleApiConsumerV1PortalAdminBundles")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ContentBundleDTO>), description: "OK")]
        public virtual IActionResult GetContentBundleApiConsumerV1PortalAdminBundles([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ContentBundleDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"badges\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"activities\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"forms\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ]\r\n}, {\r\n  \"badges\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"activities\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"forms\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 6\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ContentBundleDTO>>(exampleJson)
            : default(List<ContentBundleDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundles/search")]
        [ValidateModelState]
        [SwaggerOperation("GetContentBundleApiConsumerV1PortalAdminBundlesSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ContentBundlesSearchDTO>), description: "OK")]
        public virtual IActionResult GetContentBundleApiConsumerV1PortalAdminBundlesSearch([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ContentBundlesSearchDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"badges\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ],\r\n  \"activities\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ],\r\n  \"forms\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ]\r\n}, {\r\n  \"badges\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ],\r\n  \"activities\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ],\r\n  \"forms\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"sourceDistrictName\" : \"sourceDistrictName\"\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ContentBundlesSearchDTO>>(exampleJson)
            : default(List<ContentBundlesSearchDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/district/{districtId}")]
        [ValidateModelState]
        [SwaggerOperation("PatchContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDistrictByDistrictId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchContentBundleApiConsumerV1PortalAdminBundleByContentBundlesDistrictByDistrictId([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "districtId")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="supportOrgId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/support-org/{supportOrgId}")]
        [ValidateModelState]
        [SwaggerOperation("PatchContentBundleApiConsumerV1PortalAdminBundleByContentBundlesSupportOrgBySupportOrgId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchContentBundleApiConsumerV1PortalAdminBundleByContentBundlesSupportOrgBySupportOrgId([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "supportOrgId")][Required]string supportOrgId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="districtId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle-ohio/district/{districtId}")]
        [ValidateModelState]
        [SwaggerOperation("PatchContentBundleApiConsumerV1PortalAdminBundleOhioDistrictByDistrictId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchContentBundleApiConsumerV1PortalAdminBundleOhioDistrictByDistrictId([FromRoute (Name = "districtId")][Required]string districtId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="activities"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/attach/activity/{activities}")]
        [ValidateModelState]
        [SwaggerOperation("PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachActivityByActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachActivityByActivities([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "activities")][Required]string activities, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="badges"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/attach/badge/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachBadgeByBadges")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachBadgeByBadges([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "badges")][Required]string badges, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Content Bundle
        /// </summary>
        /// <remarks>Content Bundle</remarks>
        /// <param name="contentBundles"></param>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/{content_bundles}/attach/form/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachFormByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostContentBundleApiConsumerV1PortalAdminBundleByContentBundlesAttachFormByForms([FromRoute (Name = "content_bundles")][Required]string contentBundles, [FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CaseloadFilter
        /// </summary>
        /// <remarks>CaseloadFilter</remarks>
        /// <param name="newContentBundleRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Content Bundle/api/consumer/v1/portal-admin/bundle/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostContentBundleApiConsumerV1PortalAdminBundleCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostContentBundleApiConsumerV1PortalAdminBundleCreate([FromBody]NewContentBundleRequest newContentBundleRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
