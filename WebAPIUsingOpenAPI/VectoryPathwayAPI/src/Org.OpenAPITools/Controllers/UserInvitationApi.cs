/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserInvitationApiController : ControllerBase
    { 
        /// <summary>
        /// User Invitation
        /// </summary>
        /// <remarks>User Invitation</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/User Invitation/api/consumer/v1/invitations")]
        [ValidateModelState]
        [SwaggerOperation("GetUserInvitationApiConsumerV1Invitations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SimpleSupportOrgInvitation>), description: "OK")]
        public virtual IActionResult GetUserInvitationApiConsumerV1Invitations([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SimpleSupportOrgInvitation>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"support_org_id\" : 6,\r\n  \"role\" : 0,\r\n  \"id\" : 1,\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"support_org_id\" : 6,\r\n  \"role\" : 0,\r\n  \"id\" : 1,\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<SimpleSupportOrgInvitation>>(exampleJson)
            : default(List<SimpleSupportOrgInvitation>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Invitation
        /// </summary>
        /// <remarks>User Invitation</remarks>
        /// <param name="addInvitationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/User Invitation/api/consumer/v1/invitations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostUserInvitationApiConsumerV1Invitations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostUserInvitationApiConsumerV1Invitations([FromBody]AddInvitationRequest addInvitationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Invitation
        /// </summary>
        /// <remarks>User Invitation</remarks>
        /// <param name="acceptInviteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/User Invitation/api/consumer/v1/invitations/accept")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostUserInvitationApiConsumerV1InvitationsAccept")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostUserInvitationApiConsumerV1InvitationsAccept([FromBody]AcceptInviteRequest acceptInviteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Invitation
        /// </summary>
        /// <remarks>User Invitation</remarks>
        /// <param name="inviteDataRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/User Invitation/api/consumer/v1/invitations/data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostUserInvitationApiConsumerV1InvitationsData")]
        [SwaggerResponse(statusCode: 200, type: typeof(SimpleSupportOrgInvitation), description: "OK")]
        public virtual IActionResult PostUserInvitationApiConsumerV1InvitationsData([FromBody]InviteDataRequest inviteDataRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SimpleSupportOrgInvitation));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"support_org_id\" : 6,\r\n  \"role\" : 0,\r\n  \"id\" : 1,\r\n  \"email\" : \"email\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SimpleSupportOrgInvitation>(exampleJson)
            : default(SimpleSupportOrgInvitation);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
