/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CourseApiController : ControllerBase
    { 
        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="courseSubjects"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Course/api/consumer/v1/courses/subjects/{course_subjects}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCourseApiConsumerV1CoursesSubjectsByCourseSubjects")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteCourseApiConsumerV1CoursesSubjectsByCourseSubjects([FromRoute (Name = "course_subjects")][Required]string courseSubjects, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="coursePathwaySequences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Course/api/consumer/v1/pathway/course-sequences/{course_pathway_sequences}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCourseApiConsumerV1PathwayCourseSequencesByCoursePathwaySequences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteCourseApiConsumerV1PathwayCourseSequencesByCoursePathwaySequences([FromRoute (Name = "course_pathway_sequences")][Required]string coursePathwaySequences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathwaySequences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Course/api/consumer/v1/pathway/sequences/{pathway_sequences}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCourseApiConsumerV1PathwaySequencesByPathwaySequences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteCourseApiConsumerV1PathwaySequencesByPathwaySequences([FromRoute (Name = "pathway_sequences")][Required]string pathwaySequences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathways"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Course/api/consumer/v1/settings/pathways/{pathways}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteCourseApiConsumerV1SettingsPathwaysByPathways")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteCourseApiConsumerV1SettingsPathwaysByPathways([FromRoute (Name = "pathways")][Required]string pathways, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courses"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/course/{courses}")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CourseByCourses")]
        [SwaggerResponse(statusCode: 200, type: typeof(CourseDataResponse), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CourseByCourses([FromRoute (Name = "courses")][Required]string courses, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CourseDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"assignments\" : [ null, null ],\r\n  \"teachers\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"subjects\" : [ {\r\n    \"aliases\" : [ {\r\n      \"alias\" : \"alias\",\r\n      \"id\" : 6\r\n    }, {\r\n      \"alias\" : \"alias\",\r\n      \"id\" : 6\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"priority\" : 5\r\n  }, {\r\n    \"aliases\" : [ {\r\n      \"alias\" : \"alias\",\r\n      \"id\" : 6\r\n    }, {\r\n      \"alias\" : \"alias\",\r\n      \"id\" : 6\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"priority\" : 5\r\n  } ],\r\n  \"course\" : {\r\n    \"sourcedId\" : \"sourcedId\",\r\n    \"form_submission_id\" : 6,\r\n    \"level\" : 1,\r\n    \"ncaa\" : true,\r\n    \"conditional_badge_group_id\" : 2,\r\n    \"career_cluster_id\" : 0,\r\n    \"description\" : \"description\",\r\n    \"grades\" : [ 3, 3 ],\r\n    \"term_id\" : 7,\r\n    \"explicitSchoolIds\" : [ 7, 7 ],\r\n    \"showsOnGradPlan\" : true,\r\n    \"prerequisites\" : {\r\n      \"courseIds\" : [ 5, 5 ],\r\n      \"setting\" : 2\r\n    },\r\n    \"graduationStatus\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"credits\" : 9.301444243932576,\r\n    \"courseLength\" : 4,\r\n    \"name\" : \"name\",\r\n    \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"courseId\" : \"courseId\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"students\" : [ {\r\n    \"grade\" : 1.4658129805029452,\r\n    \"complete\" : true,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"grade\" : 1.4658129805029452,\r\n    \"complete\" : true,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"sections\" : [ {\r\n    \"courseSection\" : {\r\n      \"course_id\" : 0,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 6,\r\n      \"timeDescription\" : \"timeDescription\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"teachers\" : [ {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }, {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    } ],\r\n    \"students\" : [ {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }, {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    } ],\r\n    \"tags\" : [ null, null ]\r\n  }, {\r\n    \"courseSection\" : {\r\n      \"course_id\" : 0,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 6,\r\n      \"timeDescription\" : \"timeDescription\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"teachers\" : [ {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }, {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    } ],\r\n    \"students\" : [ {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }, {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    } ],\r\n    \"tags\" : [ null, null ]\r\n  } ],\r\n  \"tags\" : [ null, null ],\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CourseDataResponse>(exampleJson)
            : default(CourseDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courses"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/course/{courses}/basic")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CourseByCoursesBasic")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CourseDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CourseByCoursesBasic([FromRoute (Name = "courses")][Required]string courses, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CourseDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CourseDTO>>(exampleJson)
            : default(List<CourseDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courses"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/course/{courses}/sections")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CourseByCoursesSections")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CourseSectionDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CourseByCoursesSections([FromRoute (Name = "courses")][Required]string courses, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CourseSectionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"course_id\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 6,\r\n  \"timeDescription\" : \"timeDescription\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"course_id\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 6,\r\n  \"timeDescription\" : \"timeDescription\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CourseSectionDTO>>(exampleJson)
            : default(List<CourseSectionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/course-form/data")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CourseFormData")]
        [SwaggerResponse(statusCode: 200, type: typeof(CoursesFormDataResponse), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CourseFormData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CoursesFormDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CoursesFormDataResponse>(exampleJson)
            : default(CoursesFormDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/course-teachers")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CourseTeachers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BasicUser>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CourseTeachers([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<BasicUser>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<BasicUser>>(exampleJson)
            : default(List<BasicUser>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1Courses")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CourseDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1Courses([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CourseDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CourseDTO>>(exampleJson)
            : default(List<CourseDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Grading
        /// </summary>
        /// <remarks>Course Grading</remarks>
        /// <param name="courses"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses/{courses}/assignments")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CoursesByCoursesAssignments")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CoursesByCoursesAssignments([FromRoute (Name = "courses")][Required]string courses, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Grading
        /// </summary>
        /// <remarks>Course Grading</remarks>
        /// <param name="courses"></param>
        /// <param name="courseAssignments"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses/{courses}/grades/{course_assignments}")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CoursesByCoursesGradesByCourseAssignments")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserCourseGradeResponse>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CoursesByCoursesGradesByCourseAssignments([FromRoute (Name = "courses")][Required]string courses, [FromRoute (Name = "course_assignments")][Required]string courseAssignments, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserCourseGradeResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"sectionName\" : \"sectionName\",\r\n  \"courseName\" : \"courseName\",\r\n  \"instructorName\" : \"instructorName\",\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 2,\r\n    \"school\" : \"school\",\r\n    \"id\" : 7,\r\n    \"fields\" : [ {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"gradeData\" : \"{}\"\r\n}, {\r\n  \"sectionName\" : \"sectionName\",\r\n  \"courseName\" : \"courseName\",\r\n  \"instructorName\" : \"instructorName\",\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 2,\r\n    \"school\" : \"school\",\r\n    \"id\" : 7,\r\n    \"fields\" : [ {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"gradeData\" : \"{}\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<UserCourseGradeResponse>>(exampleJson)
            : default(List<UserCourseGradeResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses/subjects")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CoursesSubjects")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CourseSubjectDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CoursesSubjects([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CourseSubjectDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"aliases\" : [ {\r\n    \"alias\" : \"alias\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"alias\" : \"alias\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"isShownOnGradPlan\" : true\r\n}, {\r\n  \"aliases\" : [ {\r\n    \"alias\" : \"alias\",\r\n    \"id\" : 6\r\n  }, {\r\n    \"alias\" : \"alias\",\r\n    \"id\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"isShownOnGradPlan\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CourseSubjectDTO>>(exampleJson)
            : default(List<CourseSubjectDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses/teaching")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CoursesTeaching")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CourseDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CoursesTeaching([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CourseDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"sourcedId\" : \"sourcedId\",\r\n  \"form_submission_id\" : 6,\r\n  \"level\" : 1,\r\n  \"ncaa\" : true,\r\n  \"conditional_badge_group_id\" : 2,\r\n  \"career_cluster_id\" : 0,\r\n  \"description\" : \"description\",\r\n  \"grades\" : [ 3, 3 ],\r\n  \"term_id\" : 7,\r\n  \"explicitSchoolIds\" : [ 7, 7 ],\r\n  \"showsOnGradPlan\" : true,\r\n  \"prerequisites\" : {\r\n    \"courseIds\" : [ 5, 5 ],\r\n    \"setting\" : 2\r\n  },\r\n  \"graduationStatus\" : 1,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"credits\" : 9.301444243932576,\r\n  \"courseLength\" : 4,\r\n  \"name\" : \"name\",\r\n  \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"courseId\" : \"courseId\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CourseDTO>>(exampleJson)
            : default(List<CourseDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courseSections"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/courses/teaching/{course_sections}/attendance")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendance")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserCourseAttendance>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendance([FromRoute (Name = "course_sections")][Required]string courseSections, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserCourseAttendance>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"sectionName\" : \"sectionName\",\r\n  \"courseName\" : \"courseName\",\r\n  \"instructorName\" : \"instructorName\",\r\n  \"shiftStatus\" : \"shiftStatus\",\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 2,\r\n    \"school\" : \"school\",\r\n    \"id\" : 7,\r\n    \"fields\" : [ {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"attendance\" : {\r\n    \"date\" : \"date\",\r\n    \"reason\" : \"reason\",\r\n    \"course_section_id\" : 1,\r\n    \"teacher_id\" : 5,\r\n    \"student_id\" : 5,\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  }\r\n}, {\r\n  \"sectionName\" : \"sectionName\",\r\n  \"courseName\" : \"courseName\",\r\n  \"instructorName\" : \"instructorName\",\r\n  \"shiftStatus\" : \"shiftStatus\",\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 2,\r\n    \"school\" : \"school\",\r\n    \"id\" : 7,\r\n    \"fields\" : [ {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"attendance\" : {\r\n    \"date\" : \"date\",\r\n    \"reason\" : \"reason\",\r\n    \"course_section_id\" : 1,\r\n    \"teacher_id\" : 5,\r\n    \"student_id\" : 5,\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<UserCourseAttendance>>(exampleJson)
            : default(List<UserCourseAttendance>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/pathway/sequences")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1PathwaySequences")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PathwaySequenceDTO>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1PathwaySequences([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PathwaySequenceDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"pathway_id\" : 6,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"pathway_id\" : 6,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PathwaySequenceDTO>>(exampleJson)
            : default(List<PathwaySequenceDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/pathway/sequences/course-data")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1PathwaySequencesCourseData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CoursePathwaySequenceResponse>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1PathwaySequencesCourseData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CoursePathwaySequenceResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"courses\" : [ {\r\n    \"coursePathway\" : {\r\n      \"course_id\" : 0,\r\n      \"sequence_id\" : 1,\r\n      \"id\" : 5,\r\n      \"order\" : 6\r\n    },\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  }, {\r\n    \"coursePathway\" : {\r\n      \"course_id\" : 0,\r\n      \"sequence_id\" : 1,\r\n      \"id\" : 5,\r\n      \"order\" : 6\r\n    },\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  } ],\r\n  \"sequence\" : {\r\n    \"pathway_id\" : 6,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}, {\r\n  \"courses\" : [ {\r\n    \"coursePathway\" : {\r\n      \"course_id\" : 0,\r\n      \"sequence_id\" : 1,\r\n      \"id\" : 5,\r\n      \"order\" : 6\r\n    },\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  }, {\r\n    \"coursePathway\" : {\r\n      \"course_id\" : 0,\r\n      \"sequence_id\" : 1,\r\n      \"id\" : 5,\r\n      \"order\" : 6\r\n    },\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  } ],\r\n  \"sequence\" : {\r\n    \"pathway_id\" : 6,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CoursePathwaySequenceResponse>>(exampleJson)
            : default(List<CoursePathwaySequenceResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Course/api/consumer/v1/settings/pathways")]
        [ValidateModelState]
        [SwaggerOperation("GetCourseApiConsumerV1SettingsPathways")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetCourseApiConsumerV1SettingsPathways([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courses"></param>
        /// <param name="updateCourseRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course/{courses}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseByCourses")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseByCourses([FromRoute (Name = "courses")][Required]string courses, [FromBody]UpdateCourseRequest updateCourseRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courses"></param>
        /// <param name="courseSections"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course/{courses}/section/{course_sections}/users/{users}")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsers([FromRoute (Name = "courses")][Required]string courses, [FromRoute (Name = "course_sections")][Required]string courseSections, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks> Edit Course</remarks>
        /// <param name="courses"></param>
        /// <param name="courseSections"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course/{courses}/section/{course_sections}/users/{users}/toggle-complete")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsersToggleComplete")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsersToggleComplete([FromRoute (Name = "courses")][Required]string courses, [FromRoute (Name = "course_sections")][Required]string courseSections, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courses"></param>
        /// <param name="courseSections"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course/{courses}/section/{course_sections}/users/{users}/update-grade")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsersUpdateGrade")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseByCoursesSectionByCourseSectionsUsersByUsersUpdateGrade([FromRoute (Name = "courses")][Required]string courses, [FromRoute (Name = "course_sections")][Required]string courseSections, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courseSections"></param>
        /// <param name="createCourseSectionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course-section/{course_sections}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseSectionByCourseSections")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseSectionByCourseSections([FromRoute (Name = "course_sections")][Required]string courseSections, [FromBody]CreateCourseSectionRequest createCourseSectionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courseSections"></param>
        /// <param name="tags"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/course-tags/{course_sections}/tag/{tags}")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CourseTagsByCourseSectionsTagByTags")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CourseTagsByCourseSectionsTagByTags([FromRoute (Name = "course_sections")][Required]string courseSections, [FromRoute (Name = "tags")][Required]string tags, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="courseSubjects"></param>
        /// <param name="createCourseSubjectRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/courses/subjects/{course_subjects}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CoursesSubjectsByCourseSubjects")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CoursesSubjectsByCourseSubjects([FromRoute (Name = "course_subjects")][Required]string courseSubjects, [FromBody]CreateCourseSubjectRequest createCourseSubjectRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courseSections"></param>
        /// <param name="submitAttendanceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/courses/teaching/{course_sections}/attendance")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendance")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendance([FromRoute (Name = "course_sections")][Required]string courseSections, [FromBody]SubmitAttendanceRequest submitAttendanceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="courseSections"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/courses/teaching/{course_sections}/attendance/mark-all-present")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendanceMarkAllPresent")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1CoursesTeachingByCourseSectionsAttendanceMarkAllPresent([FromRoute (Name = "course_sections")][Required]string courseSections, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathwaySequences"></param>
        /// <param name="createPathwaySequenceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/pathway/sequences/{pathway_sequences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1PathwaySequencesByPathwaySequences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1PathwaySequencesByPathwaySequences([FromRoute (Name = "pathway_sequences")][Required]string pathwaySequences, [FromBody]CreatePathwaySequenceRequest createPathwaySequenceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathways"></param>
        /// <param name="createPathwayRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Course/api/consumer/v1/settings/pathways/{pathways}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchCourseApiConsumerV1SettingsPathwaysByPathways")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchCourseApiConsumerV1SettingsPathwaysByPathways([FromRoute (Name = "pathways")][Required]string pathways, [FromBody]CreatePathwayRequest createPathwayRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="createCourseRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/course")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1Course")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1Course([FromBody]CreateCourseRequest createCourseRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Course
        /// </summary>
        /// <remarks>Edit Course</remarks>
        /// <param name="courses"></param>
        /// <param name="createCourseSectionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/course/{courses}/sections")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CourseByCoursesSections")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CourseByCoursesSections([FromRoute (Name = "courses")][Required]string courses, [FromBody]CreateCourseSectionRequest createCourseSectionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Tagging
        /// </summary>
        /// <remarks>Course Tagging</remarks>
        /// <param name="searchCourseTaggingRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/course-tagging/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CourseTaggingSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(CourseTaggingSearchResultResponse), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CourseTaggingSearch([FromBody]SearchCourseTaggingRequest searchCourseTaggingRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CourseTaggingSearchResultResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"results\" : [ {\r\n    \"data\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"subjects\" : [ \"subjects\", \"subjects\" ],\r\n    \"formSubmissionResponse\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approvals\" : [ {\r\n        \"parent\" : {\r\n          \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n          \"lastName\" : \"lastName\",\r\n          \"firstName\" : \"firstName\",\r\n          \"approved\" : true,\r\n          \"phone\" : \"phone\",\r\n          \"student_id\" : 5,\r\n          \"id\" : 5,\r\n          \"email\" : \"email\",\r\n          \"token\" : \"token\",\r\n          \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n        },\r\n        \"signatureImageUrl\" : \"signatureImageUrl\"\r\n      }, {\r\n        \"parent\" : {\r\n          \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n          \"lastName\" : \"lastName\",\r\n          \"firstName\" : \"firstName\",\r\n          \"approved\" : true,\r\n          \"phone\" : \"phone\",\r\n          \"student_id\" : 5,\r\n          \"id\" : 5,\r\n          \"email\" : \"email\",\r\n          \"token\" : \"token\",\r\n          \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n        },\r\n        \"signatureImageUrl\" : \"signatureImageUrl\"\r\n      } ],\r\n      \"associatedUsers\" : [ {\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"formSubmissionId\" : 6,\r\n        \"id\" : 0\r\n      }, {\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"formSubmissionId\" : 6,\r\n        \"id\" : 0\r\n      } ],\r\n      \"id\" : 1,\r\n      \"fields\" : [ {\r\n        \"attachedValue\" : {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        },\r\n        \"values\" : [ {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        }, {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        } ],\r\n        \"name\" : \"name\",\r\n        \"formSubmissionFieldId\" : 9,\r\n        \"id\" : 2,\r\n        \"type\" : 3,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"attachedValue\" : {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        },\r\n        \"values\" : [ {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        }, {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        } ],\r\n        \"name\" : \"name\",\r\n        \"formSubmissionFieldId\" : 9,\r\n        \"id\" : 2,\r\n        \"type\" : 3,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"user\" : {\r\n        \"firstName\" : \"firstName\",\r\n        \"lastName\" : \"lastName\",\r\n        \"role\" : 1,\r\n        \"school\" : \"school\",\r\n        \"grade\" : 6,\r\n        \"id\" : 5,\r\n        \"profileImageUrl\" : \"profileImageUrl\",\r\n        \"email\" : \"email\"\r\n      }\r\n    }\r\n  }, {\r\n    \"data\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"subjects\" : [ \"subjects\", \"subjects\" ],\r\n    \"formSubmissionResponse\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approvals\" : [ {\r\n        \"parent\" : {\r\n          \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n          \"lastName\" : \"lastName\",\r\n          \"firstName\" : \"firstName\",\r\n          \"approved\" : true,\r\n          \"phone\" : \"phone\",\r\n          \"student_id\" : 5,\r\n          \"id\" : 5,\r\n          \"email\" : \"email\",\r\n          \"token\" : \"token\",\r\n          \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n        },\r\n        \"signatureImageUrl\" : \"signatureImageUrl\"\r\n      }, {\r\n        \"parent\" : {\r\n          \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n          \"lastName\" : \"lastName\",\r\n          \"firstName\" : \"firstName\",\r\n          \"approved\" : true,\r\n          \"phone\" : \"phone\",\r\n          \"student_id\" : 5,\r\n          \"id\" : 5,\r\n          \"email\" : \"email\",\r\n          \"token\" : \"token\",\r\n          \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n        },\r\n        \"signatureImageUrl\" : \"signatureImageUrl\"\r\n      } ],\r\n      \"associatedUsers\" : [ {\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"formSubmissionId\" : 6,\r\n        \"id\" : 0\r\n      }, {\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"formSubmissionId\" : 6,\r\n        \"id\" : 0\r\n      } ],\r\n      \"id\" : 1,\r\n      \"fields\" : [ {\r\n        \"attachedValue\" : {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        },\r\n        \"values\" : [ {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        }, {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        } ],\r\n        \"name\" : \"name\",\r\n        \"formSubmissionFieldId\" : 9,\r\n        \"id\" : 2,\r\n        \"type\" : 3,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"attachedValue\" : {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        },\r\n        \"values\" : [ {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        }, {\r\n          \"id\" : 7,\r\n          \"value\" : \"value\"\r\n        } ],\r\n        \"name\" : \"name\",\r\n        \"formSubmissionFieldId\" : 9,\r\n        \"id\" : 2,\r\n        \"type\" : 3,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"user\" : {\r\n        \"firstName\" : \"firstName\",\r\n        \"lastName\" : \"lastName\",\r\n        \"role\" : 1,\r\n        \"school\" : \"school\",\r\n        \"grade\" : 6,\r\n        \"id\" : 5,\r\n        \"profileImageUrl\" : \"profileImageUrl\",\r\n        \"email\" : \"email\"\r\n      }\r\n    }\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CourseTaggingSearchResultResponse>(exampleJson)
            : default(CourseTaggingSearchResultResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Tagging
        /// </summary>
        /// <remarks>Course Tagging</remarks>
        /// <param name="bulkTagCoursesRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/course-tagging/tag")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CourseTaggingTag")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CourseTaggingTag([FromBody]BulkTagCoursesRequest bulkTagCoursesRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Grading
        /// </summary>
        /// <remarks>Course Grading</remarks>
        /// <param name="courseAssignments"></param>
        /// <param name="submitGradeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses-assignments/{course_assignments}/grades")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesAssignmentsByCourseAssignmentsGrades")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesAssignmentsByCourseAssignmentsGrades([FromRoute (Name = "course_assignments")][Required]string courseAssignments, [FromBody]List<SubmitGradeRequest> submitGradeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Assignment
        /// </summary>
        /// <remarks>Course Assignment</remarks>
        /// <param name="courses"></param>
        /// <param name="createCourseAssignmentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/{courses}/assignments")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesByCoursesAssignments")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesByCoursesAssignments([FromRoute (Name = "courses")][Required]string courses, [FromBody]CreateCourseAssignmentRequest createCourseAssignmentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="createCourseSubjectRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/subjects")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesSubjects")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesSubjects([FromBody]CreateCourseSubjectRequest createCourseSubjectRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="uploadCoursesCSVRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/upload/classes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesUploadClasses")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesUploadClasses([FromBody]UploadCoursesCSVRequest uploadCoursesCSVRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="uploadCoursesCSVRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/upload/courses")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesUploadCourses")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesUploadCourses([FromBody]UploadCoursesCSVRequest uploadCoursesCSVRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="coursesControllerUploadEarnedCreditsCSVRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/upload/earned-credits")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesUploadEarnedCredits")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesUploadEarnedCredits([FromBody]CoursesControllerUploadEarnedCreditsCSVRequest coursesControllerUploadEarnedCreditsCSVRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course
        /// </summary>
        /// <remarks>Course</remarks>
        /// <param name="uploadCoursesCSVRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/courses/upload/enrollments")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1CoursesUploadEnrollments")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1CoursesUploadEnrollments([FromBody]UploadCoursesCSVRequest uploadCoursesCSVRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathwaySequences"></param>
        /// <param name="courses"></param>
        /// <param name="addCourseToSequenceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/pathway/course-sequences/{pathway_sequences}/{courses}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1PathwayCourseSequencesByPathwaySequencesByCourses")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1PathwayCourseSequencesByPathwaySequencesByCourses([FromRoute (Name = "pathway_sequences")][Required]string pathwaySequences, [FromRoute (Name = "courses")][Required]string courses, [FromBody]AddCourseToSequenceRequest addCourseToSequenceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="pathways"></param>
        /// <param name="createPathwaySequenceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/pathway/sequences/{pathways}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1PathwaySequencesByPathways")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1PathwaySequencesByPathways([FromRoute (Name = "pathways")][Required]string pathways, [FromBody]CreatePathwaySequenceRequest createPathwaySequenceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Course Pathways
        /// </summary>
        /// <remarks>Course Pathways</remarks>
        /// <param name="createPathwayRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Course/api/consumer/v1/settings/pathways")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostCourseApiConsumerV1SettingsPathways")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostCourseApiConsumerV1SettingsPathways([FromBody]CreatePathwayRequest createPathwayRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
