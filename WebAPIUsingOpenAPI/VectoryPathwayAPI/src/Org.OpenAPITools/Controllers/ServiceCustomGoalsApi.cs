/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ServiceCustomGoalsApiController : ControllerBase
    { 
        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="customGoals"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/{custom_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteServiceCustomGoalsApiConsumerV1CustomgoalsByCustomGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteServiceCustomGoalsApiConsumerV1CustomgoalsByCustomGoals([FromRoute (Name = "custom_goals")][Required]string customGoals, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Goals
        /// </summary>
        /// <remarks>Edit Service Goals</remarks>
        /// <param name="serviceLifetimeGoals"></param>
        /// <param name="createLearningTargetGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Service Custom Goals/api/consumer/v1/goals/lifetime/{service_lifetime_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteServiceCustomGoalsApiConsumerV1GoalsLifetimeByServiceLifetimeGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteServiceCustomGoalsApiConsumerV1GoalsLifetimeByServiceLifetimeGoals([FromRoute (Name = "service_lifetime_goals")][Required]string serviceLifetimeGoals, [FromBody]CreateLearningTargetGoalRequest createLearningTargetGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1Customgoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1Customgoals([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/assigned")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1CustomgoalsAssigned")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1CustomgoalsAssigned([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/available")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1CustomgoalsAvailable")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullCustomGoalPlan>), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1CustomgoalsAvailable([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullCustomGoalPlan>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"goal\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"goal\" : 6.027456183070403,\r\n    \"isStudentCreated\" : true,\r\n    \"school_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 5,\r\n    \"school_year_id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"rejected\" : true,\r\n  \"verified\" : true,\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"plan\" : \"plan\"\r\n}, {\r\n  \"goal\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"goal\" : 6.027456183070403,\r\n    \"isStudentCreated\" : true,\r\n    \"school_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 5,\r\n    \"school_year_id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"rejected\" : true,\r\n  \"verified\" : true,\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"plan\" : \"plan\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullCustomGoalPlan>>(exampleJson)
            : default(List<FullCustomGoalPlan>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal Plan
        /// </summary>
        /// <remarks>Service Goal Plan</remarks>
        /// <param name="customGoals"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/plan/{custom_goals}")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1CustomgoalsPlanByCustomGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(ServiceGoalPlanDTO), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1CustomgoalsPlanByCustomGoals([FromRoute (Name = "custom_goals")][Required]string customGoals, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ServiceGoalPlanDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 6,\r\n  \"rejected\" : true,\r\n  \"service_custom_goal_id\" : 1,\r\n  \"verified\" : true,\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"plan\" : \"plan\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ServiceGoalPlanDTO>(exampleJson)
            : default(ServiceGoalPlanDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal Plan
        /// </summary>
        /// <remarks>Service Goal Plan</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/plan/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1CustomgoalsPlanPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(FullCustomGoalPlan), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1CustomgoalsPlanPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FullCustomGoalPlan));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"goal\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"goal\" : 6.027456183070403,\r\n    \"isStudentCreated\" : true,\r\n    \"school_id\" : 5,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 5,\r\n    \"school_year_id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"rejected\" : true,\r\n  \"verified\" : true,\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"plan\" : \"plan\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FullCustomGoalPlan>(exampleJson)
            : default(FullCustomGoalPlan);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal File
        /// </summary>
        /// <remarks>Service Goal File</remarks>
        /// <param name="userCustomGoalFiles"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/goals/file/{user_custom_goal_files}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1GoalsFileByUserCustomGoalFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1GoalsFileByUserCustomGoalFiles([FromRoute (Name = "user_custom_goal_files")][Required]string userCustomGoalFiles, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/goals/grades/classnames")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1GoalsGradesClassnames")]
        [SwaggerResponse(statusCode: 200, type: typeof(SupportedClassNamesResponse), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1GoalsGradesClassnames([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SupportedClassNamesResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"names\" : [ {\r\n    \"school_year_id\" : 0,\r\n    \"class\" : \"class\"\r\n  }, {\r\n    \"school_year_id\" : 0,\r\n    \"class\" : \"class\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SupportedClassNamesResponse>(exampleJson)
            : default(SupportedClassNamesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Custom Goals/api/consumer/v1/goals/lifetime")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceCustomGoalsApiConsumerV1GoalsLifetime")]
        [SwaggerResponse(statusCode: 200, type: typeof(LifetimeGoalsResponse), description: "OK")]
        public virtual IActionResult GetServiceCustomGoalsApiConsumerV1GoalsLifetime([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LifetimeGoalsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"goals\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"goal\" : 0.8008281904610115,\r\n    \"school_id\" : 5,\r\n    \"gradYear\" : 6,\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"goal\" : 0.8008281904610115,\r\n    \"school_id\" : 5,\r\n    \"gradYear\" : 6,\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LifetimeGoalsResponse>(exampleJson)
            : default(LifetimeGoalsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal Plan
        /// </summary>
        /// <remarks>Service Goal Plan</remarks>
        /// <param name="serviceGoalPlans"></param>
        /// <param name="approveReject"></param>
        /// <param name="serviceGoalApproveRejectFeedbackRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/plan/{service_goal_plans}/{approve_reject}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchServiceCustomGoalsApiConsumerV1CustomgoalsPlanByServiceGoalPlansByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchServiceCustomGoalsApiConsumerV1CustomgoalsPlanByServiceGoalPlansByApproveReject([FromRoute (Name = "service_goal_plans")][Required]string serviceGoalPlans, [FromRoute (Name = "approve_reject")][Required]string approveReject, [FromBody]ServiceGoalApproveRejectFeedbackRequest serviceGoalApproveRejectFeedbackRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Goals
        /// </summary>
        /// <remarks>Edit Service Goals</remarks>
        /// <param name="serviceLifetimeGoals"></param>
        /// <param name="updateLifetimeServiceGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Service Custom Goals/api/consumer/v1/goals/lifetime/{service_lifetime_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchServiceCustomGoalsApiConsumerV1GoalsLifetimeByServiceLifetimeGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchServiceCustomGoalsApiConsumerV1GoalsLifetimeByServiceLifetimeGoals([FromRoute (Name = "service_lifetime_goals")][Required]string serviceLifetimeGoals, [FromBody]UpdateLifetimeServiceGoalRequest updateLifetimeServiceGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="createCustomGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceCustomGoalsApiConsumerV1Customgoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceCustomGoalsApiConsumerV1Customgoals([FromBody]CreateCustomGoalRequest createCustomGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal Plan
        /// </summary>
        /// <remarks>Service Goal Plan</remarks>
        /// <param name="createGoalPlanRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/plan")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceCustomGoalsApiConsumerV1CustomgoalsPlan")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceCustomGoalsApiConsumerV1CustomgoalsPlan([FromBody]CreateGoalPlanRequest createGoalPlanRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goals
        /// </summary>
        /// <remarks>Service Goals</remarks>
        /// <param name="customGoals"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Custom Goals/api/consumer/v1/customgoals/select/{custom_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceCustomGoalsApiConsumerV1CustomgoalsSelectByCustomGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceCustomGoalsApiConsumerV1CustomgoalsSelectByCustomGoals([FromRoute (Name = "custom_goals")][Required]string customGoals, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Goal File
        /// </summary>
        /// <remarks>Service Goal File</remarks>
        /// <param name="userServiceCustomGoals"></param>
        /// <param name="uploadServiceGoalFileRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Custom Goals/api/consumer/v1/goals/file/{user_service_custom_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceCustomGoalsApiConsumerV1GoalsFileByUserServiceCustomGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceCustomGoalsApiConsumerV1GoalsFileByUserServiceCustomGoals([FromRoute (Name = "user_service_custom_goals")][Required]string userServiceCustomGoals, [FromBody]UploadServiceGoalFileRequest uploadServiceGoalFileRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Goals
        /// </summary>
        /// <remarks>Edit Service Goals</remarks>
        /// <param name="createLearningTargetGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Custom Goals/api/consumer/v1/goals/lifetime")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceCustomGoalsApiConsumerV1GoalsLifetime")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceCustomGoalsApiConsumerV1GoalsLifetime([FromBody]CreateLearningTargetGoalRequest createLearningTargetGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
