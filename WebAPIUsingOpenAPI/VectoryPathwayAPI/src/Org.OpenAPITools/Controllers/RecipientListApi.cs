/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RecipientListApiController : ControllerBase
    { 
        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="recipientLists"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/{recipient_lists}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteRecipientListApiConsumerV1RecipientListsByRecipientLists")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteRecipientListApiConsumerV1RecipientListsByRecipientLists([FromRoute (Name = "recipient_lists")][Required]string recipientLists, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/external-direct-forms/data/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1ExternalDirectFormsDataByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalDirectFormResponse), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1ExternalDirectFormsDataByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalDirectFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"submissionResponse\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"isRejectable\" : true,\r\n  \"isComplete\" : true,\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalDirectFormResponse>(exampleJson)
            : default(ExternalDirectFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/recipient-lists")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1RecipientLists")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RecipientListDTO>), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1RecipientLists([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RecipientListDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RecipientListDTO>>(exampleJson)
            : default(List<RecipientListDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="recipientLists"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/{recipient_lists}")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1RecipientListsByRecipientLists")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RecipientListDetailsDTO>), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1RecipientListsByRecipientLists([FromRoute (Name = "recipient_lists")][Required]string recipientLists, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<RecipientListDetailsDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"courses\" : [ {\r\n    \"responsibility\" : 0,\r\n    \"courseId\" : 6\r\n  }, {\r\n    \"responsibility\" : 0,\r\n    \"courseId\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"students\" : [ {\r\n    \"studentId\" : 1,\r\n    \"responsibility\" : 7\r\n  }, {\r\n    \"studentId\" : 1,\r\n    \"responsibility\" : 7\r\n  } ],\r\n  \"addParents\" : true,\r\n  \"grades\" : [ {\r\n    \"responsibility\" : 2,\r\n    \"grade\" : 5\r\n  }, {\r\n    \"responsibility\" : 2,\r\n    \"grade\" : 5\r\n  } ],\r\n  \"id\" : 7,\r\n  \"parentResponsibility\" : 9,\r\n  \"contacts\" : [ {\r\n    \"contactId\" : 1,\r\n    \"responsibility\" : 5\r\n  }, {\r\n    \"contactId\" : 1,\r\n    \"responsibility\" : 5\r\n  } ],\r\n  \"admins\" : [ {\r\n    \"responsibility\" : 4,\r\n    \"adminId\" : 2\r\n  }, {\r\n    \"responsibility\" : 4,\r\n    \"adminId\" : 2\r\n  } ],\r\n  \"manuals\" : [ {\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\"\r\n  } ]\r\n}, {\r\n  \"courses\" : [ {\r\n    \"responsibility\" : 0,\r\n    \"courseId\" : 6\r\n  }, {\r\n    \"responsibility\" : 0,\r\n    \"courseId\" : 6\r\n  } ],\r\n  \"name\" : \"name\",\r\n  \"students\" : [ {\r\n    \"studentId\" : 1,\r\n    \"responsibility\" : 7\r\n  }, {\r\n    \"studentId\" : 1,\r\n    \"responsibility\" : 7\r\n  } ],\r\n  \"addParents\" : true,\r\n  \"grades\" : [ {\r\n    \"responsibility\" : 2,\r\n    \"grade\" : 5\r\n  }, {\r\n    \"responsibility\" : 2,\r\n    \"grade\" : 5\r\n  } ],\r\n  \"id\" : 7,\r\n  \"parentResponsibility\" : 9,\r\n  \"contacts\" : [ {\r\n    \"contactId\" : 1,\r\n    \"responsibility\" : 5\r\n  }, {\r\n    \"contactId\" : 1,\r\n    \"responsibility\" : 5\r\n  } ],\r\n  \"admins\" : [ {\r\n    \"responsibility\" : 4,\r\n    \"adminId\" : 2\r\n  }, {\r\n    \"responsibility\" : 4,\r\n    \"adminId\" : 2\r\n  } ],\r\n  \"manuals\" : [ {\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\"\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RecipientListDetailsDTO>>(exampleJson)
            : default(List<RecipientListDetailsDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/direct-sends/{forms}/signatures")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1RecipientListsDirectSendsByFormsSignatures")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DirectFormSignatureDTO>), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1RecipientListsDirectSendsByFormsSignatures([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DirectFormSignatureDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"role\" : \"role\",\r\n  \"rejected\" : true,\r\n  \"formSubmissionId\" : 0,\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"isRejectable\" : true,\r\n  \"responsibility\" : 5,\r\n  \"organization\" : \"organization\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"rejectionFeedback\" : \"rejectionFeedback\",\r\n  \"email\" : \"email\",\r\n  \"status\" : 6,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"role\" : \"role\",\r\n  \"rejected\" : true,\r\n  \"formSubmissionId\" : 0,\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"isRejectable\" : true,\r\n  \"responsibility\" : 5,\r\n  \"organization\" : \"organization\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"rejectionFeedback\" : \"rejectionFeedback\",\r\n  \"email\" : \"email\",\r\n  \"status\" : 6,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DirectFormSignatureDTO>>(exampleJson)
            : default(List<DirectFormSignatureDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/rolodex")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1RecipientListsRolodex")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetRecipientListRolodexResponse), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1RecipientListsRolodex([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(GetRecipientListRolodexResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"courses\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  } ],\r\n  \"students\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"grade\" : 6,\r\n    \"id\" : 0,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"grade\" : 6,\r\n    \"id\" : 0,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"admins\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"id\" : 5,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"id\" : 5,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"contacts\" : [ {\r\n    \"role\" : \"role\",\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"role\" : \"role\",\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"email\" : \"email\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetRecipientListRolodexResponse>(exampleJson)
            : default(GetRecipientListRolodexResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/rolodex/parents")]
        [ValidateModelState]
        [SwaggerOperation("GetRecipientListApiConsumerV1RecipientListsRolodexParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<GetRecipientListRolodexResponseParentDTO>), description: "OK")]
        public virtual IActionResult GetRecipientListApiConsumerV1RecipientListsRolodexParents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<GetRecipientListRolodexResponseParentDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"studentId\" : 6,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"id\" : 0,\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"studentId\" : 6,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"id\" : 0,\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<GetRecipientListRolodexResponseParentDTO>>(exampleJson)
            : default(List<GetRecipientListRolodexResponseParentDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="token"></param>
        /// <param name="completeExternalDirectFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Recipient List/api/consumer/v1/external-direct-forms/data/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRecipientListApiConsumerV1ExternalDirectFormsDataByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostRecipientListApiConsumerV1ExternalDirectFormsDataByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CompleteExternalDirectFormRequest completeExternalDirectFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="token"></param>
        /// <param name="rejectExternalDirectFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Recipient List/api/consumer/v1/external-direct-forms/data/{token}/reject")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRecipientListApiConsumerV1ExternalDirectFormsDataByTokenReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostRecipientListApiConsumerV1ExternalDirectFormsDataByTokenReject([FromRoute (Name = "token")][Required]string token, [FromBody]RejectExternalDirectFormRequest rejectExternalDirectFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="addRecipientListRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Recipient List/api/consumer/v1/recipient-lists")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRecipientListApiConsumerV1RecipientLists")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostRecipientListApiConsumerV1RecipientLists([FromBody]AddRecipientListRequest addRecipientListRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="getStudentIdsInCoursesRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/rolodex/courses-students")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRecipientListApiConsumerV1RecipientListsRolodexCoursesStudents")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult PostRecipientListApiConsumerV1RecipientListsRolodexCoursesStudents([FromBody]GetStudentIdsInCoursesRequest getStudentIdsInCoursesRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="sendFormDirectlyRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Recipient List/api/consumer/v1/recipient-lists/send")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRecipientListApiConsumerV1RecipientListsSend")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostRecipientListApiConsumerV1RecipientListsSend([FromBody]SendFormDirectlyRequest sendFormDirectlyRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
