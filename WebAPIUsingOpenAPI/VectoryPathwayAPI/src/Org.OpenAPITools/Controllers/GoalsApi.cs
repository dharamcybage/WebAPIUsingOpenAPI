/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class GoalsApiController : ControllerBase
    { 
        /// <summary>
        /// Goals
        /// </summary>
        /// <remarks>Goals</remarks>
        /// <param name="goals"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Goals/api/consumer/v1/goals/{goals}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteGoalsApiConsumerV1GoalsByGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteGoalsApiConsumerV1GoalsByGoals([FromRoute (Name = "goals")][Required]string goals, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Goals
        /// </summary>
        /// <remarks>Goals</remarks>
        /// <param name="schoolYearServiceGoals"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Goals/api/consumer/v1/goals/school-year/{school_year_service_goals}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteGoalsApiConsumerV1GoalsSchoolYearBySchoolYearServiceGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteGoalsApiConsumerV1GoalsSchoolYearBySchoolYearServiceGoals([FromRoute (Name = "school_year_service_goals")][Required]string schoolYearServiceGoals, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Goals
        /// </summary>
        /// <remarks>Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Goals/api/consumer/v1/goals")]
        [ValidateModelState]
        [SwaggerOperation("GetGoalsApiConsumerV1Goals")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminGoalDataResponse>), description: "OK")]
        public virtual IActionResult GetGoalsApiConsumerV1Goals([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminGoalDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"isIndividualStudentGoal\" : true,\r\n  \"goal\" : 5.962133916683182,\r\n  \"createdBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"studentsAssigned\" : 6,\r\n  \"id\" : 1,\r\n  \"type\" : 0\r\n}, {\r\n  \"isIndividualStudentGoal\" : true,\r\n  \"goal\" : 5.962133916683182,\r\n  \"createdBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"studentsAssigned\" : 6,\r\n  \"id\" : 1,\r\n  \"type\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminGoalDataResponse>>(exampleJson)
            : default(List<AdminGoalDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Goals
        /// </summary>
        /// <remarks>Goals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Goals/api/consumer/v1/goals/school-year")]
        [ValidateModelState]
        [SwaggerOperation("GetGoalsApiConsumerV1GoalsSchoolYear")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SchoolYearServiceGoalResponse>), description: "OK")]
        public virtual IActionResult GetGoalsApiConsumerV1GoalsSchoolYear([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SchoolYearServiceGoalResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"goal\" : 6.027456183070403,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 5,\r\n  \"id\" : 0,\r\n  \"school_year_id\" : 1\r\n}, {\r\n  \"goal\" : 6.027456183070403,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 5,\r\n  \"id\" : 0,\r\n  \"school_year_id\" : 1\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<SchoolYearServiceGoalResponse>>(exampleJson)
            : default(List<SchoolYearServiceGoalResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Goals
        /// </summary>
        /// <remarks>Goals</remarks>
        /// <param name="goals"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Goals/api/consumer/v1/goals/{goals}/addstudent/{users}")]
        [ValidateModelState]
        [SwaggerOperation("PatchGoalsApiConsumerV1GoalsByGoalsAddstudentByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchGoalsApiConsumerV1GoalsByGoalsAddstudentByUsers([FromRoute (Name = "goals")][Required]string goals, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add Goals
        /// </summary>
        /// <remarks>Add Goals</remarks>
        /// <param name="createGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Goals/api/consumer/v1/goals")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostGoalsApiConsumerV1Goals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostGoalsApiConsumerV1Goals([FromBody]CreateGoalRequest createGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add Goals
        /// </summary>
        /// <remarks>Add Goals</remarks>
        /// <param name="createSchoolYearServiceGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Goals/api/consumer/v1/goals/school-year")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostGoalsApiConsumerV1GoalsSchoolYear")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostGoalsApiConsumerV1GoalsSchoolYear([FromBody]CreateSchoolYearServiceGoalRequest createSchoolYearServiceGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
