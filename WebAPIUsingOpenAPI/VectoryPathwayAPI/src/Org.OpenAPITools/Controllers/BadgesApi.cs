/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BadgesApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/available-academic-tests/badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/available-academic-tests/badges")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1AvailableAcademicTestsBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1AvailableAcademicTestsBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/available-credentials/badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/available-credentials/badges")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1AvailableCredentialsBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1AvailableCredentialsBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/available-form-fields/badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/available-form-fields/badges")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1AvailableFormFieldsBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1AvailableFormFieldsBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-action-center/badge-library/existing/:users</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-action-center/badge-library/existing/{users}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeActionCenterBadgeLibraryExistingUsersGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeActionCenterBadgeLibraryExistingUsersGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-action-center/:badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-action-center/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeActionCenterBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeActionCenterBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge-action-center/bulk-toggle-user-activity/:badges/:activities/:finishActivity</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge-action-center/bulk-toggle-user-activity/{badges}/{activities}/{finishActivity}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeActionCenterBulkToggleUserActivityBadgesActivitiesFinishActivityPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeActionCenterBulkToggleUserActivityBadgesActivitiesFinishActivityPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge-action-center/toggle-user-activity/:users/:activities/:finishActivity</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge-action-center/toggle-user-activity/{users}/{activities}/{finishActivity}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeActionCenterToggleUserActivityUsersActivitiesFinishActivityPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeActionCenterToggleUserActivityUsersActivitiesFinishActivityPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-assertions-data/:token</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-assertions-data/{token}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeAssertionsDataTokenGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeAssertionsDataTokenGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges/archive</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}/archive")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesArchiveGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesArchiveGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges/certification</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}/certification")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesCertificationGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesCertificationGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges/clone</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}/clone")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesCloneGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesCloneGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge/:badges/clone-with-students</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge/{badges}/clone-with-students")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesCloneWithStudentsPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesCloneWithStudentsPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges/conditional-badge-groups</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}/conditional-badge-groups")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesConditionalBadgeGroupsGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesConditionalBadgeGroupsGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges/duplicates</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}/duplicates")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesDuplicatesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesDuplicatesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge/:badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge/:badges</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeBadgesPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeBadgesPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge-category/adjust/:badges</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge-category/adjust/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeCategoryAdjustBadgesPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeCategoryAdjustBadgesPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badge-category/:badge_categories</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badge-category/{badge_categories}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeCategoryBadgeCategoriesDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgeCategoryBadgeCategoriesDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-category/categories/badge/:badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-category/categories/badge/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeCategoryCategoriesBadgeBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeCategoryCategoriesBadgeBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-category/categories</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-category/categories")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeCategoryCategoriesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeCategoryCategoriesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge-category</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge-category")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeCategoryPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeCategoryPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-academic-tests/:badges/list-item/:form_list_items/test/:academic_tests/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-academic-tests/{badges}/list-item/{form_list_items}/test/{academic_tests}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsAcademicTestsBadgesListItemFormListItemsTestAcademicTestsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsAcademicTestsBadgesListItemFormListItemsTestAcademicTestsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-activity/:badges/list-item/:form_list_items/activity/:activities/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-activity/{badges}/list-item/{form_list_items}/activity/{activities}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsActivityBadgesListItemFormListItemsActivityActivitiesStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsActivityBadgesListItemFormListItemsActivityActivitiesStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-adv-courses/:badges/list-item/:form_list_items/course-data/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-adv-courses/{badges}/list-item/{form_list_items}/course-data/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsAdvCoursesBadgesListItemFormListItemsCourseDataStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsAdvCoursesBadgesListItemFormListItemsCourseDataStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points/:badges/form/:forms</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points/{badges}/form/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsBadgesFormFormsPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsBadgesFormFormsPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-decision-points/:badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-decision-points/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsBadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsBadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-child-badges/:parent_id/list-item/:form_list_items/child/:child_id/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-child-badges/{parent_id}/list-item/{form_list_items}/child/{child_id}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsChildBadgesParentIdListItemFormListItemsChildChildIdStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsChildBadgesParentIdListItemFormListItemsChildChildIdStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-delete-field/:badge_decision_points</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-delete-field/{badge_decision_points}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsDeleteFieldBadgeDecisionPointsPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsDeleteFieldBadgeDecisionPointsPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-field/:badges/form-field/:form_fields/list-field/:form_list_items/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-field/{badges}/form-field/{form_fields}/list-field/{form_list_items}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsFieldBadgesFormFieldFormFieldsListFieldFormListItemsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsFieldBadgesFormFieldFormFieldsListFieldFormListItemsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badge-decision-points-skill/:badges/list-item/:form_list_items/skill/:skills/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badge-decision-points-skill/{badges}/list-item/{form_list_items}/skill/{skills}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeDecisionPointsSkillBadgesListItemFormListItemsSkillSkillsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgeDecisionPointsSkillBadgesListItemFormListItemsSkillSkillsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badge-library/:badges</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badge-library/{badges}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeLibraryBadgesPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgeLibraryBadgesPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-library/existing</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-library/existing")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeLibraryExistingGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeLibraryExistingGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badge-library</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badge-library")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgeLibraryGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgeLibraryGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badges-add/:badges/advancedCourses</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badges-add/{badges}/advancedCourses")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesAddBadgesAdvancedCoursesPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgesAddBadgesAdvancedCoursesPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges-attach/:badges/academicTests/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges-attach/{badges}/academicTests/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesAttachBadgesAcademicTestsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesAttachBadgesAcademicTestsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges-attach/:badges/formfields/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges-attach/{badges}/formfields/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesAttachBadgesFormfieldsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesAttachBadgesFormfieldsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges-attach-children/:parent_id/child-badges/:child_id/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges-attach-children/{parent_id}/child-badges/{child_id}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesAttachChildrenParentIdChildBadgesChildIdStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesAttachChildrenParentIdChildBadgesChildIdStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/activity/:activities/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/activity/{activities}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesActivityActivitiesStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesActivityActivitiesStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badges/:badges/conditional-badge-group</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badges/{badges}/conditional-badge-group")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesConditionalBadgeGroupPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesConditionalBadgeGroupPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/course/:courses/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/course/{courses}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesCourseCoursesStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesCourseCoursesStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/credential/:credentials/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/credential/{credentials}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesCredentialCredentialsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesCredentialCredentialsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/experience-count-data/:count</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/experience-count-data/{count}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesExperienceCountDataCountPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesExperienceCountDataCountPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges/:badges/experience-criteria/:badge_advanced_experiences</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges/{badges}/experience-criteria/{badge_advanced_experiences}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesExperienceCriteriaBadgeAdvancedExperiencesDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesExperienceCriteriaBadgeAdvancedExperiencesDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/experience-criteria/:form_list_items</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/experience-criteria/{form_list_items}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesExperienceCriteriaFormListItemsPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesExperienceCriteriaFormListItemsPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/experience/:experiences/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/experience/{experiences}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesExperienceExperiencesStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesExperienceExperiencesStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badges/:badges/export-data</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badges/{badges}/export-data")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesExportDataPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesExportDataPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/hours-data</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/hours-data")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesHoursDataPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesHoursDataPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/number-career-surveys/:count</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/number-career-surveys/{count}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesNumberCareerSurveysCountPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesNumberCareerSurveysCountPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/openid</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/openid")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesOpenidPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesOpenidPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges/:badges/preview</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges/{badges}/preview")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesPreviewGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesPreviewGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/skill/:skills/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/skill/{skills}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesSkillSkillsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesSkillSkillsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/skillgroup/:skill_groups/:status</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/skillgroup/{skill_groups}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesSkillgroupSkillGroupsStatusPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesSkillgroupSkillGroupsStatusPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges/:badges/user/:users</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges/{badges}/user/{users}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUserUsersGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUserUsersGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/:badges/users/add-all</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users/add-all")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersAddAllPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersAddAllPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges/:badges/users</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badges/:badges/users</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges/:badges/users/progress</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users/progress")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersProgressGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersProgressGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges/:badges/users/:users</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users/{users}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersUsersDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersUsersDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges/:badges/users/:users/progress</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges/{badges}/users/{users}/progress")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesBadgesUsersUsersProgressGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesBadgesUsersUsersProgressGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges/conditional-badge-group/:conditional_badge_groups</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges/conditional-badge-group/{conditional_badge_groups}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesConditionalBadgeGroupConditionalBadgeGroupsDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesConditionalBadgeGroupConditionalBadgeGroupsDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>PATCH /Badges/api/consumer/v1/badges/conditional-badge-group/:conditional_badge_groups</remarks>
        [HttpPatch]
        [Route("/Badges/api/consumer/v1/badges/conditional-badge-group/{conditional_badge_groups}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesConditionalBadgeGroupConditionalBadgeGroupsPatch")]
        public virtual IActionResult BadgesApiConsumerV1BadgesConditionalBadgeGroupConditionalBadgeGroupsPatch()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges-courses-form</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges-courses-form")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesCoursesFormGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesCoursesFormGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/badges</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/badges")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesGet")]
        public virtual IActionResult BadgesApiConsumerV1BadgesGet()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST /Badges/api/consumer/v1/badges</remarks>
        [HttpPost]
        [Route("/Badges/api/consumer/v1/badges")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesPost")]
        public virtual IActionResult BadgesApiConsumerV1BadgesPost()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges-remove/:badges/academicTests/:academic_tests/:status</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges-remove/{badges}/academicTests/{academic_tests}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesRemoveBadgesAcademicTestsAcademicTestsStatusDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesRemoveBadgesAcademicTestsAcademicTestsStatusDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges-remove/:badges/advancedCourses/:advanced_course_badges/:status</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges-remove/{badges}/advancedCourses/{advanced_course_badges}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesRemoveBadgesAdvancedCoursesAdvancedCourseBadgesStatusDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesRemoveBadgesAdvancedCoursesAdvancedCourseBadgesStatusDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>DELETE /Badges/api/consumer/v1/badges-remove/:badges/formfields/:form_fields/:status</remarks>
        [HttpDelete]
        [Route("/Badges/api/consumer/v1/badges-remove/{badges}/formfields/{form_fields}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1BadgesRemoveBadgesFormfieldsFormFieldsStatusDelete")]
        public virtual IActionResult BadgesApiConsumerV1BadgesRemoveBadgesFormfieldsFormFieldsStatusDelete()
        {


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET /Badges/api/consumer/v1/dashboard/custom/7</remarks>
        [HttpGet]
        [Route("/Badges/api/consumer/v1/dashboard/custom/7")]
        [ValidateModelState]
        [SwaggerOperation("BadgesApiConsumerV1DashboardCustom7Get")]
        public virtual IActionResult BadgesApiConsumerV1DashboardCustom7Get()
        {


            throw new NotImplementedException();
        }
    }
}
