/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ExperiencesApiController : ControllerBase
    { 
        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/evaluation/{evaluations}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1EvaluationByEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1EvaluationByEvaluations([FromRoute (Name = "evaluations")][Required]string evaluations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluationEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/evaluation-events/{evaluation_events}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1EvaluationEventsByEvaluationEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1EvaluationEventsByEvaluationEvents([FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluationGoals"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/evaluation-goals/{evaluation_goals}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1EvaluationGoalsByEvaluationGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1EvaluationGoalsByEvaluationGoals([FromRoute (Name = "evaluation_goals")][Required]string evaluationGoals, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="createExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateExperienceRequest createExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="payPeriods"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods/{pay_periods}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriods([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pay_periods")][Required]string payPeriods, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="payPeriods"></param>
        /// <param name="timeLogs"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods/{pay_periods}/timelogs/{time_logs}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriodsTimelogsByTimeLogs")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriodsTimelogsByTimeLogs([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pay_periods")][Required]string payPeriods, [FromRoute (Name = "time_logs")][Required]string timeLogs, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="shifts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/shifts/{shifts}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExperiencesByExperiencesShiftsByShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExperiencesByExperiencesShiftsByShifts([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "shifts")][Required]string shifts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/experiences/match/match-settings")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExperiencesMatchMatchSettings")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExperiencesMatchMatchSettings([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Evaluation
        /// </summary>
        /// <remarks>External Evaluation</remarks>
        /// <param name="token"></param>
        /// <param name="goalId"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/external-evaluations/{token}/{goalId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1ExternalEvaluationsByTokenByGoalId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1ExternalEvaluationsByTokenByGoalId([FromRoute (Name = "token")][Required]string token, [FromRoute (Name = "goalId")][Required]string goalId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="shifts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/shifts/{shifts}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesShiftsByShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesShiftsByShifts([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "shifts")][Required]string shifts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="workflowForms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/workflow-forms/delete/{workflow_forms}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsDeleteByWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsDeleteByWorkflowForms([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="siteVisits"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/user-experience/site-visits/{site_visits}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1UserExperienceSiteVisitsBySiteVisits")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1UserExperienceSiteVisitsBySiteVisits([FromRoute (Name = "site_visits")][Required]string siteVisits, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="workflowForms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Experiences/api/consumer/v1/user-experience-workflow-forms/{workflow_forms}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteExperiencesApiConsumerV1UserExperienceWorkflowFormsByWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteExperiencesApiConsumerV1UserExperienceWorkflowFormsByWorkflowForms([FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/evaluation/{evaluations}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1EvaluationByEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(SingleEvaluationDataResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1EvaluationByEvaluations([FromRoute (Name = "evaluations")][Required]string evaluations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SingleEvaluationDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"evaluation\" : \"{}\",\r\n  \"events\" : [ null, null ],\r\n  \"goals\" : [ null, null ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SingleEvaluationDataResponse>(exampleJson)
            : default(SingleEvaluationDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/evaluations-dashboard-data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1EvaluationsDashboardData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EvaluationDashboardResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1EvaluationsDashboardData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EvaluationDashboardResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 6,\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"numberEvaluationsCompleted\" : 0,\r\n  \"studentName\" : \"studentName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"userId\" : 1\r\n}, {\r\n  \"experienceId\" : 6,\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"numberEvaluationsCompleted\" : 0,\r\n  \"studentName\" : \"studentName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"userId\" : 1\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<EvaluationDashboardResponse>>(exampleJson)
            : default(List<EvaluationDashboardResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/evaluations-dashboard-data/goal-responses")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1EvaluationsDashboardDataGoalResponses")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EvaluationGoalResponsesDashboardDataResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1EvaluationsDashboardDataGoalResponses([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EvaluationGoalResponsesDashboardDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"evaluationEventDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"studentLastName\" : \"studentLastName\",\r\n  \"organizationContactPhone\" : \"organizationContactPhone\",\r\n  \"organizationName\" : \"organizationName\",\r\n  \"eventNumber\" : 5,\r\n  \"organizationContactEmail\" : \"organizationContactEmail\",\r\n  \"userId\" : 0,\r\n  \"evaluatorContact\" : \"evaluatorContact\",\r\n  \"studentId\" : \"studentId\",\r\n  \"submissions\" : [ {\r\n    \"goalId\" : 1,\r\n    \"goalName\" : \"goalName\",\r\n    \"ranking\" : 6\r\n  }, {\r\n    \"goalId\" : 1,\r\n    \"goalName\" : \"goalName\",\r\n    \"ranking\" : 6\r\n  } ],\r\n  \"experienceName\" : \"experienceName\",\r\n  \"schoolName\" : \"schoolName\",\r\n  \"studentFirstName\" : \"studentFirstName\",\r\n  \"overallComments\" : \"overallComments\"\r\n}, {\r\n  \"evaluationEventDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"studentLastName\" : \"studentLastName\",\r\n  \"organizationContactPhone\" : \"organizationContactPhone\",\r\n  \"organizationName\" : \"organizationName\",\r\n  \"eventNumber\" : 5,\r\n  \"organizationContactEmail\" : \"organizationContactEmail\",\r\n  \"userId\" : 0,\r\n  \"evaluatorContact\" : \"evaluatorContact\",\r\n  \"studentId\" : \"studentId\",\r\n  \"submissions\" : [ {\r\n    \"goalId\" : 1,\r\n    \"goalName\" : \"goalName\",\r\n    \"ranking\" : 6\r\n  }, {\r\n    \"goalId\" : 1,\r\n    \"goalName\" : \"goalName\",\r\n    \"ranking\" : 6\r\n  } ],\r\n  \"experienceName\" : \"experienceName\",\r\n  \"schoolName\" : \"schoolName\",\r\n  \"studentFirstName\" : \"studentFirstName\",\r\n  \"overallComments\" : \"overallComments\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<EvaluationGoalResponsesDashboardDataResponse>>(exampleJson)
            : default(List<EvaluationGoalResponsesDashboardDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experience/{experiences}/evaluations")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperienceByExperiencesEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceEvaluationListItem>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperienceByExperiencesEvaluations([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceEvaluationListItem>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceEvaluationListItem>>(exampleJson)
            : default(List<ExperienceEvaluationListItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experience/{experiences}/workflow-forms")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperienceByExperiencesWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<WorkflowFormsResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperienceByExperiencesWorkflowForms([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<WorkflowFormsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n}, {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<WorkflowFormsResponse>>(exampleJson)
            : default(List<WorkflowFormsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1Experiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullExperience>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1Experiences([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullExperience>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullExperience>>(exampleJson)
            : default(List<FullExperience>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/admin-table")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesAdminTable")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminTableResponseAdminTableExperience), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesAdminTable([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminTableResponseAdminTableExperience));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"objects\" : [ {\r\n    \"submission\" : {\r\n      \"id\" : 2,\r\n      \"fields\" : [ {\r\n        \"formFieldId\" : 3,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 9,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"formFieldId\" : 3,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 9,\r\n        \"value\" : \"value\"\r\n      } ]\r\n    },\r\n    \"object\" : {\r\n      \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"contactName\" : \"contactName\",\r\n      \"totalSpotCount\" : 7,\r\n      \"students\" : \"students\",\r\n      \"spotsTakenCount\" : 0,\r\n      \"applicantCount\" : 5,\r\n      \"archived\" : true,\r\n      \"experienceHiddenFromSearch\" : true,\r\n      \"organization\" : {\r\n        \"name\" : \"name\",\r\n        \"id\" : 1\r\n      },\r\n      \"name\" : \"name\",\r\n      \"location\" : {\r\n        \"name\" : \"name\",\r\n        \"id\" : 2\r\n      },\r\n      \"id\" : 6,\r\n      \"folder_id\" : 5,\r\n      \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  }, {\r\n    \"submission\" : {\r\n      \"id\" : 2,\r\n      \"fields\" : [ {\r\n        \"formFieldId\" : 3,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 9,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"formFieldId\" : 3,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 9,\r\n        \"value\" : \"value\"\r\n      } ]\r\n    },\r\n    \"object\" : {\r\n      \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"contactName\" : \"contactName\",\r\n      \"totalSpotCount\" : 7,\r\n      \"students\" : \"students\",\r\n      \"spotsTakenCount\" : 0,\r\n      \"applicantCount\" : 5,\r\n      \"archived\" : true,\r\n      \"experienceHiddenFromSearch\" : true,\r\n      \"organization\" : {\r\n        \"name\" : \"name\",\r\n        \"id\" : 1\r\n      },\r\n      \"name\" : \"name\",\r\n      \"location\" : {\r\n        \"name\" : \"name\",\r\n        \"id\" : 2\r\n      },\r\n      \"id\" : 6,\r\n      \"folder_id\" : 5,\r\n      \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminTableResponseAdminTableExperience>(exampleJson)
            : default(AdminTableResponseAdminTableExperience);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullExperience>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullExperience>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullExperience>>(exampleJson)
            : default(List<FullExperience>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/admin")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesAdmin")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminExperienceData), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesAdmin([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminExperienceData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"completedStudents\" : [ {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"availableDistrictIds\" : [ 6, 6 ],\r\n  \"createdByName\" : \"createdByName\",\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 9,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"description\" : \"description\",\r\n  \"students\" : [ {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"archived\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"availableSchoolIds\" : [ 7, 7 ],\r\n  \"accommodationsAvailable\" : true,\r\n  \"externalCreatedByName\" : \"externalCreatedByName\",\r\n  \"showsOnExternalJobBoard\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 1,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"careerClusters\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 6,\r\n    \"shortName\" : \"shortName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 6,\r\n    \"shortName\" : \"shortName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"approvedHours\" : 1.4658129805029452,\r\n  \"application_form_id\" : 2,\r\n  \"externalCreatedByEmail\" : \"externalCreatedByEmail\",\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"createdByDistrict\" : \"createdByDistrict\",\r\n  \"numberOfStudents\" : 0,\r\n  \"specificSkills\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"numberOfSpots\" : 5,\r\n  \"maxNumberOfHours\" : 7.457744773683766,\r\n  \"licenses\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"reflection_form_id\" : 3,\r\n  \"isTemplate\" : true,\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"experienceText\" : \"experienceText\",\r\n  \"learning_target_id\" : 5,\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"generalSkills\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"experience_template_id\" : 5,\r\n  \"folder_id\" : 4,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"allowStudentsToAddPayPeriods\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminExperienceData>(exampleJson)
            : default(AdminExperienceData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/application")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesApplication")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExperienceApplicationData), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesApplication([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExperienceApplicationData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"form_id\" : 9,\r\n  \"description\" : \"description\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"id\" : 0,\r\n  \"isFull\" : true,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExperienceApplicationData>(exampleJson)
            : default(ExperienceApplicationData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/current-shift")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesCurrentShift")]
        [SwaggerResponse(statusCode: 200, type: typeof(CurrentShiftResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesCurrentShift([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CurrentShiftResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"shift\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkedInStatus\" : 0,\r\n    \"geoStatus\" : 1,\r\n    \"user_experience_id\" : 6,\r\n    \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"time_log_id\" : 5,\r\n    \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"isCurrentShift\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CurrentShiftResponse>(exampleJson)
            : default(CurrentShiftResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/evaluations")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EvaluationEventDataResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesEvaluations([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EvaluationEventDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"evaluation\" : \"{}\",\r\n  \"events\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  } ],\r\n  \"goals\" : [ null, null ]\r\n}, {\r\n  \"evaluation\" : \"{}\",\r\n  \"events\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  } ],\r\n  \"goals\" : [ null, null ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<EvaluationEventDataResponse>>(exampleJson)
            : default(List<EvaluationEventDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="evaluationEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/evaluations/{evaluation_events}/form-data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationEventsFormData")]
        [SwaggerResponse(statusCode: 200, type: typeof(EvaluationFormDataResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationEventsFormData([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EvaluationFormDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EvaluationFormDataResponse>(exampleJson)
            : default(EvaluationFormDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/failed-geo-clock-outs")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesFailedGeoClockOuts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerFailedClockOut>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesFailedGeoClockOuts([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerFailedClockOut>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"timeIn\" : \"timeIn\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"timeIn\" : \"timeIn\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerFailedClockOut>>(exampleJson)
            : default(List<AdminExperiencesControllerFailedClockOut>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/overdue-pay-periods")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesOverduePayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerShiftReport>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesOverduePayPeriods([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerShiftReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerShiftReport>>(exampleJson)
            : default(List<AdminExperiencesControllerShiftReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/pay-period-report")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesPayPeriodReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerPayPeriodReport>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesPayPeriodReport([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerPayPeriodReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 1,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"hours\" : 5.637376656633329,\r\n  \"supervisorSignatureUrl\" : \"supervisorSignatureUrl\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"supervisorApproval\" : 6,\r\n  \"periodStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"periodEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"schoolApproval\" : 5\r\n}, {\r\n  \"experienceId\" : 1,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"hours\" : 5.637376656633329,\r\n  \"supervisorSignatureUrl\" : \"supervisorSignatureUrl\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"supervisorApproval\" : 6,\r\n  \"periodStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"periodEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"schoolApproval\" : 5\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerPayPeriodReport>>(exampleJson)
            : default(List<AdminExperiencesControllerPayPeriodReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="payPeriodSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/pay-period-report/{pay_period_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesPayPeriodReportByPayPeriodSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminExperiencesControllerPayPeriodReportResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesPayPeriodReportByPayPeriodSubmissions([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pay_period_submissions")][Required]string payPeriodSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminExperiencesControllerPayPeriodReportResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 0.8008281904610115\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 0.8008281904610115\r\n  } ],\r\n  \"supervisorSignatureUrl\" : \"supervisorSignatureUrl\",\r\n  \"formSubmissionResponse\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminExperiencesControllerPayPeriodReportResponse>(exampleJson)
            : default(AdminExperiencesControllerPayPeriodReportResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesPayperiods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PayPeriodDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesPayperiods([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PayPeriodDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n}, {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PayPeriodDTO>>(exampleJson)
            : default(List<PayPeriodDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/shifts")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ShiftDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesShifts([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ShiftDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"checkedInStatus\" : 0,\r\n  \"geoStatus\" : 1,\r\n  \"user_experience_id\" : 6,\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"time_log_id\" : 5,\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"isCurrentShift\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"checkedInStatus\" : 0,\r\n  \"geoStatus\" : 1,\r\n  \"user_experience_id\" : 6,\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"time_log_id\" : 5,\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"isCurrentShift\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ShiftDTO>>(exampleJson)
            : default(List<ShiftDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/shifts-report")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesShiftsReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerShiftReport>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesShiftsReport([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerShiftReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerShiftReport>>(exampleJson)
            : default(List<AdminExperiencesControllerShiftReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/time-log-approvals")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesByExperiencesTimeLogApprovals")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerTimeLogApprovalItem>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesByExperiencesTimeLogApprovals([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerTimeLogApprovalItem>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 5,\r\n  \"hours\" : 5.962133916683182,\r\n  \"form_submission_id\" : 0,\r\n  \"isPayPeriod\" : true,\r\n  \"studentName\" : \"studentName\",\r\n  \"form_id\" : 6,\r\n  \"experienceName\" : \"experienceName\",\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"dates\" : \"dates\",\r\n  \"id\" : 1,\r\n  \"supervisor\" : true\r\n}, {\r\n  \"experienceId\" : 5,\r\n  \"hours\" : 5.962133916683182,\r\n  \"form_submission_id\" : 0,\r\n  \"isPayPeriod\" : true,\r\n  \"studentName\" : \"studentName\",\r\n  \"form_id\" : 6,\r\n  \"experienceName\" : \"experienceName\",\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"dates\" : \"dates\",\r\n  \"id\" : 1,\r\n  \"supervisor\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerTimeLogApprovalItem>>(exampleJson)
            : default(List<AdminExperiencesControllerTimeLogApprovalItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/list")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesList")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceData>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesList([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceData>>(exampleJson)
            : default(List<ExperienceData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/match/match-settings")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesMatchMatchSettings")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExperienceMatchSettingsDTO), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesMatchMatchSettings([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExperienceMatchSettingsDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"careerClusters\" : [ 6, 6 ],\r\n  \"licenses\" : [ 5, 5 ],\r\n  \"address\" : \"address\",\r\n  \"accommodations\" : true,\r\n  \"userLoadedMatchedExperiences\" : true,\r\n  \"generalSkills\" : [ 5, 5 ],\r\n  \"id\" : 0,\r\n  \"preferredTimes\" : [ \"preferredTimes\", \"preferredTimes\" ],\r\n  \"seasonOptions\" : [ \"seasonOptions\", \"seasonOptions\" ],\r\n  \"specificSkills\" : [ 1, 1 ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExperienceMatchSettingsDTO>(exampleJson)
            : default(ExperienceMatchSettingsDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/past")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesPast")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullExperience>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesPast([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullExperience>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 1,\r\n  \"reflectionFormResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"description\" : \"description\",\r\n  \"canSubmitPayPeriods\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_experience_id\" : 4,\r\n  \"id\" : 7,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"currentGeoLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 6.027456183070403,\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"maxNumberOfHours\" : 5.962133916683182,\r\n  \"isCurrent\" : true,\r\n  \"reflection_form_id\" : 0,\r\n  \"user_id\" : 5,\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"experienceText\" : \"experienceText\",\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullExperience>>(exampleJson)
            : default(List<FullExperience>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences-payperiods-tosubmit")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesPayperiodsTosubmit")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PayPeriodDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesPayperiodsTosubmit([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PayPeriodDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n}, {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PayPeriodDTO>>(exampleJson)
            : default(List<PayPeriodDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Experiences
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/pending-student-action")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesPendingStudentAction")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesPendingStudentAction([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"organizationName\" : \"organizationName\",\r\n  \"reflection_form_approval\" : 2,\r\n  \"form_submission_id\" : 4,\r\n  \"contactName\" : \"contactName\",\r\n  \"conditional_badge_group_id\" : 7,\r\n  \"form_id\" : 5,\r\n  \"description\" : \"description\",\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"contact_id\" : 3,\r\n  \"created_by\" : 5,\r\n  \"location_id\" : 6,\r\n  \"numberOfSpots\" : 2,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"reflection_form_id\" : 0,\r\n  \"organization_id\" : 1,\r\n  \"name\" : \"name\",\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"organizationName\" : \"organizationName\",\r\n  \"reflection_form_approval\" : 2,\r\n  \"form_submission_id\" : 4,\r\n  \"contactName\" : \"contactName\",\r\n  \"conditional_badge_group_id\" : 7,\r\n  \"form_id\" : 5,\r\n  \"description\" : \"description\",\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"contact_id\" : 3,\r\n  \"created_by\" : 5,\r\n  \"location_id\" : 6,\r\n  \"numberOfSpots\" : 2,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"reflection_form_id\" : 0,\r\n  \"organization_id\" : 1,\r\n  \"name\" : \"name\",\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceDTO>>(exampleJson)
            : default(List<ExperienceDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences-propose/data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesProposeData")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProposeExperienceFormResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesProposeData([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProposeExperienceFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"organizationForm\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"experienceForm\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"orgs\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 1\r\n  } ],\r\n  \"contactForm\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"contacts\" : [ {\r\n    \"org_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"org_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProposeExperienceFormResponse>(exampleJson)
            : default(ProposeExperienceFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience Search</remarks>
        /// <param name="type"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/search/{type}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesSearchByType")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StudentPendingUserExperienceDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesSearchByType([FromRoute (Name = "type")][Required]string type, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StudentPendingUserExperienceDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"contact\" : \"contact\",\r\n  \"organization\" : \"organization\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"description\" : \"description\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"id\" : 0\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"contact\" : \"contact\",\r\n  \"organization\" : \"organization\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"description\" : \"description\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StudentPendingUserExperienceDTO>>(exampleJson)
            : default(List<StudentPendingUserExperienceDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience Search
        /// </summary>
        /// <remarks>Experience Search</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/search/saved")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesSearchSaved")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SavedExperiences>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesSearchSaved([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SavedExperiences>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"organization\" : \"organization\",\r\n  \"contact\" : \"contact\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"description\" : \"description\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"id\" : 0\r\n}, {\r\n  \"organization\" : \"organization\",\r\n  \"contact\" : \"contact\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"description\" : \"description\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<SavedExperiences>>(exampleJson)
            : default(List<SavedExperiences>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences-settings/students")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesSettingsStudents")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminExperiencesControllerShowStudentsInExperienceTableResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesSettingsStudents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminExperiencesControllerShowStudentsInExperienceTableResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"showStudentsInExperienceTable\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminExperiencesControllerShowStudentsInExperienceTableResponse>(exampleJson)
            : default(AdminExperiencesControllerShowStudentsInExperienceTableResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences/templates")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesTemplates")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceData>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesTemplates([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceData>>(exampleJson)
            : default(List<ExperienceData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/experiences-timelogs-report")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExperiencesTimelogsReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PayPeriodTimeLogReportResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExperiencesTimelogsReport([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PayPeriodTimeLogReportResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"studentID\" : \"studentID\",\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"archived\" : true,\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"studentName\" : \"studentName\",\r\n  \"organization\" : \"organization\",\r\n  \"experienceContactEmail\" : \"experienceContactEmail\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experienceContact\" : \"experienceContact\",\r\n  \"experience\" : \"experience\",\r\n  \"studentSignature\" : \"studentSignature\",\r\n  \"supervisorApproved\" : true\r\n}, {\r\n  \"studentID\" : \"studentID\",\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"archived\" : true,\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"studentName\" : \"studentName\",\r\n  \"organization\" : \"organization\",\r\n  \"experienceContactEmail\" : \"experienceContactEmail\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experienceContact\" : \"experienceContact\",\r\n  \"experience\" : \"experience\",\r\n  \"studentSignature\" : \"studentSignature\",\r\n  \"supervisorApproved\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PayPeriodTimeLogReportResponse>>(exampleJson)
            : default(List<PayPeriodTimeLogReportResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ExternalEvaluation
        /// </summary>
        /// <remarks>ExternalEvaluation</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/external-evaluations/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExternalEvaluationsByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalEvaluationSubmissionResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExternalEvaluationsByToken([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalEvaluationSubmissionResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"instructions\" : \"instructions\",\r\n  \"min\" : 0,\r\n  \"formToken\" : \"formToken\",\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"max\" : 2,\r\n  \"allowsNotApplicable\" : true,\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"isDone\" : true,\r\n  \"events\" : [ {\r\n    \"isCurrent\" : true,\r\n    \"dateString\" : \"dateString\",\r\n    \"id\" : 6,\r\n    \"overallComments\" : \"overallComments\"\r\n  }, {\r\n    \"isCurrent\" : true,\r\n    \"dateString\" : \"dateString\",\r\n    \"id\" : 6,\r\n    \"overallComments\" : \"overallComments\"\r\n  } ],\r\n  \"goals\" : [ {\r\n    \"dataItems\" : [ {\r\n      \"date\" : \"date\",\r\n      \"value\" : 5\r\n    }, {\r\n      \"date\" : \"date\",\r\n      \"value\" : 5\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"addedByType\" : 5\r\n  }, {\r\n    \"dataItems\" : [ {\r\n      \"date\" : \"date\",\r\n      \"value\" : 5\r\n    }, {\r\n      \"date\" : \"date\",\r\n      \"value\" : 5\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"addedByType\" : 5\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalEvaluationSubmissionResponse>(exampleJson)
            : default(ExternalEvaluationSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Job Board
        /// </summary>
        /// <remarks>External Job Board</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/external-job-board/{token}/clusters")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExternalJobBoardByTokenClusters")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CareerClusterDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExternalJobBoardByTokenClusters([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CareerClusterDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"id\" : 6,\r\n  \"shortName\" : \"shortName\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"id\" : 6,\r\n  \"shortName\" : \"shortName\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CareerClusterDTO>>(exampleJson)
            : default(List<CareerClusterDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Job Board
        /// </summary>
        /// <remarks>External Job Board</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/external-job-board/{token}/data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExternalJobBoardByTokenData")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalJobBoardControllerExternalData), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExternalJobBoardByTokenData([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalJobBoardControllerExternalData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"settings\" : \"{}\",\r\n  \"districtId\" : 0,\r\n  \"districtName\" : \"districtName\",\r\n  \"districtIds\" : [ 6, 6 ],\r\n  \"registerLink\" : \"registerLink\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalJobBoardControllerExternalData>(exampleJson)
            : default(ExternalJobBoardControllerExternalData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Job Board
        /// </summary>
        /// <remarks>External Job Board</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/external-job-board/{token}/fields")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExternalJobBoardByTokenFields")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomFormFieldResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExternalJobBoardByTokenFields([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomFormFieldResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomFormFieldResponse>(exampleJson)
            : default(CustomFormFieldResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/external-workflow-forms/data/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1ExternalWorkflowFormsDataByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalWorkflowFormResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1ExternalWorkflowFormsDataByToken([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalWorkflowFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"submissionResponse\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"signers\" : [ null, null ],\r\n  \"isRejectable\" : true,\r\n  \"editableFieldIds\" : [ 0, 0 ],\r\n  \"allPotentialSigners\" : [ {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  }, {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  } ],\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"isCompleted\" : true,\r\n  \"goals\" : [ \"goals\", \"goals\" ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalWorkflowFormResponse>(exampleJson)
            : default(ExternalWorkflowFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gated Jobs Badge
        /// </summary>
        /// <remarks>Gated Jobs Badge</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/gated-jobs-badge/progress")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1GatedJobsBadgeProgress")]
        [SwaggerResponse(statusCode: 200, type: typeof(GatedJobsBadgeDTO), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1GatedJobsBadgeProgress([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(GatedJobsBadgeDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"gatedJobsBadge\" : {\r\n    \"decision_points_form_id\" : 6,\r\n    \"conditional_badge_group_id\" : 1,\r\n    \"decisionPointDescription\" : \"decisionPointDescription\",\r\n    \"numberOfCompletedExperiences\" : 0,\r\n    \"description\" : \"description\",\r\n    \"numberOfRequiredCareerSurveys\" : 5,\r\n    \"experienceHours\" : 3.616076749251911,\r\n    \"appearsInLibrary\" : true,\r\n    \"communityServiceHours\" : 9.301444243932576,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"badge_group_id\" : 2,\r\n    \"selectableOnPlan\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"name\" : \"name\",\r\n    \"showsOnStudentDashboard\" : true,\r\n    \"id\" : 7,\r\n    \"folder_id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"progressPercent\" : 2.027123023002322\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GatedJobsBadgeDTO>(exampleJson)
            : default(GatedJobsBadgeDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/pathwayos/experiences/{experiences}/student_ids")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1PathwayosExperiencesByExperiencesStudentIds")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1PathwayosExperiencesByExperiencesStudentIds([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminViewUserExperienceResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiences([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminViewUserExperienceResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"approved\" : true,\r\n  \"siteVisits\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_submission_id\" : 0,\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"form_id\" : 6,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_submission_id\" : 0,\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"form_id\" : 6,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"allShifts\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkedInStatus\" : 0,\r\n    \"geoStatus\" : 1,\r\n    \"user_experience_id\" : 6,\r\n    \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"time_log_id\" : 5,\r\n    \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"isCurrentShift\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkedInStatus\" : 0,\r\n    \"geoStatus\" : 1,\r\n    \"user_experience_id\" : 6,\r\n    \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"time_log_id\" : 5,\r\n    \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"isCurrentShift\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"isEnded\" : true,\r\n  \"currentlyRunningShift\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminViewUserExperienceResponse>(exampleJson)
            : default(AdminViewUserExperienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/all-evaluations")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesAllEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EvaluationEventDataResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesAllEvaluations([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EvaluationEventDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"evaluation\" : \"{}\",\r\n  \"events\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  } ],\r\n  \"goals\" : [ null, null ]\r\n}, {\r\n  \"evaluation\" : \"{}\",\r\n  \"events\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"submissions\" : [ {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    }, {\r\n      \"comments\" : \"comments\",\r\n      \"evaluation_goal_id\" : 1,\r\n      \"ranking\" : 5,\r\n      \"id\" : 6,\r\n      \"isStudent\" : true\r\n    } ],\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"autoSend\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 0,\r\n    \"studentSignatureUrl\" : \"studentSignatureUrl\",\r\n    \"completed\" : true,\r\n    \"hasSent\" : true,\r\n    \"overallComments\" : \"overallComments\"\r\n  } ],\r\n  \"goals\" : [ null, null ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<EvaluationEventDataResponse>>(exampleJson)
            : default(List<EvaluationEventDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="evaluationEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/evaluations/{evaluations}/events/{evaluation_events}/form-data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEventsFormData")]
        [SwaggerResponse(statusCode: 200, type: typeof(EvaluationFormDataResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEventsFormData([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EvaluationFormDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EvaluationFormDataResponse>(exampleJson)
            : default(EvaluationFormDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="evaluationEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/evaluations/{evaluations}/events/{evaluation_events}/link")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEventsLink")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEventsLink([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/weekly-shift-data")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWeeklyShiftData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerWeeklyTimelogDataResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWeeklyShiftData([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerWeeklyTimelogDataResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"date\",\r\n  \"hours\" : 0.8008281904610115,\r\n  \"verified\" : true,\r\n  \"timeIn\" : \"timeIn\",\r\n  \"timeOut\" : \"timeOut\"\r\n}, {\r\n  \"date\" : \"date\",\r\n  \"hours\" : 0.8008281904610115,\r\n  \"verified\" : true,\r\n  \"timeIn\" : \"timeIn\",\r\n  \"timeOut\" : \"timeOut\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerWeeklyTimelogDataResponse>>(exampleJson)
            : default(List<AdminExperiencesControllerWeeklyTimelogDataResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/workflow-forms")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<WorkflowFormResponse>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowForms([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<WorkflowFormResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"signers\" : [ null, null ],\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"fileCount\" : 6,\r\n    \"created_by\" : 1,\r\n    \"linkToken\" : \"linkToken\",\r\n    \"appearsInMarketPlace\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"isStructureForm\" : true,\r\n    \"id\" : 5,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"folder_id\" : 0,\r\n    \"approvalWorkflow\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"adminNotificationUserIds\" : [ 2, 2 ],\r\n  \"userWorkflowStatus\" : {\r\n    \"form_submission_id\" : 1,\r\n    \"id\" : 1,\r\n    \"status\" : 1\r\n  },\r\n  \"sentAfter\" : 7,\r\n  \"allPotentialSigners\" : [ {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  }, {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  } ],\r\n  \"workflowForm\" : \"{}\"\r\n}, {\r\n  \"signers\" : [ null, null ],\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"fileCount\" : 6,\r\n    \"created_by\" : 1,\r\n    \"linkToken\" : \"linkToken\",\r\n    \"appearsInMarketPlace\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"isStructureForm\" : true,\r\n    \"id\" : 5,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"folder_id\" : 0,\r\n    \"approvalWorkflow\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"adminNotificationUserIds\" : [ 2, 2 ],\r\n  \"userWorkflowStatus\" : {\r\n    \"form_submission_id\" : 1,\r\n    \"id\" : 1,\r\n    \"status\" : 1\r\n  },\r\n  \"sentAfter\" : 7,\r\n  \"allPotentialSigners\" : [ {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  }, {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  } ],\r\n  \"workflowForm\" : \"{}\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<WorkflowFormResponse>>(exampleJson)
            : default(List<WorkflowFormResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="workflowForms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/workflow-forms/data/{workflow_forms}")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsDataByWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalWorkflowFormResponse), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsDataByWorkflowForms([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalWorkflowFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"submissionResponse\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"signers\" : [ null, null ],\r\n  \"isRejectable\" : true,\r\n  \"editableFieldIds\" : [ 0, 0 ],\r\n  \"allPotentialSigners\" : [ {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  }, {\r\n    \"signingOrder\" : 2,\r\n    \"role\" : \"role\",\r\n    \"responsibility\" : 3,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"workflowFormSignatureId\" : 7,\r\n    \"type\" : 4,\r\n    \"status\" : 9\r\n  } ],\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"isCompleted\" : true,\r\n  \"goals\" : [ \"goals\", \"goals\" ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalWorkflowFormResponse>(exampleJson)
            : default(ExternalWorkflowFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>Student time Log</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Experiences/api/consumer/v1/userexperience/{experiences}/timelog/geologs")]
        [ValidateModelState]
        [SwaggerOperation("GetExperiencesApiConsumerV1UserexperienceByExperiencesTimelogGeologs")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TimeLogDTO>), description: "OK")]
        public virtual IActionResult GetExperiencesApiConsumerV1UserexperienceByExperiencesTimelogGeologs([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TimeLogDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"pay_period_id\" : 3,\r\n  \"reflection_form_submission_id\" : 2,\r\n  \"sponsorToken\" : \"sponsorToken\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"checkOutLat\" : \"checkOutLat\",\r\n  \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_experience_id\" : 2,\r\n  \"sponsorRejected\" : true,\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"isEnded\" : true,\r\n  \"id\" : 9,\r\n  \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"hours\" : 7.061401241503109,\r\n  \"checkOutLong\" : \"checkOutLong\",\r\n  \"sponsorComment\" : \"sponsorComment\",\r\n  \"timeOut\" : \"timeOut\",\r\n  \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"checkInLong\" : \"checkInLong\",\r\n  \"checkInLat\" : \"checkInLat\",\r\n  \"sponsorApproved\" : true,\r\n  \"timeIn\" : \"timeIn\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"pay_period_id\" : 3,\r\n  \"reflection_form_submission_id\" : 2,\r\n  \"sponsorToken\" : \"sponsorToken\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approved\" : true,\r\n  \"checkOutLat\" : \"checkOutLat\",\r\n  \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_experience_id\" : 2,\r\n  \"sponsorRejected\" : true,\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"isEnded\" : true,\r\n  \"id\" : 9,\r\n  \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"hours\" : 7.061401241503109,\r\n  \"checkOutLong\" : \"checkOutLong\",\r\n  \"sponsorComment\" : \"sponsorComment\",\r\n  \"timeOut\" : \"timeOut\",\r\n  \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"checkInLong\" : \"checkInLong\",\r\n  \"checkInLat\" : \"checkInLat\",\r\n  \"sponsorApproved\" : true,\r\n  \"timeIn\" : \"timeIn\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<TimeLogDTO>>(exampleJson)
            : default(List<TimeLogDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluations"></param>
        /// <param name="updateExperienceEvaluationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/evaluation/{evaluations}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1EvaluationByEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1EvaluationByEvaluations([FromRoute (Name = "evaluations")][Required]string evaluations, [FromBody]UpdateExperienceEvaluationRequest updateExperienceEvaluationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluations"></param>
        /// <param name="bulkAddStudentsToEvaluationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/evaluation/{evaluations}/bulk-add-students")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1EvaluationByEvaluationsBulkAddStudents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1EvaluationByEvaluationsBulkAddStudents([FromRoute (Name = "evaluations")][Required]string evaluations, [FromBody]BulkAddStudentsToEvaluationRequest bulkAddStudentsToEvaluationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluationEvents"></param>
        /// <param name="updateEvaluationEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/evaluation-events/{evaluation_events}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1EvaluationEventsByEvaluationEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1EvaluationEventsByEvaluationEvents([FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromBody]UpdateEvaluationEventRequest updateEvaluationEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluationGoals"></param>
        /// <param name="updateEvaluationGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/evaluation-goals/{evaluation_goals}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1EvaluationGoalsByEvaluationGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1EvaluationGoalsByEvaluationGoals([FromRoute (Name = "evaluation_goals")][Required]string evaluationGoals, [FromBody]UpdateEvaluationGoalRequest updateEvaluationGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>Student time Log</remarks>
        /// <param name="addReflectionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experience/legacy-reflection/submit")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperienceLegacyReflectionSubmit")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperienceLegacyReflectionSubmit([FromBody]AddReflectionRequest addReflectionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="updateExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]UpdateExperienceRequest updateExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Experiences
        /// </summary>
        /// <remarks>Pending Experiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/accept-job")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesAcceptJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesAcceptJob([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/admin-search")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesAdminSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesAdminSearch([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerCloneExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/clone")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesClone")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExperienceDTO), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesClone([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerCloneExperienceRequest adminExperiencesControllerCloneExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExperienceDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"organizationName\" : \"organizationName\",\r\n  \"reflection_form_approval\" : 2,\r\n  \"form_submission_id\" : 4,\r\n  \"contactName\" : \"contactName\",\r\n  \"conditional_badge_group_id\" : 7,\r\n  \"form_id\" : 5,\r\n  \"description\" : \"description\",\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"contact_id\" : 3,\r\n  \"created_by\" : 5,\r\n  \"location_id\" : 6,\r\n  \"numberOfSpots\" : 2,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"reflection_form_id\" : 0,\r\n  \"organization_id\" : 1,\r\n  \"name\" : \"name\",\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExperienceDTO>(exampleJson)
            : default(ExperienceDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="evaluationEvents"></param>
        /// <param name="signEvaluationStudentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/evaluations/{evaluations}/sign/{evaluation_events}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationsSignByEvaluationEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationsSignByEvaluationEvents([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromBody]SignEvaluationStudentRequest signEvaluationStudentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/mark-as-template")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesMarkAsTemplate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesMarkAsTemplate([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="payPeriods"></param>
        /// <param name="addPayPeriodRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods/{pay_periods}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriods([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pay_periods")][Required]string payPeriods, [FromBody]AddPayPeriodRequest addPayPeriodRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Experiences
        /// </summary>
        /// <remarks>Pending Experiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/reject-job")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesRejectJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesRejectJob([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="users"></param>
        /// <param name="adminExperiencesControllerAddStudentToExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/students/{users}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesStudentsByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesStudentsByUsers([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "users")][Required]string users, [FromBody]AdminExperiencesControllerAddStudentToExperienceRequest adminExperiencesControllerAddStudentToExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="users"></param>
        /// <param name="adminExperiencesControllerAddHoursToStudentExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/students/{users}/hours")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExperiencesByExperiencesStudentsByUsersHours")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExperiencesByExperiencesStudentsByUsersHours([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "users")][Required]string users, [FromBody]AdminExperiencesControllerAddHoursToStudentExperienceRequest adminExperiencesControllerAddHoursToStudentExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Evaluation
        /// </summary>
        /// <remarks>External Evaluation</remarks>
        /// <param name="token"></param>
        /// <param name="submitEvaluationRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/external-evaluations/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1ExternalEvaluationsByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1ExternalEvaluationsByToken([FromRoute (Name = "token")][Required]string token, [FromBody]SubmitEvaluationRequest submitEvaluationRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="pathwayOSUpdateExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/pathwayos/experiences/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1PathwayosExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1PathwayosExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]PathwayOSUpdateExperienceRequest pathwayOSUpdateExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="editBulkWorkflowFormPermissionsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/pathwayos/workflow-forms/bulk/field-permissions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1PathwayosWorkflowFormsBulkFieldPermissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1PathwayosWorkflowFormsBulkFieldPermissions([FromBody]EditBulkWorkflowFormPermissionsRequest editBulkWorkflowFormPermissionsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/approve")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesApprove")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesApprove([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/end-shift")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEndShift")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEndShift([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="evaluationSubmissions"></param>
        /// <param name="ranking"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/evaluations/{evaluations}/evaluations-ranking/{evaluation_submissions}/update-ranking/{ranking}")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEvaluationsRankingByEvaluationSubmissionsUpdateRankingByRanking")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEvaluationsRankingByEvaluationSubmissionsUpdateRankingByRanking([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromRoute (Name = "evaluation_submissions")][Required]string evaluationSubmissions, [FromRoute (Name = "ranking")][Required]string ranking, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="evaluationEvents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/evaluations/{evaluations}/events/{evaluation_events}")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesEvaluationsByEvaluationsEventsByEvaluationEvents([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromRoute (Name = "evaluation_events")][Required]string evaluationEvents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="signatureId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/resend/{signatureId}")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesResendBySignatureId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesResendBySignatureId([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "signatureId")][Required]string signatureId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/workflow-forms/start")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsStart")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesWorkflowFormsStart([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerEndDeleteUserExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience-delete/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceDeleteByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceDeleteByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerEndDeleteUserExperienceRequest adminExperiencesControllerEndDeleteUserExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerEndDeleteUserExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience-end/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceEndByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceEndByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerEndDeleteUserExperienceRequest adminExperiencesControllerEndDeleteUserExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerEndDeleteUserExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience-restart/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceRestartByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceRestartByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerEndDeleteUserExperienceRequest adminExperiencesControllerEndDeleteUserExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="experiences"></param>
        /// <param name="workflowForms"></param>
        /// <param name="createUpdateWorkflowFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/user-experience-workflow-forms/{experiences}/edit/{workflow_forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesEditByWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesEditByWorkflowForms([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromBody]CreateUpdateWorkflowFormRequest createUpdateWorkflowFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>Student time Log</remarks>
        /// <param name="experiences"></param>
        /// <param name="createGeoTimeLogRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/userexperience/{experiences}/geotimelog")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserexperienceByExperiencesGeotimelog")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserexperienceByExperiencesGeotimelog([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateGeoTimeLogRequest createGeoTimeLogRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>Student time Log</remarks>
        /// <param name="experiences"></param>
        /// <param name="updateGeoTimeLogRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/userexperience/{experiences}/geotimelog/end")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserexperienceByExperiencesGeotimelogEnd")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserexperienceByExperiencesGeotimelogEnd([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]UpdateGeoTimeLogRequest updateGeoTimeLogRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>Student time Log</remarks>
        /// <param name="experiences"></param>
        /// <param name="createTimeLogRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/userexperience/{experiences}/timelog")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1UserexperienceByExperiencesTimelog")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1UserexperienceByExperiencesTimelog([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateTimeLogRequest createTimeLogRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="workflowForms"></param>
        /// <param name="editWorkflowFormPermissionsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Experiences/api/consumer/v1/workflow-forms/{workflow_forms}/field-permissions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchExperiencesApiConsumerV1WorkflowFormsByWorkflowFormsFieldPermissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchExperiencesApiConsumerV1WorkflowFormsByWorkflowFormsFieldPermissions([FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromBody]EditWorkflowFormPermissionsRequest editWorkflowFormPermissionsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edits Experience</remarks>
        /// <param name="editExperienceControllerBulkAddPayPeriodRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/add-pay-period")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesAddPayPeriod")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesAddPayPeriod([FromBody]EditExperienceControllerBulkAddPayPeriodRequest editExperienceControllerBulkAddPayPeriodRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="forms"></param>
        /// <param name="editExperienceControllerBulkSetExperienceIdsRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/application-form/{forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesApplicationFormByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesApplicationFormByForms([FromRoute (Name = "forms")][Required]string forms, [FromBody]EditExperienceControllerBulkSetExperienceIdsRequest editExperienceControllerBulkSetExperienceIdsRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetApprovalProcessRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/approval-process")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesApprovalProcess")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesApprovalProcess([FromBody]EditExperienceControllerBulkSetApprovalProcessRequest editExperienceControllerBulkSetApprovalProcessRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetCanStudentGeoLogRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/can-student-geo-log")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesCanStudentGeoLog")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesCanStudentGeoLog([FromBody]EditExperienceControllerBulkSetCanStudentGeoLogRequest editExperienceControllerBulkSetCanStudentGeoLogRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetCreateExperienceEvaluationRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/evaluations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesEvaluations([FromBody]EditExperienceControllerBulkSetCreateExperienceEvaluationRequest editExperienceControllerBulkSetCreateExperienceEvaluationRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetHowLogTimeRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/how-do-students-log-time")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesHowDoStudentsLogTime")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesHowDoStudentsLogTime([FromBody]EditExperienceControllerBulkSetHowLogTimeRequest editExperienceControllerBulkSetHowLogTimeRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="managedJobDescriptions"></param>
        /// <param name="editExperienceControllerBulkSetExperienceIdsRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/learning-targets/{managed_job_descriptions}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesLearningTargetsByManagedJobDescriptions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesLearningTargetsByManagedJobDescriptions([FromRoute (Name = "managed_job_descriptions")][Required]string managedJobDescriptions, [FromBody]EditExperienceControllerBulkSetExperienceIdsRequest editExperienceControllerBulkSetExperienceIdsRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetMaximumHoursRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/maximum-hours")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesMaximumHours")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesMaximumHours([FromBody]EditExperienceControllerBulkSetMaximumHoursRequest editExperienceControllerBulkSetMaximumHoursRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="forms"></param>
        /// <param name="editExperienceControllerBulkSetExperienceIdsRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/pay-period-form/{forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesPayPeriodFormByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesPayPeriodFormByForms([FromRoute (Name = "forms")][Required]string forms, [FromBody]EditExperienceControllerBulkSetExperienceIdsRequest editExperienceControllerBulkSetExperienceIdsRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetPayPeriodRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/pay-periods")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesPayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesPayPeriods([FromBody]EditExperienceControllerBulkSetPayPeriodRequest editExperienceControllerBulkSetPayPeriodRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetSchoolVisibilityRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/school-visibility")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesSchoolVisibility")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesSchoolVisibility([FromBody]EditExperienceControllerBulkSetSchoolVisibilityRequest editExperienceControllerBulkSetSchoolVisibilityRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Experience
        /// </summary>
        /// <remarks>Edit Experience</remarks>
        /// <param name="editExperienceControllerBulkSetStartEndDateRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-edit-experiences/start-end-dates")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkEditExperiencesStartEndDates")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkEditExperiencesStartEndDates([FromBody]EditExperienceControllerBulkSetStartEndDateRequest editExperienceControllerBulkSetStartEndDateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience
        /// </summary>
        /// <remarks>User Experience</remarks>
        /// <param name="userExperienceControllerBulkApprovePayPeriodsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-user-experiences/approve-pay-periods")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkUserExperiencesApprovePayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkUserExperiencesApprovePayPeriods([FromBody]UserExperienceControllerBulkApprovePayPeriodsRequest userExperienceControllerBulkApprovePayPeriodsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience
        /// </summary>
        /// <remarks>User Experience</remarks>
        /// <param name="userExperienceControllerBulkApproveTimeLogsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-user-experiences/approve-time-logs")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkUserExperiencesApproveTimeLogs")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkUserExperiencesApproveTimeLogs([FromBody]UserExperienceControllerBulkApproveTimeLogsRequest userExperienceControllerBulkApproveTimeLogsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>User Experience</remarks>
        /// <param name="userExperienceControllerBulkDismissNoCheckouts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-user-experiences/dismiss-no-checkouts")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkUserExperiencesDismissNoCheckouts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkUserExperiencesDismissNoCheckouts([FromBody]UserExperienceControllerBulkDismissNoCheckouts userExperienceControllerBulkDismissNoCheckouts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student time Log
        /// </summary>
        /// <remarks>User Experience</remarks>
        /// <param name="userExperienceControllerBulkEmailStudents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/bulk-user-experiences/email-students")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1BulkUserExperiencesEmailStudents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1BulkUserExperiencesEmailStudents([FromBody]UserExperienceControllerBulkEmailStudents userExperienceControllerBulkEmailStudents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="evaluations"></param>
        /// <param name="createEvaluationGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/evaluations/{evaluations}/goals-multiple")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1EvaluationsByEvaluationsGoalsMultiple")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1EvaluationsByEvaluationsGoalsMultiple([FromRoute (Name = "evaluations")][Required]string evaluations, [FromBody]CreateEvaluationGoalRequest createEvaluationGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="experiences"></param>
        /// <param name="createExperienceEvaluationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experience/{experiences}/evaluations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperienceByExperiencesEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperienceByExperiencesEvaluations([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateExperienceEvaluationRequest createExperienceEvaluationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="createEvaluationEventRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experience/{experiences}/evaluations/{evaluations}/events")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperienceByExperiencesEvaluationsByEvaluationsEvents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperienceByExperiencesEvaluationsByEvaluationsEvents([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromBody]CreateEvaluationEventRequest createEvaluationEventRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Experience
        /// </summary>
        /// <remarks>Create Experience</remarks>
        /// <param name="createExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1Experiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1Experiences([FromBody]CreateExperienceRequest createExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiencesControllerBulkSetVisibilityInSearchRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/bulk/admin-search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkAdminSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkAdminSearch([FromBody]ExperiencesControllerBulkSetVisibilityInSearchRequest experiencesControllerBulkSetVisibilityInSearchRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners
        /// </summary>
        /// <remarks>Business Partners</remarks>
        /// <param name="approveReject"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/approve-reject-logs/{approve_reject}")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkApproveRejectLogsByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkApproveRejectLogsByApproveReject([FromRoute (Name = "approve_reject")][Required]string approveReject, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="adminExperiencesControllerBulkDismissFailedCheckOutsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/dismiss-failed-geo-clock-outs")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkDismissFailedGeoClockOuts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkDismissFailedGeoClockOuts([FromBody]AdminExperiencesControllerBulkDismissFailedCheckOutsRequest adminExperiencesControllerBulkDismissFailedCheckOutsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/evaluations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceEvaluationDetails>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkEvaluations([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceEvaluationDetails>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"evaluationItems\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}, {\r\n  \"evaluationItems\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceEvaluationDetails>>(exampleJson)
            : default(List<ExperienceEvaluationDetails>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/failed-geo-clock-outs")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkFailedGeoClockOuts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerFailedClockOut>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkFailedGeoClockOuts([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerFailedClockOut>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"timeIn\" : \"timeIn\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"timeIn\" : \"timeIn\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerFailedClockOut>>(exampleJson)
            : default(List<AdminExperiencesControllerFailedClockOut>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/overdue-pay-periods")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkOverduePayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerShiftReport>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkOverduePayPeriods([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerShiftReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerShiftReport>>(exampleJson)
            : default(List<AdminExperiencesControllerShiftReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/pay-period-report")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkPayPeriodReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerPayPeriodReport>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkPayPeriodReport([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerPayPeriodReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 1,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"hours\" : 5.637376656633329,\r\n  \"supervisorSignatureUrl\" : \"supervisorSignatureUrl\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"supervisorApproval\" : 6,\r\n  \"periodStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"periodEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"schoolApproval\" : 5\r\n}, {\r\n  \"experienceId\" : 1,\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"hours\" : 5.637376656633329,\r\n  \"supervisorSignatureUrl\" : \"supervisorSignatureUrl\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 0,\r\n  \"supervisorApproval\" : 6,\r\n  \"periodStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"periodEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"schoolApproval\" : 5\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerPayPeriodReport>>(exampleJson)
            : default(List<AdminExperiencesControllerPayPeriodReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/payperiods")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkPayperiods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PayPeriodDTO>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkPayperiods([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PayPeriodDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n}, {\r\n  \"experience_id\" : 1,\r\n  \"isCurrent\" : true,\r\n  \"approved\" : true,\r\n  \"form_submission_id\" : 0,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : 6\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PayPeriodDTO>>(exampleJson)
            : default(List<PayPeriodDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/shifts-report")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkShiftsReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerShiftReport>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkShiftsReport([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerShiftReport>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerShiftReport>>(exampleJson)
            : default(List<AdminExperiencesControllerShiftReport>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-bulk/time-log-approvals")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesBulkTimeLogApprovals")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminExperiencesControllerTimeLogApprovalItem>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesBulkTimeLogApprovals([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminExperiencesControllerTimeLogApprovalItem>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 5,\r\n  \"hours\" : 5.962133916683182,\r\n  \"form_submission_id\" : 0,\r\n  \"isPayPeriod\" : true,\r\n  \"studentName\" : \"studentName\",\r\n  \"form_id\" : 6,\r\n  \"experienceName\" : \"experienceName\",\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"dates\" : \"dates\",\r\n  \"id\" : 1,\r\n  \"supervisor\" : true\r\n}, {\r\n  \"experienceId\" : 5,\r\n  \"hours\" : 5.962133916683182,\r\n  \"form_submission_id\" : 0,\r\n  \"isPayPeriod\" : true,\r\n  \"studentName\" : \"studentName\",\r\n  \"form_id\" : 6,\r\n  \"experienceName\" : \"experienceName\",\r\n  \"studentReflectionText\" : \"studentReflectionText\",\r\n  \"dates\" : \"dates\",\r\n  \"id\" : 1,\r\n  \"supervisor\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminExperiencesControllerTimeLogApprovalItem>>(exampleJson)
            : default(List<AdminExperiencesControllerTimeLogApprovalItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Experiences
        /// </summary>
        /// <remarks>Pending Experiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="applyToExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/apply")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesApply")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesApply([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]ApplyToExperienceRequest applyToExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// BusinessPartners
        /// </summary>
        /// <remarks>BusinessPartners</remarks>
        /// <param name="experiences"></param>
        /// <param name="approveReject"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/approve-reject-logs/{approve_reject}")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesApproveRejectLogsByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesApproveRejectLogsByApproveReject([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "approve_reject")][Required]string approveReject, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="evaluations"></param>
        /// <param name="createEvaluationGoalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/evaluations/{evaluations}/goals")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationsGoals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesEvaluationsByEvaluationsGoals([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "evaluations")][Required]string evaluations, [FromBody]CreateEvaluationGoalRequest createEvaluationGoalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerBulkDismissFailedCheckOutsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/failed-geo-clock-outs")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesFailedGeoClockOuts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesFailedGeoClockOuts([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerBulkDismissFailedCheckOutsRequest adminExperiencesControllerBulkDismissFailedCheckOutsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="addPayPeriodRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiods")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiods([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AddPayPeriodRequest addPayPeriodRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="payPeriods"></param>
        /// <param name="submitPayPeriodSubmissionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods/{pay_periods}/submission")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriodsSubmission")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsByPayPeriodsSubmission([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pay_periods")][Required]string payPeriods, [FromBody]SubmitPayPeriodSubmissionRequest submitPayPeriodSubmissionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period
        /// </summary>
        /// <remarks>Pay Period</remarks>
        /// <param name="experiences"></param>
        /// <param name="addBulkPayPeriodsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/{experiences}/payperiods-repeating")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsRepeating")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesByExperiencesPayperiodsRepeating([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AddBulkPayPeriodsRequest addBulkPayPeriodsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="experienceMatchRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/match/find-matches")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesMatchFindMatches")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesMatchFindMatches([FromBody]ExperienceMatchRequest experienceMatchRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience
        /// </summary>
        /// <remarks>Experience</remarks>
        /// <param name="createExperienceProposalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences-propose")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesPropose")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesPropose([FromBody]CreateExperienceProposalRequest createExperienceProposalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="adminExperiencesControllerReassignRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/reassign")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesReassign")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesReassign([FromBody]AdminExperiencesControllerReassignRequest adminExperiencesControllerReassignRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience Search
        /// </summary>
        /// <remarks>Experience Search</remarks>
        /// <param name="experienceSearchRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceData>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesSearch([FromBody]ExperienceSearchRequest experienceSearchRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceData>>(exampleJson)
            : default(List<ExperienceData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience Search
        /// </summary>
        /// <remarks>Experience Search</remarks>
        /// <param name="pendingUserExperience"></param>
        /// <param name="status"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/search/{pending_user_experience}/{status}")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesSearchByPendingUserExperienceByStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesSearchByPendingUserExperienceByStatus([FromRoute (Name = "pending_user_experience")][Required]string pendingUserExperience, [FromRoute (Name = "status")][Required]string status, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Experience Search
        /// </summary>
        /// <remarks>Experience Search</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/experiences/search/saved/{experiences}")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExperiencesSearchSavedByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExperiencesSearchSavedByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ExternalEvaluation
        /// </summary>
        /// <remarks>ExternalEvaluation</remarks>
        /// <param name="token"></param>
        /// <param name="submitExternalEvaluationCommentRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/external-evaluations/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExternalEvaluationsByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExternalEvaluationsByToken([FromRoute (Name = "token")][Required]string token, [FromBody]SubmitExternalEvaluationCommentRequest submitExternalEvaluationCommentRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Evaluation
        /// </summary>
        /// <remarks>External Evaluation</remarks>
        /// <param name="token"></param>
        /// <param name="formToken"></param>
        /// <param name="formSubmissionId"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/external-evaluations-form/{token}/{form_token}/{form_submission_id}")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExternalEvaluationsFormByTokenByFormTokenByFormSubmissionId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExternalEvaluationsFormByTokenByFormTokenByFormSubmissionId([FromRoute (Name = "token")][Required]string token, [FromRoute (Name = "form_token")][Required]string formToken, [FromRoute (Name = "form_submission_id")][Required]string formSubmissionId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// External Job Board
        /// </summary>
        /// <remarks>External Job Board</remarks>
        /// <param name="token"></param>
        /// <param name="experienceSearchRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/external-job-board/{token}/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExternalJobBoardByTokenSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceData>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExternalJobBoardByTokenSearch([FromRoute (Name = "token")][Required]string token, [FromBody]ExperienceSearchRequest experienceSearchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceData>>(exampleJson)
            : default(List<ExperienceData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="token"></param>
        /// <param name="completeExternalWorkflowFormRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/external-workflow-forms/data/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExternalWorkflowFormsDataByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExternalWorkflowFormsDataByToken([FromRoute (Name = "token")][Required]string token, [FromBody]CompleteExternalWorkflowFormRequest completeExternalWorkflowFormRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="token"></param>
        /// <param name="rejectExteneralWorkflowFormRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/external-workflow-forms/data/{token}/reject")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1ExternalWorkflowFormsDataByTokenReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1ExternalWorkflowFormsDataByTokenReject([FromRoute (Name = "token")][Required]string token, [FromBody]RejectExteneralWorkflowFormRequest rejectExteneralWorkflowFormRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience Evaluation
        /// </summary>
        /// <remarks>User Experience Evaluation</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/pathwayos/experience/evaluations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1PathwayosExperienceEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceEvaluationListItem>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1PathwayosExperienceEvaluations([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceEvaluationListItem>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceEvaluationListItem>>(exampleJson)
            : default(List<ExperienceEvaluationListItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/pathwayos/experience/workflow-forms")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1PathwayosExperienceWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PathwayOSWorkflowFormsResponse>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1PathwayosExperienceWorkflowForms([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PathwayOSWorkflowFormsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n}, {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PathwayOSWorkflowFormsResponse>>(exampleJson)
            : default(List<PathwayOSWorkflowFormsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Experience
        /// </summary>
        /// <remarks>Create Experience</remarks>
        /// <param name="pathwayOSCreateExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/pathwayos/experiences")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1PathwayosExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1PathwayosExperiences([FromBody]PathwayOSCreateExperienceRequest pathwayOSCreateExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Experience
        /// </summary>
        /// <remarks>Create Experience</remarks>
        /// <param name="experiences"></param>
        /// <param name="createExperienceEvaluationAndWorkflowRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/pathwayos/experiences/{experiences}/evaluations_and_workflows")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1PathwayosExperiencesByExperiencesEvaluationsAndWorkflows")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PathwayOSWorkflowFormsResponse>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1PathwayosExperiencesByExperiencesEvaluationsAndWorkflows([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateExperienceEvaluationAndWorkflowRequest createExperienceEvaluationAndWorkflowRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PathwayOSWorkflowFormsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n}, {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PathwayOSWorkflowFormsResponse>>(exampleJson)
            : default(List<PathwayOSWorkflowFormsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="pathwayOSCreateWorkflowFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/pathwayos/user-experience-workflow-forms/bulk/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1PathwayosUserExperienceWorkflowFormsBulkCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PathwayOSWorkflowFormsResponse>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1PathwayosUserExperienceWorkflowFormsBulkCreate([FromBody]PathwayOSCreateWorkflowFormRequest pathwayOSCreateWorkflowFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PathwayOSWorkflowFormsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n}, {\r\n  \"manuallyAddedWorkflowFormRecipients\" : [ {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"signingOrder\" : 6,\r\n    \"role\" : \"role\",\r\n    \"workflow_form_id\" : 1,\r\n    \"responsibility\" : 6,\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 3,\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"hasStarted\" : true,\r\n  \"experience\" : {\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 5,\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"created_by\" : 3,\r\n    \"location_id\" : 9,\r\n    \"numberOfSpots\" : 1,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"workflowForm\" : {\r\n    \"formId\" : 4,\r\n    \"parentSigningOrder\" : 9,\r\n    \"sendsParentEmails\" : true,\r\n    \"evaluationId\" : 1,\r\n    \"experienceId\" : 7,\r\n    \"sendsStudentEmail\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"isRejectable\" : true,\r\n    \"sendsBusinessPartnerEmails\" : true,\r\n    \"reminderDays\" : 1,\r\n    \"studentSigningOrder\" : 4,\r\n    \"adminNotificationUserIds\" : [ 7, 7 ],\r\n    \"businessPartnerSigningOrder\" : 6,\r\n    \"name\" : \"name\",\r\n    \"usesSigningOrder\" : true,\r\n    \"numberOfRequiredParents\" : 5,\r\n    \"id\" : 1,\r\n    \"sentAfter\" : 1,\r\n    \"fieldIds\" : [ 2, 2 ]\r\n  },\r\n  \"schoolApproverSigningOrders\" : [ {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  }, {\r\n    \"signingOrder\" : 1,\r\n    \"id\" : 6\r\n  } ],\r\n  \"fieldPermissions\" : [ {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  }, {\r\n    \"manuallyAddedId\" : 6,\r\n    \"staffMemberId\" : 9,\r\n    \"assignTo\" : 9,\r\n    \"fieldId\" : 8\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PathwayOSWorkflowFormsResponse>>(exampleJson)
            : default(List<PathwayOSWorkflowFormsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Experience
        /// </summary>
        /// <remarks>User Experience</remarks>
        /// <param name="userExperienceControllerGetStudentDashboardRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/student-user-experience-table-data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1StudentUserExperienceTableData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StudentUserExperienceDashboardResponse>), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1StudentUserExperienceTableData([FromBody]UserExperienceControllerGetStudentDashboardRequest userExperienceControllerGetStudentDashboardRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StudentUserExperienceDashboardResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceOrganizationName\" : \"experienceOrganizationName\",\r\n  \"userExperienceId\" : 1,\r\n  \"studentSpecialPopulation\" : [ 6, 6 ],\r\n  \"failedToClockOut\" : 0,\r\n  \"experienceEndDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceOrganizationId\" : 1,\r\n  \"timeLogsToBePartnerApproved\" : 9,\r\n  \"studentId\" : \"studentId\",\r\n  \"evaluationEventsTotal\" : 2,\r\n  \"experienceId\" : 1,\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"studentGrade\" : 7,\r\n  \"studentGender\" : 3,\r\n  \"studentUserId\" : 7,\r\n  \"schoolId\" : 6,\r\n  \"experienceClusters\" : [ \"experienceClusters\", \"experienceClusters\" ],\r\n  \"experienceName\" : \"experienceName\",\r\n  \"schoolName\" : \"schoolName\",\r\n  \"timeLogsToBeAdminApproved\" : 1,\r\n  \"workflowFormCompletedSignatures\" : 5,\r\n  \"studentFirstName\" : \"studentFirstName\",\r\n  \"totalApprovedHours\" : 7.457744773683766,\r\n  \"studentLastName\" : \"studentLastName\",\r\n  \"evaluationEventsToBeStudentSigned\" : 5,\r\n  \"evaluationEventsOverdueByPartner\" : 5,\r\n  \"overduePayPeriods\" : 4,\r\n  \"experienceStartDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"pendingPayPeriods\" : 2,\r\n  \"studentClusters\" : \"studentClusters\",\r\n  \"evaluationEventsCompleted\" : 4,\r\n  \"workflowFormTotalSignatures\" : 1,\r\n  \"studentRace\" : \"studentRace\"\r\n}, {\r\n  \"experienceOrganizationName\" : \"experienceOrganizationName\",\r\n  \"userExperienceId\" : 1,\r\n  \"studentSpecialPopulation\" : [ 6, 6 ],\r\n  \"failedToClockOut\" : 0,\r\n  \"experienceEndDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceOrganizationId\" : 1,\r\n  \"timeLogsToBePartnerApproved\" : 9,\r\n  \"studentId\" : \"studentId\",\r\n  \"evaluationEventsTotal\" : 2,\r\n  \"experienceId\" : 1,\r\n  \"studentEmail\" : \"studentEmail\",\r\n  \"studentGrade\" : 7,\r\n  \"studentGender\" : 3,\r\n  \"studentUserId\" : 7,\r\n  \"schoolId\" : 6,\r\n  \"experienceClusters\" : [ \"experienceClusters\", \"experienceClusters\" ],\r\n  \"experienceName\" : \"experienceName\",\r\n  \"schoolName\" : \"schoolName\",\r\n  \"timeLogsToBeAdminApproved\" : 1,\r\n  \"workflowFormCompletedSignatures\" : 5,\r\n  \"studentFirstName\" : \"studentFirstName\",\r\n  \"totalApprovedHours\" : 7.457744773683766,\r\n  \"studentLastName\" : \"studentLastName\",\r\n  \"evaluationEventsToBeStudentSigned\" : 5,\r\n  \"evaluationEventsOverdueByPartner\" : 5,\r\n  \"overduePayPeriods\" : 4,\r\n  \"experienceStartDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"pendingPayPeriods\" : 2,\r\n  \"studentClusters\" : \"studentClusters\",\r\n  \"evaluationEventsCompleted\" : 4,\r\n  \"workflowFormTotalSignatures\" : 1,\r\n  \"studentRace\" : \"studentRace\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StudentUserExperienceDashboardResponse>>(exampleJson)
            : default(List<StudentUserExperienceDashboardResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="addShiftRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/shifts")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(ShiftDTO), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesShifts([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AddShiftRequest addShiftRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ShiftDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"checkedInStatus\" : 0,\r\n  \"geoStatus\" : 1,\r\n  \"user_experience_id\" : 6,\r\n  \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"time_log_id\" : 5,\r\n  \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 5,\r\n  \"isCurrentShift\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ShiftDTO>(exampleJson)
            : default(ShiftDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="users"></param>
        /// <param name="experiences"></param>
        /// <param name="adminExperiencesControllerCreateSiteVisitRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experience/{users}/experience/{experiences}/site-visits")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesSiteVisits")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperienceByUsersExperienceByExperiencesSiteVisits([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "experiences")][Required]string experiences, [FromBody]AdminExperiencesControllerCreateSiteVisitRequest adminExperiencesControllerCreateSiteVisitRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="experiences"></param>
        /// <param name="workflowForms"></param>
        /// <param name="addStudentsWorkflowFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experience-workflow-forms/{experiences}/add/{workflow_forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesAddByWorkflowForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesAddByWorkflowForms([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "workflow_forms")][Required]string workflowForms, [FromBody]AddStudentsWorkflowFormRequest addStudentsWorkflowFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="experiences"></param>
        /// <param name="createUpdateWorkflowFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experience-workflow-forms/{experiences}/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesCreate([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]CreateUpdateWorkflowFormRequest createUpdateWorkflowFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="experiences"></param>
        /// <param name="startWorkflowFormsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experience-workflow-forms/{experiences}/start")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesStart")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperienceWorkflowFormsByExperiencesStart([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]StartWorkflowFormsRequest startWorkflowFormsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// AdminExperiences
        /// </summary>
        /// <remarks>AdminExperiences</remarks>
        /// <param name="bulkExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/user-experiences-bulk/search-by-experiences")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1UserExperiencesBulkSearchByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminViewUserExperienceResponse), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1UserExperiencesBulkSearchByExperiences([FromBody]BulkExperienceRequest bulkExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminViewUserExperienceResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"approved\" : true,\r\n  \"siteVisits\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_submission_id\" : 0,\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"form_id\" : 6,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_submission_id\" : 0,\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"form_id\" : 6,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"student\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"allShifts\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkedInStatus\" : 0,\r\n    \"geoStatus\" : 1,\r\n    \"user_experience_id\" : 6,\r\n    \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"time_log_id\" : 5,\r\n    \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"isCurrentShift\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkedInStatus\" : 0,\r\n    \"geoStatus\" : 1,\r\n    \"user_experience_id\" : 6,\r\n    \"shiftStartTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"time_log_id\" : 5,\r\n    \"shiftEndTime\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : 5,\r\n    \"isCurrentShift\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"isEnded\" : true,\r\n  \"currentlyRunningShift\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminViewUserExperienceResponse>(exampleJson)
            : default(AdminViewUserExperienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="cloneWorkflowBetweenExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/workflow-forms/bulk/clone")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1WorkflowFormsBulkClone")]
        [SwaggerResponse(statusCode: 200, type: typeof(BulkActionCaseloadResponse), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1WorkflowFormsBulkClone([FromBody]CloneWorkflowBetweenExperienceRequest cloneWorkflowBetweenExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BulkActionCaseloadResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"successCount\" : 6,\r\n  \"totalCount\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BulkActionCaseloadResponse>(exampleJson)
            : default(BulkActionCaseloadResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// WorkflowForm
        /// </summary>
        /// <remarks>WorkflowForm</remarks>
        /// <param name="bulkActionStartWorkflowFormsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Experiences/api/consumer/v1/workflow-forms/bulk/start")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostExperiencesApiConsumerV1WorkflowFormsBulkStart")]
        [SwaggerResponse(statusCode: 200, type: typeof(BulkActionCaseloadResponse), description: "OK")]
        public virtual IActionResult PostExperiencesApiConsumerV1WorkflowFormsBulkStart([FromBody]BulkActionStartWorkflowFormsRequest bulkActionStartWorkflowFormsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BulkActionCaseloadResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"successCount\" : 6,\r\n  \"totalCount\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BulkActionCaseloadResponse>(exampleJson)
            : default(BulkActionCaseloadResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
