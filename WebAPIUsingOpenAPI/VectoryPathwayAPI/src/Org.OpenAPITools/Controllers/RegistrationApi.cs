/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RegistrationApiController : ControllerBase
    { 
        /// <summary>
        /// Registration
        /// </summary>
        /// <remarks>Registration</remarks>
        /// <param name="shortName"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Registration/api/consumer/v1/registration/{short_name}/basic")]
        [ValidateModelState]
        [SwaggerOperation("GetRegistrationApiConsumerV1RegistrationByShortNameBasic")]
        [SwaggerResponse(statusCode: 200, type: typeof(BasicDistrict), description: "OK")]
        public virtual IActionResult GetRegistrationApiConsumerV1RegistrationByShortNameBasic([FromRoute (Name = "short_name")][Required]string shortName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BasicDistrict));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"isStandalone\" : true,\r\n  \"name\" : \"name\",\r\n  \"shortName\" : \"shortName\",\r\n  \"logoUrl\" : \"logoUrl\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BasicDistrict>(exampleJson)
            : default(BasicDistrict);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Registration
        /// </summary>
        /// <remarks>Registration</remarks>
        /// <param name="shortName"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Registration/api/consumer/v1/registration/{short_name}/grades")]
        [ValidateModelState]
        [SwaggerOperation("GetRegistrationApiConsumerV1RegistrationByShortNameGrades")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult GetRegistrationApiConsumerV1RegistrationByShortNameGrades([FromRoute (Name = "short_name")][Required]string shortName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Registration
        /// </summary>
        /// <remarks>Registration</remarks>
        /// <param name="shortName"></param>
        /// <param name="schoolId"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Registration/api/consumer/v1/registration/{short_name}/grades/{school_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetRegistrationApiConsumerV1RegistrationByShortNameGradesBySchoolId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult GetRegistrationApiConsumerV1RegistrationByShortNameGradesBySchoolId([FromRoute (Name = "short_name")][Required]string shortName, [FromRoute (Name = "school_id")][Required]string schoolId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Registration
        /// </summary>
        /// <remarks>Registration</remarks>
        /// <param name="shortName"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Registration/api/consumer/v1/registration/{short_name}/schools")]
        [ValidateModelState]
        [SwaggerOperation("GetRegistrationApiConsumerV1RegistrationByShortNameSchools")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BasicSchool>), description: "OK")]
        public virtual IActionResult GetRegistrationApiConsumerV1RegistrationByShortNameSchools([FromRoute (Name = "short_name")][Required]string shortName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<BasicSchool>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"startingGrade\" : 0,\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"endingGrade\" : 6\r\n}, {\r\n  \"startingGrade\" : 0,\r\n  \"name\" : \"name\",\r\n  \"id\" : 1,\r\n  \"endingGrade\" : 6\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<BasicSchool>>(exampleJson)
            : default(List<BasicSchool>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Registration
        /// </summary>
        /// <remarks>Registration</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Registration/api/consumer/v1/emailvalidation/{token}")]
        [ValidateModelState]
        [SwaggerOperation("PatchRegistrationApiConsumerV1EmailvalidationByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult PatchRegistrationApiConsumerV1EmailvalidationByToken([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Reports
        /// </summary>
        /// <remarks>Create Reports</remarks>
        /// <param name="studentRegistrationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Registration/api/consumer/v1/register")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostRegistrationApiConsumerV1Register")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostRegistrationApiConsumerV1Register([FromBody]StudentRegistrationRequest studentRegistrationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
