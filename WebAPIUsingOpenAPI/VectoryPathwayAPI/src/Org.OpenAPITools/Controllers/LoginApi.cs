/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class LoginApiController : ControllerBase
    { 
        /// <summary>
        /// Login Search
        /// </summary>
        /// <remarks>Login Search</remarks>
        /// <param name="varString"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Login/api/consumer/v1/login/{string}")]
        [ValidateModelState]
        [SwaggerOperation("GetLoginApiConsumerV1LoginByString")]
        [SwaggerResponse(statusCode: 200, type: typeof(DistrictLoginDataResponse), description: "OK")]
        public virtual IActionResult GetLoginApiConsumerV1LoginByString([FromRoute (Name = "string")][Required]string varString)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DistrictLoginDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"allowsInvalidEmail\" : true,\r\n  \"nvolved\" : true,\r\n  \"autoSSOLogin\" : true,\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"authType\" : 6,\r\n  \"alsoHasMicrosoft\" : true,\r\n  \"shortName\" : \"shortName\",\r\n  \"logoUrl\" : \"logoUrl\",\r\n  \"ssoBypassAllowed\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DistrictLoginDataResponse>(exampleJson)
            : default(DistrictLoginDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// ZendeskSSO
        /// </summary>
        /// <remarks>ZendeskSSO</remarks>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Login/api/consumer/v1/zendesk-guide-sso")]
        [ValidateModelState]
        [SwaggerOperation("GetLoginApiConsumerV1ZendeskGuideSso")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetLoginApiConsumerV1ZendeskGuideSso()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// SAMLLoginConsumer
        /// </summary>
        /// <remarks>SAMLLoginConsumer</remarks>
        /// <param name="token"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Login/redirect/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetLoginRedirectByToken")]
        public virtual IActionResult GetLoginRedirectByToken([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// SAMLLoginConsumer
        /// </summary>
        /// <remarks>SAMLLoginConsumer</remarks>
        /// <param name="createSAMLTokenRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLogin")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult PostLogin([FromBody]CreateSAMLTokenRequest createSAMLTokenRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="loginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1Login")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1Login([FromBody]LoginRequest loginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="businessPartnerLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/business-partner")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginBusinessPartner")]
        [SwaggerResponse(statusCode: 200, type: typeof(BusinessPartnerLoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginBusinessPartner([FromBody]BusinessPartnerLoginRequest businessPartnerLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BusinessPartnerLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"districts\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BusinessPartnerLoginResponse>(exampleJson)
            : default(BusinessPartnerLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login Search
        /// </summary>
        /// <remarks>Login Search</remarks>
        /// <param name="varString"></param>
        /// <param name="updateNvolvedEmailRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/{string}/nvolved-email-update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginByStringNvolvedEmailUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginByStringNvolvedEmailUpdate([FromRoute (Name = "string")][Required]string varString, [FromBody]UpdateNvolvedEmailRequest updateNvolvedEmailRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="classlinkLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/classlink")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginClasslink")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginClasslink([FromBody]ClasslinkLoginRequest classlinkLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="cleverLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/clever")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginClever")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginClever([FromBody]CleverLoginRequest cleverLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="googleLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/google")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginGoogle")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginGoogle([FromBody]GoogleLoginRequest googleLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="loginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/ldap")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginLdap")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginLdap([FromBody]LoginRequest loginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="microsoftLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/microsoft")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginMicrosoft")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginMicrosoft([FromBody]MicrosoftLoginRequest microsoftLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="classlinkLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/pathwayos-classlink")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginPathwayosClasslink")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginPathwayosClasslink([FromBody]ClasslinkLoginRequest classlinkLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="cleverLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/pathwayos-clever")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginPathwayosClever")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginPathwayosClever([FromBody]CleverLoginRequest cleverLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login
        /// </summary>
        /// <remarks>Login</remarks>
        /// <param name="microsoftLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/pathwayos-microsoft")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginPathwayosMicrosoft")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginPathwayosMicrosoft([FromBody]MicrosoftLoginRequest microsoftLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login Search
        /// </summary>
        /// <remarks>Login Search</remarks>
        /// <param name="searchRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/login/search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1LoginSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginSearchResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1LoginSearch([FromBody]SearchRequest searchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginSearchResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"results\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"shortName\" : \"shortName\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"shortName\" : \"shortName\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginSearchResponse>(exampleJson)
            : default(LoginSearchResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Login Search
        /// </summary>
        /// <remarks>Login Search</remarks>
        /// <param name="updateEmailNvolvedRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/nvolved-email-update/save")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1NvolvedEmailUpdateSave")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1NvolvedEmailUpdateSave([FromBody]UpdateEmailNvolvedRequest updateEmailNvolvedRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// RemoteAuthentication
        /// </summary>
        /// <remarks>RemoteAuthentication</remarks>
        /// <param name="remoteAuthenticationTokenExchangeRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/remote-authentication/token-exchange")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1RemoteAuthenticationTokenExchange")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1RemoteAuthenticationTokenExchange([FromBody]RemoteAuthenticationTokenExchangeRequest remoteAuthenticationTokenExchangeRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// SupportOrgLogin
        /// </summary>
        /// <remarks>SupportOrgLogin</remarks>
        /// <param name="supportOrgLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/supportorg/login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1SupportorgLogin")]
        [SwaggerResponse(statusCode: 200, type: typeof(SupportOrgLoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1SupportorgLogin([FromBody]SupportOrgLoginRequest supportOrgLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SupportOrgLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"district_ids\" : [ 0, 0 ],\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SupportOrgLoginResponse>(exampleJson)
            : default(SupportOrgLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminSearchRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/district-search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminDistrictSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminDistrictResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminDistrictSearch([FromBody]TranseoAdminSearchRequest transeoAdminSearchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminDistrictResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"districts\" : [ {\r\n    \"schools\" : [ {\r\n      \"name\" : \"name\",\r\n      \"id\" : 6\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"id\" : 6\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"schools\" : [ {\r\n      \"name\" : \"name\",\r\n      \"id\" : 6\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"id\" : 6\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminDistrictResponse>(exampleJson)
            : default(TranseoAdminDistrictResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="users"></param>
        /// <param name="transeoAdminLoginTokenOnlyRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/email-login/{users}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminEmailLoginByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminLoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminEmailLoginByUsers([FromRoute (Name = "users")][Required]string users, [FromBody]TranseoAdminLoginTokenOnlyRequest transeoAdminLoginTokenOnlyRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"district_ids\" : [ 0, 0 ],\r\n  \"school_id\" : 6,\r\n  \"transeoAdminCanOnlyAdjustMarketplace\" : true,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminLoginResponse>(exampleJson)
            : default(TranseoAdminLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminSearchRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/email-search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminEmailSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(BasicUser), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminEmailSearch([FromBody]TranseoAdminSearchRequest transeoAdminSearchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BasicUser));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BasicUser>(exampleJson)
            : default(BasicUser);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminGoogleLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/google/token-exchange")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminGoogleTokenExchange")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminLoginTokenDTO), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminGoogleTokenExchange([FromBody]TranseoAdminGoogleLoginRequest transeoAdminGoogleLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminLoginTokenDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"firstName\" : \"firstName\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"id\" : 0,\r\n  \"email\" : \"email\",\r\n  \"token\" : \"token\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminLoginTokenDTO>(exampleJson)
            : default(TranseoAdminLoginTokenDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminTokenLoginRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminLogin")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminLoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminLogin([FromBody]TranseoAdminTokenLoginRequest transeoAdminTokenLoginRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"district_ids\" : [ 0, 0 ],\r\n  \"school_id\" : 6,\r\n  \"transeoAdminCanOnlyAdjustMarketplace\" : true,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminLoginResponse>(exampleJson)
            : default(TranseoAdminLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminLoginTokenOnlyRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/portal")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminPortal")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminLoginResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminPortal([FromBody]TranseoAdminLoginTokenOnlyRequest transeoAdminLoginTokenOnlyRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminLoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"district_ids\" : [ 0, 0 ],\r\n  \"school_id\" : 6,\r\n  \"transeoAdminCanOnlyAdjustMarketplace\" : true,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminLoginResponse>(exampleJson)
            : default(TranseoAdminLoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// TranseoAdminLogin
        /// </summary>
        /// <remarks>TranseoAdminLogin</remarks>
        /// <param name="transeoAdminSearchRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/consumer/v1/transeo-admin/support-org-search")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiConsumerV1TranseoAdminSupportOrgSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(TranseoAdminSupportOrgResponse), description: "OK")]
        public virtual IActionResult PostLoginApiConsumerV1TranseoAdminSupportOrgSearch([FromBody]TranseoAdminSearchRequest transeoAdminSearchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TranseoAdminSupportOrgResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"orgs\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TranseoAdminSupportOrgResponse>(exampleJson)
            : default(TranseoAdminSupportOrgResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// RemoteAuthentication
        /// </summary>
        /// <remarks>RemoteAuthentication</remarks>
        /// <param name="generateRemoteAuthenticationLinkRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/api/vendor/v1/remote-authentication/sso-link")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginApiVendorV1RemoteAuthenticationSsoLink")]
        [SwaggerResponse(statusCode: 200, type: typeof(RemoteAuthenticationLinkResponse), description: "OK")]
        public virtual IActionResult PostLoginApiVendorV1RemoteAuthenticationSsoLink([FromBody]GenerateRemoteAuthenticationLinkRequest generateRemoteAuthenticationLinkRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RemoteAuthenticationLinkResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"link\" : \"link\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RemoteAuthenticationLinkResponse>(exampleJson)
            : default(RemoteAuthenticationLinkResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// SAMLLoginConsumer
        /// </summary>
        /// <remarks>SAMLLoginConsumer</remarks>
        /// <param name="createSAMLDataRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginData")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostLoginData([FromBody]CreateSAMLDataRequest createSAMLDataRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// SAMLLoginConsumer
        /// </summary>
        /// <remarks>SAMLLoginConsumer</remarks>
        /// <param name="exchangeTokenSAMLRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/exchange")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginExchange")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostLoginExchange([FromBody]ExchangeTokenSAMLRequest exchangeTokenSAMLRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// SAMLLoginConsumer
        /// </summary>
        /// <remarks>SAMLLoginConsumer</remarks>
        /// <param name="exchangeTokenSAMLRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Login/url")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostLoginUrl")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult PostLoginUrl([FromBody]ExchangeTokenSAMLRequest exchangeTokenSAMLRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
