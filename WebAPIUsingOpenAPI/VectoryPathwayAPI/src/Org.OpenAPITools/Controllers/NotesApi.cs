/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class NotesApiController : ControllerBase
    { 
        /// <summary>
        /// Notifications
        /// </summary>
        /// <remarks>Notifications</remarks>
        /// <param name="contactNotes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Notes/api/consumer/v1/contact/notes/{contact_notes}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteNotesApiConsumerV1ContactNotesByContactNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteNotesApiConsumerV1ContactNotesByContactNotes([FromRoute (Name = "contact_notes")][Required]string contactNotes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization Note
        /// </summary>
        /// <remarks>Organization Note</remarks>
        /// <param name="organizationNotes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Notes/api/consumer/v1/organization/notes/{organization_notes}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteNotesApiConsumerV1OrganizationNotesByOrganizationNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteNotesApiConsumerV1OrganizationNotesByOrganizationNotes([FromRoute (Name = "organization_notes")][Required]string organizationNotes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Notifications
        /// </summary>
        /// <remarks>Notifications</remarks>
        /// <param name="contacts"></param>
        /// <param name="createNoteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Notes/api/consumer/v1/contact/{contacts}/notes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostNotesApiConsumerV1ContactByContactsNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostNotesApiConsumerV1ContactByContactsNotes([FromRoute (Name = "contacts")][Required]string contacts, [FromBody]CreateNoteRequest createNoteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization Note
        /// </summary>
        /// <remarks>Organization Note</remarks>
        /// <param name="organizations"></param>
        /// <param name="createNoteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Notes/api/consumer/v1/organization/{organizations}/notes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostNotesApiConsumerV1OrganizationByOrganizationsNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostNotesApiConsumerV1OrganizationByOrganizationsNotes([FromRoute (Name = "organizations")][Required]string organizations, [FromBody]CreateNoteRequest createNoteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// User Note
        /// </summary>
        /// <remarks>User Note</remarks>
        /// <param name="users"></param>
        /// <param name="createNoteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Notes/api/consumer/v1/user/{users}/notes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostNotesApiConsumerV1UserByUsersNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostNotesApiConsumerV1UserByUsersNotes([FromRoute (Name = "users")][Required]string users, [FromBody]CreateNoteRequest createNoteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
