/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FormsApiController : ControllerBase
    { 
        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="formFields"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Forms/api/consumer/v1/form-fields/{form_fields}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFormsApiConsumerV1FormFieldsByFormFields")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteFormsApiConsumerV1FormFieldsByFormFields([FromRoute (Name = "form_fields")][Required]string formFields, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="formFields"></param>
        /// <param name="formListItems"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Forms/api/consumer/v1/form-fields/{form_fields}/list-item/{form_list_items}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFormsApiConsumerV1FormFieldsByFormFieldsListItemByFormListItems")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteFormsApiConsumerV1FormFieldsByFormFieldsListItemByFormListItems([FromRoute (Name = "form_fields")][Required]string formFields, [FromRoute (Name = "form_list_items")][Required]string formListItems, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="formSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Forms/api/consumer/v1/form-submission/{form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFormsApiConsumerV1FormSubmissionByFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteFormsApiConsumerV1FormSubmissionByFormSubmissions([FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Forms/api/consumer/v1/forms/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFormsApiConsumerV1FormsByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteFormsApiConsumerV1FormsByForms([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms Files
        /// </summary>
        /// <remarks>Forms Files</remarks>
        /// <param name="forms"></param>
        /// <param name="formFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Forms/api/consumer/v1/forms/{forms}/file/{form_files}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteFormsApiConsumerV1FormsByFormsFileByFormFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteFormsApiConsumerV1FormsByFormsFileByFormFiles([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "form_files")][Required]string formFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/district-forms")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1DistrictForms")]
        public virtual IActionResult GetFormsApiConsumerV1DistrictForms([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1Forms")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormDTO>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1Forms([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"fileCount\" : 6,\r\n  \"created_by\" : 1,\r\n  \"linkToken\" : \"linkToken\",\r\n  \"appearsInMarketPlace\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"isStructureForm\" : true,\r\n  \"id\" : 5,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"folder_id\" : 0,\r\n  \"approvalWorkflow\" : 5,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"fileCount\" : 6,\r\n  \"created_by\" : 1,\r\n  \"linkToken\" : \"linkToken\",\r\n  \"appearsInMarketPlace\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"isStructureForm\" : true,\r\n  \"id\" : 5,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"folder_id\" : 0,\r\n  \"approvalWorkflow\" : 5,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormDTO>>(exampleJson)
            : default(List<FormDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByForms([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/categories")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsCategories([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/delete-data")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsDeleteData")]
        [SwaggerResponse(statusCode: 200, type: typeof(DeleteFormResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsDeleteData([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DeleteFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"attachedToDistrict\" : true,\r\n  \"attachedToExperiences\" : true,\r\n  \"attachedToActivities\" : true,\r\n  \"canDeleteForm\" : true,\r\n  \"attachedToSettings\" : true,\r\n  \"hasBeenFilledOut\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DeleteFormResponse>(exampleJson)
            : default(DeleteFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/entity")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsEntity")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormIsEntityCustomFormResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsEntity([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormIsEntityCustomFormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"isRequiredStudentForm\" : true,\r\n  \"isCourseForm\" : true,\r\n  \"isContactForm\" : true,\r\n  \"isOrgForm\" : true,\r\n  \"isOptionalStudentForm\" : true,\r\n  \"isExperienceForm\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormIsEntityCustomFormResponse>(exampleJson)
            : default(FormIsEntityCustomFormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Form Files
        /// </summary>
        /// <remarks>Forms Files</remarks>
        /// <param name="forms"></param>
        /// <param name="formFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/file/{form_files}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsFileByFormFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsFileByFormFiles([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "form_files")][Required]string formFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/recipients")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsRecipients")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BasicUser>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsRecipients([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<BasicUser>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<BasicUser>>(exampleJson)
            : default(List<BasicUser>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionResponse>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsSubmissions([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionResponse>>(exampleJson)
            : default(List<FormSubmissionResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="formSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions/{form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormSubmissionResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissions([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormSubmissionResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormSubmissionResponse>(exampleJson)
            : default(FormSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="formSubmissions"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions/{form_submissions}/student/{users}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissionsStudentByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormSubmissionResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissionsStudentByUsers([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormSubmissionResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormSubmissionResponse>(exampleJson)
            : default(FormSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions/student-information")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsSubmissionsStudentInformation")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormsControllerFormSubmissionStudentInformationResponse>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsSubmissionsStudentInformation([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormsControllerFormSubmissionStudentInformationResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"studentId\" : \"studentId\",\r\n  \"studentGradeLevel\" : 0,\r\n  \"districtName\" : \"districtName\",\r\n  \"school\" : \"school\",\r\n  \"formSubmissionId\" : 6\r\n}, {\r\n  \"studentId\" : \"studentId\",\r\n  \"studentGradeLevel\" : 0,\r\n  \"districtName\" : \"districtName\",\r\n  \"school\" : \"school\",\r\n  \"formSubmissionId\" : 6\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormsControllerFormSubmissionStudentInformationResponse>>(exampleJson)
            : default(List<FormsControllerFormSubmissionStudentInformationResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/template")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsTemplate")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsTemplate([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/{forms}/visibility/teachers")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsByFormsVisibilityTeachers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<BasicUser>), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsByFormsVisibilityTeachers([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<BasicUser>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<BasicUser>>(exampleJson)
            : default(List<BasicUser>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="formSubmissionFields"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/files/{form_submission_fields}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsFilesByFormSubmissionFields")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsFilesByFormSubmissionFields([FromRoute (Name = "form_submission_fields")][Required]string formSubmissionFields, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/get-external-approval/token/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsGetExternalApprovalTokenByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalFormApprovalResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsGetExternalApprovalTokenByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalFormApprovalResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalFormApprovalResponse>(exampleJson)
            : default(ExternalFormApprovalResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/get-external-entity/token/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsGetExternalEntityTokenByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsGetExternalEntityTokenByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/get-external/token/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsGetExternalTokenByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsGetExternalTokenByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms Files
        /// </summary>
        /// <remarks>Forms Files</remarks>
        /// <param name="token"></param>
        /// <param name="formFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/get-external/token/{token}/file/{form_files}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsGetExternalTokenByTokenFileByFormFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsGetExternalTokenByTokenFileByFormFiles([FromRoute (Name = "token")][Required]string token, [FromRoute (Name = "form_files")][Required]string formFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms Files
        /// </summary>
        /// <remarks>Forms Files</remarks>
        /// <param name="token"></param>
        /// <param name="formSubmissionFields"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/get-external/token/{token}/file-submission/{form_submission_fields}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsGetExternalTokenByTokenFileSubmissionByFormSubmissionFields")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsGetExternalTokenByTokenFileSubmissionByFormSubmissionFields([FromRoute (Name = "token")][Required]string token, [FromRoute (Name = "form_submission_fields")][Required]string formSubmissionFields, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Forms/api/consumer/v1/forms/token/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetFormsApiConsumerV1FormsTokenByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult GetFormsApiConsumerV1FormsTokenByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="formFields"></param>
        /// <param name="formListItems"></param>
        /// <param name="updateFormListItemRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/form-fields/{form_fields}/list-item/{form_list_items}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormFieldsByFormFieldsListItemByFormListItems")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormFieldsByFormFieldsListItemByFormListItems([FromRoute (Name = "form_fields")][Required]string formFields, [FromRoute (Name = "form_list_items")][Required]string formListItems, [FromBody]UpdateFormListItemRequest updateFormListItemRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="editFormFieldsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/{forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsByForms([FromRoute (Name = "forms")][Required]string forms, [FromBody]EditFormFieldsRequest editFormFieldsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="adjustFormRecipientRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/{forms}/recipients")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsByFormsRecipients")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsByFormsRecipients([FromRoute (Name = "forms")][Required]string forms, [FromBody]AdjustFormRecipientRequest adjustFormRecipientRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Complete Forms
        /// </summary>
        /// <remarks>Complete Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="formSubmissions"></param>
        /// <param name="updateFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions/{form_submissions}/update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissionsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsByFormsSubmissionsByFormSubmissionsUpdate([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromBody]UpdateFormRequest updateFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/{forms}/toggle-bpp-visibility")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsByFormsToggleBppVisibility")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsByFormsToggleBppVisibility([FromRoute (Name = "forms")][Required]string forms, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="users"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/{forms}/visibility/teacher/{users}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsByFormsVisibilityTeacherByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsByFormsVisibilityTeacherByUsers([FromRoute (Name = "forms")][Required]string forms, [FromRoute (Name = "users")][Required]string users, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="completeFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/fields/{forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsFieldsByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionDTO>), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsFieldsByForms([FromRoute (Name = "forms")][Required]string forms, [FromBody]CompleteFormRequest completeFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionDTO>>(exampleJson)
            : default(List<FormSubmissionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="updateFormFieldOrderRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/fields/{forms}/update-order")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsFieldsByFormsUpdateOrder")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsFieldsByFormsUpdateOrder([FromRoute (Name = "forms")][Required]string forms, [FromBody]UpdateFormFieldOrderRequest updateFormFieldOrderRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="updateFormFieldListItemOrderRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/fields/{forms}/update-order/list-items")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsFieldsByFormsUpdateOrderListItems")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsFieldsByFormsUpdateOrderListItems([FromRoute (Name = "forms")][Required]string forms, [FromBody]UpdateFormFieldListItemOrderRequest updateFormFieldListItemOrderRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="addNewSingleValueRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/fields/{forms}/values")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsFieldsByFormsValues")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsFieldsByFormsValues([FromRoute (Name = "forms")][Required]string forms, [FromBody]AddNewSingleValueRequest addNewSingleValueRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="formSubmissions"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Forms/api/consumer/v1/forms/submissions/{form_submissions}/attached-user/{users}")]
        [ValidateModelState]
        [SwaggerOperation("PatchFormsApiConsumerV1FormsSubmissionsByFormSubmissionsAttachedUserByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchFormsApiConsumerV1FormsSubmissionsByFormSubmissionsAttachedUserByUsers([FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="bulkSubmissionCSVRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/{forms}/bulk-upload")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsByFormsBulkUpload")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsByFormsBulkUpload([FromRoute (Name = "forms")][Required]string forms, [FromBody]BulkSubmissionCSVRequest bulkSubmissionCSVRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Complete Forms
        /// </summary>
        /// <remarks>Complete Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="completeFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/{forms}/complete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsByFormsComplete")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionDTO>), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsByFormsComplete([FromRoute (Name = "forms")][Required]string forms, [FromBody]CompleteFormRequest completeFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionDTO>>(exampleJson)
            : default(List<FormSubmissionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms Files
        /// </summary>
        /// <remarks>Forms Files</remarks>
        /// <param name="forms"></param>
        /// <param name="addFileToFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/{forms}/files")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsByFormsFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsByFormsFiles([FromRoute (Name = "forms")][Required]string forms, [FromBody]AddFileToFormRequest addFileToFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/{forms}/submissions")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsByFormsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionResponse>), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsByFormsSubmissions([FromRoute (Name = "forms")][Required]string forms, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionResponse>>(exampleJson)
            : default(List<FormSubmissionResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Complete Forms
        /// </summary>
        /// <remarks>Complete Forms</remarks>
        /// <param name="token"></param>
        /// <param name="completeFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/external/entity-custom-fields/token/{token}/complete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsExternalEntityCustomFieldsTokenByTokenComplete")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionDTO>), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsExternalEntityCustomFieldsTokenByTokenComplete([FromRoute (Name = "token")][Required]string token, [FromBody]CompleteFormRequest completeFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionDTO>>(exampleJson)
            : default(List<FormSubmissionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Complete Forms
        /// </summary>
        /// <remarks>Complete Forms</remarks>
        /// <param name="token"></param>
        /// <param name="completeFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/external/entity/token/{token}/complete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsExternalEntityTokenByTokenComplete")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionDTO>), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsExternalEntityTokenByTokenComplete([FromRoute (Name = "token")][Required]string token, [FromBody]CompleteFormRequest completeFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionDTO>>(exampleJson)
            : default(List<FormSubmissionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Complete Forms
        /// </summary>
        /// <remarks>Complete Forms</remarks>
        /// <param name="token"></param>
        /// <param name="completeFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/external/token/{token}/complete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsExternalTokenByTokenComplete")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FormSubmissionDTO>), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsExternalTokenByTokenComplete([FromRoute (Name = "token")][Required]string token, [FromBody]CompleteFormRequest completeFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FormSubmissionDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"user_id\" : 2,\r\n  \"external_form_submitter_id\" : 3,\r\n  \"form_id\" : 5,\r\n  \"id\" : 2,\r\n  \"entity_id\" : 7,\r\n  \"entity\" : 9,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FormSubmissionDTO>>(exampleJson)
            : default(List<FormSubmissionDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Forms
        /// </summary>
        /// <remarks>Edit Forms</remarks>
        /// <param name="forms"></param>
        /// <param name="addFieldToFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/fields/{forms}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsFieldsByForms")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsFieldsByForms([FromRoute (Name = "forms")][Required]string forms, [FromBody]AddFieldToFormRequest addFieldToFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="token"></param>
        /// <param name="approveExternalFormRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/forms/get-external-approval/token/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1FormsGetExternalApprovalTokenByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1FormsGetExternalApprovalTokenByToken([FromRoute (Name = "token")][Required]string token, [FromBody]ApproveExternalFormRequest approveExternalFormRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Forms
        /// </summary>
        /// <remarks>Forms</remarks>
        /// <param name="formsControllerBulkFormsRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Forms/api/consumer/v1/pathwayos/forms/bulk")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostFormsApiConsumerV1PathwayosFormsBulk")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormResponse), description: "OK")]
        public virtual IActionResult PostFormsApiConsumerV1PathwayosFormsBulk([FromBody]FormsControllerBulkFormsRequest formsControllerBulkFormsRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"externalToken\" : \"externalToken\",\r\n  \"description\" : \"description\",\r\n  \"canBeUsedByBusinessPartners\" : true,\r\n  \"appearsInMarketPlace\" : true,\r\n  \"premium\" : true,\r\n  \"name\" : \"name\",\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"form_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 7,\r\n  \"canBeUsedInWorkflow\" : true,\r\n  \"fields\" : [ {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  }, {\r\n    \"allowsOtherField\" : true,\r\n    \"studentsCanViewOnEntity\" : true,\r\n    \"values\" : [ {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    }, {\r\n      \"id\" : 3,\r\n      \"value\" : \"value\",\r\n      \"order\" : 9\r\n    } ],\r\n    \"showToStudentsInExperience\" : true,\r\n    \"description\" : \"description\",\r\n    \"characterLimit\" : 2,\r\n    \"type\" : 5,\r\n    \"wordLimit\" : 2,\r\n    \"availableOnExternalEntityForm\" : true,\r\n    \"required\" : true,\r\n    \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n    \"hiddenFromStaffOnStudentProfile\" : true,\r\n    \"conditionalDisplayValue\" : 1,\r\n    \"hiddenFromStudents\" : true,\r\n    \"name\" : \"name\",\r\n    \"id\" : 5,\r\n    \"maxMultiSelect\" : 7\r\n  } ],\r\n  \"approvalWorkflow\" : 4,\r\n  \"folder_id\" : 1,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormResponse>(exampleJson)
            : default(FormResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
