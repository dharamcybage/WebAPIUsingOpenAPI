/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ReflectionApiController : ControllerBase
    { 
        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="payPeriodSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Reflection/api/consumer/v1/payperiods/get-timelogs/{pay_period_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("GetReflectionApiConsumerV1PayperiodsGetTimelogsByPayPeriodSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(TimeLogForPayPeriodResponse), description: "OK")]
        public virtual IActionResult GetReflectionApiConsumerV1PayperiodsGetTimelogsByPayPeriodSubmissions([FromRoute (Name = "pay_period_submissions")][Required]string payPeriodSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TimeLogForPayPeriodResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"formSubmission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TimeLogForPayPeriodResponse>(exampleJson)
            : default(TimeLogForPayPeriodResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Reflection/api/consumer/v1/pending/pay-periods")]
        [ValidateModelState]
        [SwaggerOperation("GetReflectionApiConsumerV1PendingPayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ReflectionTimeLogResponse>), description: "OK")]
        public virtual IActionResult GetReflectionApiConsumerV1PendingPayPeriods([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ReflectionTimeLogResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ReflectionTimeLogResponse>>(exampleJson)
            : default(List<ReflectionTimeLogResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Reflection/api/consumer/v1/pending/reflections")]
        [ValidateModelState]
        [SwaggerOperation("GetReflectionApiConsumerV1PendingReflections")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ReflectionTimeLogResponse>), description: "OK")]
        public virtual IActionResult GetReflectionApiConsumerV1PendingReflections([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ReflectionTimeLogResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ReflectionTimeLogResponse>>(exampleJson)
            : default(List<ReflectionTimeLogResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period Reflection
        /// </summary>
        /// <remarks>Pay Period Reflection</remarks>
        /// <param name="approveRejectReflectionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Reflection/api/consumer/v1/external-payperiod-reflection-approval/update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchReflectionApiConsumerV1ExternalPayperiodReflectionApprovalUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchReflectionApiConsumerV1ExternalPayperiodReflectionApprovalUpdate([FromBody]ApproveRejectReflectionRequest approveRejectReflectionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Reflection External Approval
        /// </summary>
        /// <remarks>Reflection External Approval</remarks>
        /// <param name="approveRejectReflectionRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Reflection/api/consumer/v1/external-reflection-approval/update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchReflectionApiConsumerV1ExternalReflectionApprovalUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchReflectionApiConsumerV1ExternalReflectionApprovalUpdate([FromBody]ApproveRejectReflectionRequest approveRejectReflectionRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="payPeriodSubmissions"></param>
        /// <param name="approveReject"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Reflection/api/consumer/v1/payperiods/update/{pay_period_submissions}/{approve_reject}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchReflectionApiConsumerV1PayperiodsUpdateByPayPeriodSubmissionsByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchReflectionApiConsumerV1PayperiodsUpdateByPayPeriodSubmissionsByApproveReject([FromRoute (Name = "pay_period_submissions")][Required]string payPeriodSubmissions, [FromRoute (Name = "approve_reject")][Required]string approveReject, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="approveReject"></param>
        /// <param name="pendingReflectionControllerBulkActionTimeLogApproveDenyRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Reflection/api/consumer/v1/timelogs/update/bulk-action/{approve_reject}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchReflectionApiConsumerV1TimelogsUpdateBulkActionByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchReflectionApiConsumerV1TimelogsUpdateBulkActionByApproveReject([FromRoute (Name = "approve_reject")][Required]string approveReject, [FromBody]PendingReflectionControllerBulkActionTimeLogApproveDenyRequest pendingReflectionControllerBulkActionTimeLogApproveDenyRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pending Reflection
        /// </summary>
        /// <remarks>Pending Reflection</remarks>
        /// <param name="timeLogs"></param>
        /// <param name="approveReject"></param>
        /// <param name="body"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Reflection/api/consumer/v1/timelogs/update/{time_logs}/{approve_reject}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchReflectionApiConsumerV1TimelogsUpdateByTimeLogsByApproveReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchReflectionApiConsumerV1TimelogsUpdateByTimeLogsByApproveReject([FromRoute (Name = "time_logs")][Required]string timeLogs, [FromRoute (Name = "approve_reject")][Required]string approveReject, [FromBody]Object body, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Pay Period Reflection
        /// </summary>
        /// <remarks>Pay Period Reflection</remarks>
        /// <param name="getReflectionApprovalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Reflection/api/consumer/v1/external-payperiod-reflection-approval/data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostReflectionApiConsumerV1ExternalPayperiodReflectionApprovalData")]
        [SwaggerResponse(statusCode: 200, type: typeof(PayPeriodReflectionApprovalFetchResponse), description: "OK")]
        public virtual IActionResult PostReflectionApiConsumerV1ExternalPayperiodReflectionApprovalData([FromBody]GetReflectionApprovalRequest getReflectionApprovalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PayPeriodReflectionApprovalFetchResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"payPeriodSubmission\" : \"{}\",\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PayPeriodReflectionApprovalFetchResponse>(exampleJson)
            : default(PayPeriodReflectionApprovalFetchResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Reflection External Approval
        /// </summary>
        /// <remarks>Reflection External Approval</remarks>
        /// <param name="getReflectionApprovalRequest"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Reflection/api/consumer/v1/external-reflection-approval/data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostReflectionApiConsumerV1ExternalReflectionApprovalData")]
        [SwaggerResponse(statusCode: 200, type: typeof(ReflectionApprovalFetchResponse), description: "OK")]
        public virtual IActionResult PostReflectionApiConsumerV1ExternalReflectionApprovalData([FromBody]GetReflectionApprovalRequest getReflectionApprovalRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ReflectionApprovalFetchResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"approvalType\" : 0,\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"submission\" : {\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ]\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ReflectionApprovalFetchResponse>(exampleJson)
            : default(ReflectionApprovalFetchResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
