/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProgressTrackerApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTracker")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTracker([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : [ {\r\n    \"college\" : {\r\n      \"fafsaDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"essaysGoal\" : 2,\r\n      \"lastTranscriptDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"bragSheetDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"appliedCount\" : 1,\r\n      \"letterOfRecGoal\" : 3,\r\n      \"rejectedCount\" : 2,\r\n      \"applyingCount\" : 6,\r\n      \"letterOfRecCompleted\" : 5,\r\n      \"interestedCount\" : 7,\r\n      \"attendingCollege\" : \"attendingCollege\",\r\n      \"essaysCompleted\" : 5,\r\n      \"acceptedCount\" : 9\r\n    },\r\n    \"journey\" : {\r\n      \"planSubmittedDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"planApproved\" : true\r\n    },\r\n    \"ecosystem\" : {\r\n      \"studentId\" : \"studentId\",\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"activitiesAssigned\" : 8,\r\n      \"tasksCompleted\" : 6,\r\n      \"badgesAssigned\" : 9,\r\n      \"school\" : \"school\",\r\n      \"tasksAssigned\" : 3,\r\n      \"grade\" : 9,\r\n      \"activitiesCompleted\" : 6,\r\n      \"email\" : \"email\"\r\n    },\r\n    \"academicTests\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"jobs\" : {\r\n      \"experienceApplicationsCount\" : 6,\r\n      \"completedWorkflowForms\" : 1,\r\n      \"submittedPayPeriodCount\" : 4,\r\n      \"siteVistsCount\" : 7,\r\n      \"evaluationEventsRequired\" : 7,\r\n      \"assignedWorkflowForms\" : 1,\r\n      \"shiftsCount\" : 1,\r\n      \"experiencesCount\" : 1,\r\n      \"lastCareerSurveyDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"timeLogHours\" : 5.025004791520295,\r\n      \"careerCluster\" : \"careerCluster\",\r\n      \"requiredPayPeriodCount\" : 4,\r\n      \"evaluationEventsCompleted\" : 9\r\n    },\r\n    \"id\" : 0,\r\n    \"serve\" : {\r\n      \"serviceHours\" : 1.284659006116532,\r\n      \"serviceGroupsCount\" : 6\r\n    }\r\n  }, {\r\n    \"college\" : {\r\n      \"fafsaDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"essaysGoal\" : 2,\r\n      \"lastTranscriptDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"bragSheetDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"appliedCount\" : 1,\r\n      \"letterOfRecGoal\" : 3,\r\n      \"rejectedCount\" : 2,\r\n      \"applyingCount\" : 6,\r\n      \"letterOfRecCompleted\" : 5,\r\n      \"interestedCount\" : 7,\r\n      \"attendingCollege\" : \"attendingCollege\",\r\n      \"essaysCompleted\" : 5,\r\n      \"acceptedCount\" : 9\r\n    },\r\n    \"journey\" : {\r\n      \"planSubmittedDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"planApproved\" : true\r\n    },\r\n    \"ecosystem\" : {\r\n      \"studentId\" : \"studentId\",\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"activitiesAssigned\" : 8,\r\n      \"tasksCompleted\" : 6,\r\n      \"badgesAssigned\" : 9,\r\n      \"school\" : \"school\",\r\n      \"tasksAssigned\" : 3,\r\n      \"grade\" : 9,\r\n      \"activitiesCompleted\" : 6,\r\n      \"email\" : \"email\"\r\n    },\r\n    \"academicTests\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"jobs\" : {\r\n      \"experienceApplicationsCount\" : 6,\r\n      \"completedWorkflowForms\" : 1,\r\n      \"submittedPayPeriodCount\" : 4,\r\n      \"siteVistsCount\" : 7,\r\n      \"evaluationEventsRequired\" : 7,\r\n      \"assignedWorkflowForms\" : 1,\r\n      \"shiftsCount\" : 1,\r\n      \"experiencesCount\" : 1,\r\n      \"lastCareerSurveyDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"timeLogHours\" : 5.025004791520295,\r\n      \"careerCluster\" : \"careerCluster\",\r\n      \"requiredPayPeriodCount\" : 4,\r\n      \"evaluationEventsCompleted\" : 9\r\n    },\r\n    \"id\" : 0,\r\n    \"serve\" : {\r\n      \"serviceHours\" : 1.284659006116532,\r\n      \"serviceGroupsCount\" : 6\r\n    }\r\n  } ],\r\n  \"nextCache\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"allAcademicTests\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 2,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 2,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"cachedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerResponse>(exampleJson)
            : default(ProgressTrackerResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="academicTests"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/academic-tests/{academic_tests}")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAcademicTestsByAcademicTests")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerAcademicTestResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAcademicTestsByAcademicTests([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "academic_tests")][Required]string academicTests, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerAcademicTestResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"date\",\r\n  \"result\" : \"result\"\r\n}, {\r\n  \"date\" : \"date\",\r\n  \"result\" : \"result\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerAcademicTestResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerAcademicTestResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/accepted-colleges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAcceptedColleges")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerCollegeListResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAcceptedColleges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerCollegeListResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerCollegeListResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerCollegeListResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/activities")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerActivityResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersActivities([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerActivityResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"completed\" : true\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"completed\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerActivityResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerActivityResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/applications")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersApplications")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerApplicationsResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersApplications([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerApplicationsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceId\" : 0,\r\n  \"organizationName\" : \"organizationName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"status\" : \"status\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceId\" : 0,\r\n  \"organizationName\" : \"organizationName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"status\" : \"status\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerApplicationsResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerApplicationsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/applied-colleges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAppliedColleges")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerCollegeListResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAppliedColleges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerCollegeListResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerCollegeListResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerCollegeListResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/applying-colleges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersApplyingColleges")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerCollegeListResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersApplyingColleges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerCollegeListResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerCollegeListResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerCollegeListResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/attending-college")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAttendingCollege")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerControllerAttendingCollegeResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersAttendingCollege([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerControllerAttendingCollegeResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"collegeId\" : \"collegeId\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerControllerAttendingCollegeResponse>(exampleJson)
            : default(ProgressTrackerControllerAttendingCollegeResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/badges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersBadges")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersBadges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/brag-sheet")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersBragSheet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerControllerBragSheetResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersBragSheet([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerControllerBragSheetResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form_submission_id\" : 0,\r\n  \"form_id\" : 6\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerControllerBragSheetResponse>(exampleJson)
            : default(ProgressTrackerControllerBragSheetResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/career-survey")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersCareerSurvey")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerControllerCareerSurveyResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersCareerSurvey([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerControllerCareerSurveyResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"id\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerControllerCareerSurveyResponse>(exampleJson)
            : default(ProgressTrackerControllerCareerSurveyResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/essays")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersEssays")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerEssaysResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersEssays([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerEssaysResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"fileUrl\" : \"fileUrl\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"fileUrl\" : \"fileUrl\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerEssaysResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerEssaysResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/evaluations")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersEvaluations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerEvaluationsResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersEvaluations([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerEvaluationsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 0,\r\n  \"evaluationName\" : \"evaluationName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"eventDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : \"status\"\r\n}, {\r\n  \"experienceId\" : 0,\r\n  \"evaluationName\" : \"evaluationName\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"eventDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"status\" : \"status\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerEvaluationsResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerEvaluationsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/experiences")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerExperiencesResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersExperiences([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerExperiencesResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"completed\" : true\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0,\r\n  \"completed\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerExperiencesResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerExperiencesResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/fafsa-activity")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersFafsaActivity")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerControllerFAFSAResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersFafsaActivity([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerControllerFAFSAResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"activityId\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerControllerFAFSAResponse>(exampleJson)
            : default(ProgressTrackerControllerFAFSAResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/interested-colleges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersInterestedColleges")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerCollegeListResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersInterestedColleges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerCollegeListResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerCollegeListResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerCollegeListResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/latest-transcript-url")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersLatestTranscriptUrl")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressTrackerControllerTranscriptResponse), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersLatestTranscriptUrl([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressTrackerControllerTranscriptResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"fileUrl\" : \"fileUrl\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressTrackerControllerTranscriptResponse>(exampleJson)
            : default(ProgressTrackerControllerTranscriptResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/letters-of-rec")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersLettersOfRec")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerLetterOfRecResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersLettersOfRec([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerLetterOfRecResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"recommenderName\" : \"recommenderName\",\r\n  \"complete\" : true\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"recommenderName\" : \"recommenderName\",\r\n  \"complete\" : true\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerLetterOfRecResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerLetterOfRecResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/pay-periods")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersPayPeriods")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerPayPeriodResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersPayPeriods([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerPayPeriodResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"approvedHours\" : 0.8008281904610115,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"approvedHours\" : 0.8008281904610115,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerPayPeriodResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerPayPeriodResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/rejected-colleges")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersRejectedColleges")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerCollegeListResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersRejectedColleges([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerCollegeListResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"collegeId\" : \"collegeId\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerCollegeListResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerCollegeListResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/service-groups")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersServiceGroups")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerServiceGroupsResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersServiceGroups([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerServiceGroupsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerServiceGroupsResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerServiceGroupsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/service-hours")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersServiceHours")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerServiceHoursResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersServiceHours([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerServiceHoursResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"hours\" : 6.027456183070403,\r\n  \"eventName\" : \"eventName\",\r\n  \"dateString\" : \"dateString\",\r\n  \"id\" : 0\r\n}, {\r\n  \"hours\" : 6.027456183070403,\r\n  \"eventName\" : \"eventName\",\r\n  \"dateString\" : \"dateString\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerServiceHoursResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerServiceHoursResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/shifts")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersShifts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerShiftsResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersShifts([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerShiftsResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"scheduledHours\" : 0.8008281904610115\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"experienceName\" : \"experienceName\",\r\n  \"scheduledHours\" : 0.8008281904610115\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerShiftsResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerShiftsResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/site-visits")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersSiteVisits")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerSiteVisitResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersSiteVisits([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerSiteVisitResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"submittedBy\" : \"submittedBy\",\r\n  \"form_submission_id\" : 6,\r\n  \"form_id\" : 0,\r\n  \"experienceName\" : \"experienceName\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"submittedBy\" : \"submittedBy\",\r\n  \"form_submission_id\" : 6,\r\n  \"form_id\" : 0,\r\n  \"experienceName\" : \"experienceName\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerSiteVisitResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerSiteVisitResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/tasks")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersTasks")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerTaskResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersTasks([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerTaskResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"completed\" : true,\r\n  \"id\" : 0\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"completed\" : true,\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerTaskResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerTaskResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/time-logs")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersTimeLogs")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerTimeLogResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersTimeLogs([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerTimeLogResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 0.8008281904610115,\r\n  \"experienceName\" : \"experienceName\"\r\n}, {\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvedHours\" : 0.8008281904610115,\r\n  \"experienceName\" : \"experienceName\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerTimeLogResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerTimeLogResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Progress Tracker
        /// </summary>
        /// <remarks>Progress Tracker</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Progress Tracker/api/consumer/v1/progress-tracker/details/{users}/workflows")]
        [ValidateModelState]
        [SwaggerOperation("GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersWorkflows")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ProgressTrackerControllerWorkflowFormResponse>), description: "OK")]
        public virtual IActionResult GetProgressTrackerApiConsumerV1ProgressTrackerDetailsByUsersWorkflows([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ProgressTrackerControllerWorkflowFormResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experienceId\" : 0,\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"workflowFormName\" : \"workflowFormName\",\r\n  \"status\" : \"status\"\r\n}, {\r\n  \"experienceId\" : 0,\r\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"workflowFormName\" : \"workflowFormName\",\r\n  \"status\" : \"status\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProgressTrackerControllerWorkflowFormResponse>>(exampleJson)
            : default(List<ProgressTrackerControllerWorkflowFormResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
