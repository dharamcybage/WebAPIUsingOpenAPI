/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;
using Swashbuckle.AspNetCore.Annotations;

namespace Org.OpenAPITools.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ActivityTypeApiController : ControllerBase
    { 
        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="activityTypes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Activity Type/api/consumer/v1/activitytypes/{activity_types}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteActivityTypeApiConsumerV1ActivitytypesByActivityTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteActivityTypeApiConsumerV1ActivitytypesByActivityTypes([FromRoute (Name = "activity_types")][Required]string activityTypes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="activityTypes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Activity Type/api/consumer/v1/activity-count-by-type/{activity_types}")]
        [ValidateModelState]
        [SwaggerOperation("GetActivityTypeApiConsumerV1ActivityCountByTypeByActivityTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetActivityTypeApiConsumerV1ActivityCountByTypeByActivityTypes([FromRoute (Name = "activity_types")][Required]string activityTypes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Activity Type/api/consumer/v1/activitytypes")]
        [ValidateModelState]
        [SwaggerOperation("GetActivityTypeApiConsumerV1Activitytypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetActivityTypeApiConsumerV1Activitytypes([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Activity Type/api/consumer/v1/district-activitytypes")]
        [ValidateModelState]
        [SwaggerOperation("GetActivityTypeApiConsumerV1DistrictActivitytypes")]
        public virtual IActionResult GetActivityTypeApiConsumerV1DistrictActivitytypes([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="activityTypes"></param>
        /// <param name="createActivityTypeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Activity Type/api/consumer/v1/activitytypes/{activity_types}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchActivityTypeApiConsumerV1ActivitytypesByActivityTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchActivityTypeApiConsumerV1ActivitytypesByActivityTypes([FromRoute (Name = "activity_types")][Required]string activityTypes, [FromBody]CreateActivityTypeRequest createActivityTypeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Activity Type
        /// </summary>
        /// <remarks>Activity Type</remarks>
        /// <param name="createActivityTypeRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Activity Type/api/consumer/v1/activitytypes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostActivityTypeApiConsumerV1Activitytypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostActivityTypeApiConsumerV1Activitytypes([FromBody]CreateActivityTypeRequest createActivityTypeRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
