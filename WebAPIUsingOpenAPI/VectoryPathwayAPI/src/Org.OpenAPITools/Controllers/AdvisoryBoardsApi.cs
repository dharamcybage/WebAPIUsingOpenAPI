/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;
using Swashbuckle.Swagger.Annotations;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AdvisoryBoardsApiController : ControllerBase
    { 
        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoards")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoards([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardMeetingFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/files/{advisory_board_meeting_files}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsFilesByAdvisoryBoardMeetingFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsFilesByAdvisoryBoardMeetingFiles([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromRoute (Name = "advisory_board_meeting_files")][Required]string advisoryBoardMeetingFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardMeetingFormSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/submissions/{advisory_board_meeting_form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissionsByAdvisoryBoardMeetingFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissionsByAdvisoryBoardMeetingFormSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromRoute (Name = "advisory_board_meeting_form_submissions")][Required]string advisoryBoardMeetingFormSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMembers"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/member/{advisory_board_members}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMemberByAdvisoryBoardMembers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMemberByAdvisoryBoardMembers([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_members")][Required]string advisoryBoardMembers, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardFormSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/submissions/{advisory_board_form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissionsByAdvisoryBoardFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissionsByAdvisoryBoardFormSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_form_submissions")][Required]string advisoryBoardFormSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoardFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/file/{advisory_board_files}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsFileByAdvisoryBoardFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteAdvisoryBoardsApiConsumerV1AdvisoryBoardsFileByAdvisoryBoardFiles([FromRoute (Name = "advisory_board_files")][Required]string advisoryBoardFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoards")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdvisoryBoardOverviewResponse>), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoards([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdvisoryBoardOverviewResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfMembers\" : 6,\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"chairPeople\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"boardOwner\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"id\" : 0,\r\n  \"status\" : 1\r\n}, {\r\n  \"numberOfMembers\" : 6,\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"chairPeople\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"boardOwner\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"id\" : 0,\r\n  \"status\" : 1\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdvisoryBoardOverviewResponse>>(exampleJson)
            : default(List<AdvisoryBoardOverviewResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/attendance-report")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsAttendanceReport")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdvisoryBoardAttendanceReportResponse>), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsAttendanceReport([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdvisoryBoardAttendanceReportResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"meetings\" : [ {\r\n    \"date\" : \"date\",\r\n    \"attended\" : true\r\n  }, {\r\n    \"date\" : \"date\",\r\n    \"attended\" : true\r\n  } ],\r\n  \"id\" : 0\r\n}, {\r\n  \"meetings\" : [ {\r\n    \"date\" : \"date\",\r\n    \"attended\" : true\r\n  }, {\r\n    \"date\" : \"date\",\r\n    \"attended\" : true\r\n  } ],\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdvisoryBoardAttendanceReportResponse>>(exampleJson)
            : default(List<AdvisoryBoardAttendanceReportResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/full-data")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsFullData")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvisoryBoardFullDataResponse), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsFullData([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvisoryBoardFullDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"overview\" : {\r\n    \"numberOfMembers\" : 6,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"chairPeople\" : [ {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }, {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    } ],\r\n    \"boardOwner\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 0,\r\n    \"status\" : 1\r\n  },\r\n  \"members\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"coChair\" : true,\r\n    \"pathways\" : [ null, null ],\r\n    \"type\" : 4,\r\n    \"firstName\" : \"firstName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization\" : \"organization\",\r\n    \"id\" : 7,\r\n    \"memberType\" : 1,\r\n    \"email\" : \"email\",\r\n    \"memberRole\" : 1,\r\n    \"status\" : 1\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"coChair\" : true,\r\n    \"pathways\" : [ null, null ],\r\n    \"type\" : 4,\r\n    \"firstName\" : \"firstName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization\" : \"organization\",\r\n    \"id\" : 7,\r\n    \"memberType\" : 1,\r\n    \"email\" : \"email\",\r\n    \"memberRole\" : 1,\r\n    \"status\" : 1\r\n  } ],\r\n  \"files\" : [ {\r\n    \"advisory_board_id\" : 9,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 2,\r\n    \"meeting\" : \"meeting\",\r\n    \"fileType\" : 3,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"advisory_board_id\" : 9,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 2,\r\n    \"meeting\" : \"meeting\",\r\n    \"fileType\" : 3,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"meetings\" : [ {\r\n    \"zip\" : \"zip\",\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"address\" : \"address\",\r\n    \"locationName\" : \"locationName\",\r\n    \"city\" : \"city\",\r\n    \"meetingType\" : 7,\r\n    \"duration\" : 5,\r\n    \"advisory_board_id\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"locationDetails\" : \"locationDetails\",\r\n    \"id\" : 5,\r\n    \"state\" : \"state\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"zip\" : \"zip\",\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"address\" : \"address\",\r\n    \"locationName\" : \"locationName\",\r\n    \"city\" : \"city\",\r\n    \"meetingType\" : 7,\r\n    \"duration\" : 5,\r\n    \"advisory_board_id\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"locationDetails\" : \"locationDetails\",\r\n    \"id\" : 5,\r\n    \"state\" : \"state\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvisoryBoardFullDataResponse>(exampleJson)
            : default(AdvisoryBoardFullDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvisoryBoardMeetingDataResponse), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvisoryBoardMeetingDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"members\" : [ {\r\n    \"member_id\" : 0,\r\n    \"attended\" : true,\r\n    \"inviteStatus\" : 6,\r\n    \"memberName\" : \"memberName\",\r\n    \"invite\" : true,\r\n    \"id\" : 1\r\n  }, {\r\n    \"member_id\" : 0,\r\n    \"attended\" : true,\r\n    \"inviteStatus\" : 6,\r\n    \"memberName\" : \"memberName\",\r\n    \"invite\" : true,\r\n    \"id\" : 1\r\n  } ],\r\n  \"messages\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"message\" : \"message\",\r\n    \"user\" : \"user\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"message\" : \"message\",\r\n    \"user\" : \"user\"\r\n  } ],\r\n  \"files\" : [ null, null ],\r\n  \"meeting\" : {\r\n    \"zip\" : \"zip\",\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"address\" : \"address\",\r\n    \"locationName\" : \"locationName\",\r\n    \"city\" : \"city\",\r\n    \"meetingType\" : 7,\r\n    \"duration\" : 5,\r\n    \"advisory_board_id\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"locationDetails\" : \"locationDetails\",\r\n    \"id\" : 5,\r\n    \"state\" : \"state\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvisoryBoardMeetingDataResponse>(exampleJson)
            : default(AdvisoryBoardMeetingDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/sign-in")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSignIn")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSignIn([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/submissions")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvisoryBoardMeetingFormSubmissionsResponse), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvisoryBoardMeetingFormSubmissionsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"submissions\" : [ {\r\n    \"formSubmission\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_id\" : 2,\r\n      \"external_form_submitter_id\" : 3,\r\n      \"form_id\" : 5,\r\n      \"id\" : 2,\r\n      \"entity_id\" : 7,\r\n      \"entity\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 0\r\n  }, {\r\n    \"formSubmission\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_id\" : 2,\r\n      \"external_form_submitter_id\" : 3,\r\n      \"form_id\" : 5,\r\n      \"id\" : 2,\r\n      \"entity_id\" : 7,\r\n      \"entity\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 0\r\n  } ],\r\n  \"meeting\" : {\r\n    \"zip\" : \"zip\",\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"address\" : \"address\",\r\n    \"locationName\" : \"locationName\",\r\n    \"city\" : \"city\",\r\n    \"meetingType\" : 7,\r\n    \"duration\" : 5,\r\n    \"advisory_board_id\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"locationDetails\" : \"locationDetails\",\r\n    \"id\" : 5,\r\n    \"state\" : \"state\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"board\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvisoryBoardMeetingFormSubmissionsResponse>(exampleJson)
            : default(AdvisoryBoardMeetingFormSubmissionsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/permissions")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsPermissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExtensioninRunUserAdvisoryBoardPermissions), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsPermissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExtensioninRunUserAdvisoryBoardPermissions));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"canView\" : true,\r\n  \"canEdit\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExtensioninRunUserAdvisoryBoardPermissions>(exampleJson)
            : default(ExtensioninRunUserAdvisoryBoardPermissions);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/submissions")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvisoryBoardFormSubmissionsResponse), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvisoryBoardFormSubmissionsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"submissions\" : [ {\r\n    \"formSubmission\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_id\" : 2,\r\n      \"external_form_submitter_id\" : 3,\r\n      \"form_id\" : 5,\r\n      \"id\" : 2,\r\n      \"entity_id\" : 7,\r\n      \"entity\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 4\r\n  }, {\r\n    \"formSubmission\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_id\" : 2,\r\n      \"external_form_submitter_id\" : 3,\r\n      \"form_id\" : 5,\r\n      \"id\" : 2,\r\n      \"entity_id\" : 7,\r\n      \"entity\" : 9,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 4\r\n  } ],\r\n  \"board\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvisoryBoardFormSubmissionsResponse>(exampleJson)
            : default(AdvisoryBoardFormSubmissionsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardFormSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/submissions/{advisory_board_form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissionsByAdvisoryBoardFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(FormSubmissionResponse), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissionsByAdvisoryBoardFormSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_form_submissions")][Required]string advisoryBoardFormSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FormSubmissionResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"approvals\" : [ {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  }, {\r\n    \"parent\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"approved\" : true,\r\n      \"phone\" : \"phone\",\r\n      \"student_id\" : 5,\r\n      \"id\" : 5,\r\n      \"email\" : \"email\",\r\n      \"token\" : \"token\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"signatureImageUrl\" : \"signatureImageUrl\"\r\n  } ],\r\n  \"associatedUsers\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0\r\n  } ],\r\n  \"id\" : 1,\r\n  \"fields\" : [ {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  }, {\r\n    \"attachedValue\" : {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    },\r\n    \"values\" : [ {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"id\" : 7,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"name\" : \"name\",\r\n    \"formSubmissionFieldId\" : 9,\r\n    \"id\" : 2,\r\n    \"type\" : 3,\r\n    \"value\" : \"value\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FormSubmissionResponse>(exampleJson)
            : default(FormSubmissionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoardFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/file/{advisory_board_files}/signed")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsFileByAdvisoryBoardFilesSigned")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsFileByAdvisoryBoardFilesSigned([FromRoute (Name = "advisory_board_files")][Required]string advisoryBoardFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoardMeetingFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/meeting-file/{advisory_board_meeting_files}/signed")]
        [ValidateModelState]
        [SwaggerOperation("GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsMeetingFileByAdvisoryBoardMeetingFilesSigned")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetAdvisoryBoardsApiConsumerV1AdvisoryBoardsMeetingFileByAdvisoryBoardMeetingFilesSigned([FromRoute (Name = "advisory_board_meeting_files")][Required]string advisoryBoardMeetingFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="editAdvisoryBoardRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoards")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoards([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]EditAdvisoryBoardRequest editAdvisoryBoardRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/inactive")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsInactive")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsInactive([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="createAdvisoryBoardMeetingRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetings([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]CreateAdvisoryBoardMeetingRequest createAdvisoryBoardMeetingRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/toggle-all-attendance")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleAllAttendance")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleAllAttendance([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/toggle-all-invites")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleAllInvites")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleAllInvites([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardMembers"></param>
        /// <param name="type"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/toggle/{advisory_board_members}/{type}")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleByAdvisoryBoardMembersByType")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsToggleByAdvisoryBoardMembersByType([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromRoute (Name = "advisory_board_members")][Required]string advisoryBoardMembers, [FromRoute (Name = "type")][Required]string type, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMembers"></param>
        /// <param name="updateAdvisoryBoardMemberRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/member/{advisory_board_members}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMemberByAdvisoryBoardMembers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMemberByAdvisoryBoardMembers([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_members")][Required]string advisoryBoardMembers, [FromBody]UpdateAdvisoryBoardMemberRequest updateAdvisoryBoardMemberRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="token"></param>
        /// <param name="type"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Advisory Boards/api/consumer/v1/external-advisory-board-meeting-verification/{token}/{type}")]
        [ValidateModelState]
        [SwaggerOperation("PatchAdvisoryBoardsApiConsumerV1ExternalAdvisoryBoardMeetingVerificationByTokenByType")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchAdvisoryBoardsApiConsumerV1ExternalAdvisoryBoardMeetingVerificationByTokenByType([FromRoute (Name = "token")][Required]string token, [FromRoute (Name = "type")][Required]string type, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="createAdvisoryBoardRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoards")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoards([FromBody]CreateAdvisoryBoardRequest createAdvisoryBoardRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="addAdvisoryBoardFileRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/files")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsFiles([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]AddAdvisoryBoardFileRequest addAdvisoryBoardFileRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="createAdvisoryBoardMeetingRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetings")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetings([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]CreateAdvisoryBoardMeetingRequest createAdvisoryBoardMeetingRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardMessageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/email")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsEmail")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsEmail([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]AdvisoryBoardMessageRequest advisoryBoardMessageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardMessageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/email-client")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsEmailClient")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsEmailClient([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]AdvisoryBoardMessageRequest advisoryBoardMessageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="addAdvisoryBoardFileRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/files")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsFiles([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]AddAdvisoryBoardFileRequest addAdvisoryBoardFileRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="advisoryBoardEmailRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/invites")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsInvites")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsInvites([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]AdvisoryBoardEmailRequest advisoryBoardEmailRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMeetings"></param>
        /// <param name="addAdvisoryBoardMeetingFormSubmissionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/meetings/{advisory_board_meetings}/submissions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMeetingsByAdvisoryBoardMeetingsSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromRoute (Name = "advisory_board_meetings")][Required]string advisoryBoardMeetings, [FromBody]AddAdvisoryBoardMeetingFormSubmissionRequest addAdvisoryBoardMeetingFormSubmissionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="addAdvisoryBoardMemberRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/member")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMember")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsMember([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]AddAdvisoryBoardMemberRequest addAdvisoryBoardMemberRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="addAdvisoryBoardFormSubmissionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/{advisory_boards}/submissions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsByAdvisoryBoardsSubmissions([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]AddAdvisoryBoardFormSubmissionRequest addAdvisoryBoardFormSubmissionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Advisory Boards
        /// </summary>
        /// <remarks>Advisory Boards</remarks>
        /// <param name="advisoryBoards"></param>
        /// <param name="advisoryBoardMessageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Advisory Boards/api/consumer/v1/advisory-boards/email/{advisory_boards}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsEmailByAdvisoryBoards")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostAdvisoryBoardsApiConsumerV1AdvisoryBoardsEmailByAdvisoryBoards([FromRoute (Name = "advisory_boards")][Required]string advisoryBoards, [FromBody]AdvisoryBoardMessageRequest advisoryBoardMessageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
