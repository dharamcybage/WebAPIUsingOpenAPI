/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
 using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class OrganizationApiController : ControllerBase
    { 
        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="locations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Organization/api/consumer/v1/locations/{locations}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteOrganizationApiConsumerV1LocationsByLocations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteOrganizationApiConsumerV1LocationsByLocations([FromRoute (Name = "locations")][Required]string locations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizationNotes"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Organization/api/consumer/v1/organization-notes/{organization_notes}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteOrganizationApiConsumerV1OrganizationNotesByOrganizationNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteOrganizationApiConsumerV1OrganizationNotesByOrganizationNotes([FromRoute (Name = "organization_notes")][Required]string organizationNotes, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Organization
        /// </summary>
        /// <remarks>Edit Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteOrganizationApiConsumerV1OrganizationsByOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteOrganizationApiConsumerV1OrganizationsByOrganizations([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1Organizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OrganizationDTO>), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1Organizations([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OrganizationDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"website\" : \"website\",\r\n  \"form_submission_id\" : 2,\r\n  \"phone\" : \"phone\",\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 7,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"website\" : \"website\",\r\n  \"form_submission_id\" : 2,\r\n  \"phone\" : \"phone\",\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 7,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<OrganizationDTO>>(exampleJson)
            : default(List<OrganizationDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations/admin-table")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1OrganizationsAdminTable")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminTableResponseAdminTableOrganization), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1OrganizationsAdminTable([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminTableResponseAdminTableOrganization));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"objects\" : [ {\r\n    \"submission\" : {\r\n      \"id\" : 0,\r\n      \"fields\" : [ {\r\n        \"formFieldId\" : 6,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 1,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"formFieldId\" : 6,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 1,\r\n        \"value\" : \"value\"\r\n      } ]\r\n    },\r\n    \"object\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"website\" : \"website\",\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 5\r\n    }\r\n  }, {\r\n    \"submission\" : {\r\n      \"id\" : 0,\r\n      \"fields\" : [ {\r\n        \"formFieldId\" : 6,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 1,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"formFieldId\" : 6,\r\n        \"attachedValue\" : \"attachedValue\",\r\n        \"values\" : [ \"values\", \"values\" ],\r\n        \"type\" : 1,\r\n        \"value\" : \"value\"\r\n      } ]\r\n    },\r\n    \"object\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"website\" : \"website\",\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 5\r\n    }\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminTableResponseAdminTableOrganization>(exampleJson)
            : default(AdminTableResponseAdminTableOrganization);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1OrganizationsByOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(FullOrganizationData), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1OrganizationsByOrganizations([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FullOrganizationData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdByName\" : \"createdByName\",\r\n  \"website\" : \"website\",\r\n  \"notes\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"externalCreatedByEmail\" : \"externalCreatedByEmail\",\r\n  \"createdByDistrict\" : \"createdByDistrict\",\r\n  \"experiences\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"organization_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1,\r\n    \"created_by\" : 5\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"organization_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1,\r\n    \"created_by\" : 5\r\n  } ],\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"activities\" : [ {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  }, {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  } ],\r\n  \"externalCreatedByName\" : \"externalCreatedByName\",\r\n  \"name\" : \"name\",\r\n  \"locations\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 0,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"contacts\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FullOrganizationData>(exampleJson)
            : default(FullOrganizationData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}/contacts")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1OrganizationsByOrganizationsContacts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ContactDTO>), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1OrganizationsByOrganizationsContacts([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ContactDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"organizationName\" : \"organizationName\",\r\n  \"form_submission_id\" : 6,\r\n  \"title\" : \"title\",\r\n  \"created_by\" : 6,\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"firstName\" : \"firstName\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"organization_id\" : 3,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"organizationName\" : \"organizationName\",\r\n  \"form_submission_id\" : 6,\r\n  \"title\" : \"title\",\r\n  \"created_by\" : 6,\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"firstName\" : \"firstName\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"organization_id\" : 3,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ContactDTO>>(exampleJson)
            : default(List<ContactDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}/external-sub-link")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1OrganizationsByOrganizationsExternalSubLink")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1OrganizationsByOrganizationsExternalSubLink([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}/locations")]
        [ValidateModelState]
        [SwaggerOperation("GetOrganizationApiConsumerV1OrganizationsByOrganizationsLocations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<LocationDTO>), description: "OK")]
        public virtual IActionResult GetOrganizationApiConsumerV1OrganizationsByOrganizationsLocations([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<LocationDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"address\" : \"address\",\r\n  \"organization_id\" : 1,\r\n  \"latitude\" : \"latitude\",\r\n  \"nickname\" : \"nickname\",\r\n  \"id\" : 6,\r\n  \"longitude\" : \"longitude\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"address\" : \"address\",\r\n  \"organization_id\" : 1,\r\n  \"latitude\" : \"latitude\",\r\n  \"nickname\" : \"nickname\",\r\n  \"id\" : 6,\r\n  \"longitude\" : \"longitude\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<LocationDTO>>(exampleJson)
            : default(List<LocationDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="locations"></param>
        /// <param name="updateLocationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Organization/api/consumer/v1/locations/{locations}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchOrganizationApiConsumerV1LocationsByLocations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchOrganizationApiConsumerV1LocationsByLocations([FromRoute (Name = "locations")][Required]string locations, [FromBody]UpdateLocationRequest updateLocationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Organization
        /// </summary>
        /// <remarks>Edit Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="updateOrganizationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchOrganizationApiConsumerV1OrganizationsByOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchOrganizationApiConsumerV1OrganizationsByOrganizations([FromRoute (Name = "organizations")][Required]string organizations, [FromBody]UpdateOrganizationRequest updateOrganizationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Organization
        /// </summary>
        /// <remarks>Edit Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="updateEntityImageRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}/image")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchOrganizationApiConsumerV1OrganizationsByOrganizationsImage")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchOrganizationApiConsumerV1OrganizationsByOrganizationsImage([FromRoute (Name = "organizations")][Required]string organizations, [FromBody]UpdateEntityImageRequest updateEntityImageRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Organization
        /// </summary>
        /// <remarks>Create Organization</remarks>
        /// <param name="createOrganizationRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Organization/api/consumer/v1/organizations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostOrganizationApiConsumerV1Organizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(OrganizationDTO), description: "OK")]
        public virtual IActionResult PostOrganizationApiConsumerV1Organizations([FromBody]CreateOrganizationRequest createOrganizationRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OrganizationDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"website\" : \"website\",\r\n  \"form_submission_id\" : 2,\r\n  \"phone\" : \"phone\",\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 7,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OrganizationDTO>(exampleJson)
            : default(OrganizationDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Organization
        /// </summary>
        /// <remarks>Organization</remarks>
        /// <param name="organizations"></param>
        /// <param name="addLocationToOrgRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Organization/api/consumer/v1/organizations/{organizations}/locations")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostOrganizationApiConsumerV1OrganizationsByOrganizationsLocations")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostOrganizationApiConsumerV1OrganizationsByOrganizationsLocations([FromRoute (Name = "organizations")][Required]string organizations, [FromBody]AddLocationToOrgRequest addLocationToOrgRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
