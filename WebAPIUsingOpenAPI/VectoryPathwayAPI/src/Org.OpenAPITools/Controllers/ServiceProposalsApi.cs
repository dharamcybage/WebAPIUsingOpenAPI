/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Swashbuckle.Swagger.Annotations; using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ServiceProposalsApiController : ControllerBase
    { 
        /// <summary>
        /// CreateServiceProposalConsumer
        /// </summary>
        /// <remarks>CreateServiceProposalConsumer</remarks>
        /// <param name="serviceProposals"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/{service_proposals}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteServiceProposalsApiConsumerV1ServiceProposalsByServiceProposals")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteServiceProposalsApiConsumerV1ServiceProposalsByServiceProposals([FromRoute (Name = "service_proposals")][Required]string serviceProposals, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Proposals
        /// </summary>
        /// <remarks>Edit Service Proposals</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/admin/{users}/data")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsAdminByUsersData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullServiceProposal>), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsAdminByUsersData([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullServiceProposal>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullServiceProposal>>(exampleJson)
            : default(List<FullServiceProposal>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Proposals
        /// </summary>
        /// <remarks>Edit Service Proposals</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/admin/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsAdminPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullServiceProposal>), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsAdminPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullServiceProposal>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullServiceProposal>>(exampleJson)
            : default(List<FullServiceProposal>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Proposals Varification
        /// </summary>
        /// <remarks>Service Proposals Varification</remarks>
        /// <param name="token"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/external/search/{token}")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsExternalSearchByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsExternalSearchByToken([FromRoute (Name = "token")][Required]string token, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CreateServiceProposalConsumer
        /// </summary>
        /// <remarks>CreateServiceProposalConsumer</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/student/approved")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsStudentApproved")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullServiceProposal>), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsStudentApproved([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullServiceProposal>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullServiceProposal>>(exampleJson)
            : default(List<FullServiceProposal>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CreateServiceProposalConsumer
        /// </summary>
        /// <remarks>CreateServiceProposalConsumer</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/student/pending")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsStudentPending")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsStudentPending([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CreateServiceProposalConsumer
        /// </summary>
        /// <remarks>CreateServiceProposalConsumer</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/student/rejected")]
        [ValidateModelState]
        [SwaggerOperation("GetServiceProposalsApiConsumerV1ServiceProposalsStudentRejected")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<FullServiceProposal>), description: "OK")]
        public virtual IActionResult GetServiceProposalsApiConsumerV1ServiceProposalsStudentRejected([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<FullServiceProposal>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"serviceType\" : 0,\r\n  \"parentsApproved\" : true,\r\n  \"agencyEmail\" : \"agencyEmail\",\r\n  \"parentsSignature\" : \"parentsSignature\",\r\n  \"comments\" : \"comments\",\r\n  \"approvedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"description\" : \"description\",\r\n  \"agencyName\" : \"agencyName\",\r\n  \"agencyPhoneNumber\" : \"agencyPhoneNumber\",\r\n  \"tags\" : [ null, null ],\r\n  \"rejected_by\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"parentsRejected\" : true,\r\n  \"agencyRepresentative\" : \"agencyRepresentative\",\r\n  \"approved_by\" : 5,\r\n  \"rejectedBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"user_id\" : 3,\r\n  \"parent_id\" : 6,\r\n  \"id\" : 1,\r\n  \"user\" : {\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 7,\r\n    \"grade\" : 2,\r\n    \"id\" : 9,\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<FullServiceProposal>>(exampleJson)
            : default(List<FullServiceProposal>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Edit Service Proposals
        /// </summary>
        /// <remarks>Edit Service Proposals</remarks>
        /// <param name="serviceProposals"></param>
        /// <param name="action"></param>
        /// <param name="editServiceProposalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/{service_proposals}/status/{action}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchServiceProposalsApiConsumerV1ServiceProposalsByServiceProposalsStatusByAction")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchServiceProposalsApiConsumerV1ServiceProposalsByServiceProposalsStatusByAction([FromRoute (Name = "service_proposals")][Required]string serviceProposals, [FromRoute (Name = "action")][Required]string action, [FromBody]EditServiceProposalRequest editServiceProposalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// CreateServiceProposalConsumer
        /// </summary>
        /// <remarks>CreateServiceProposalConsumer</remarks>
        /// <param name="createServiceProposalRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceProposalsApiConsumerV1ServiceProposalsCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceProposalsApiConsumerV1ServiceProposalsCreate([FromBody]CreateServiceProposalRequest createServiceProposalRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Proposals Varification
        /// </summary>
        /// <remarks>Service Proposals Varification</remarks>
        /// <param name="token"></param>
        /// <param name="approveRejectExternalActivityRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/external/approve/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceProposalsApiConsumerV1ServiceProposalsExternalApproveByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceProposalsApiConsumerV1ServiceProposalsExternalApproveByToken([FromRoute (Name = "token")][Required]string token, [FromBody]ApproveRejectExternalActivityRequest approveRejectExternalActivityRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Service Proposals Varification
        /// </summary>
        /// <remarks>Service Proposals Varification</remarks>
        /// <param name="token"></param>
        /// <param name="approveRejectExternalActivityRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Service Proposals/api/consumer/v1/service-proposals/external/reject/{token}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostServiceProposalsApiConsumerV1ServiceProposalsExternalRejectByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostServiceProposalsApiConsumerV1ServiceProposalsExternalRejectByToken([FromRoute (Name = "token")][Required]string token, [FromBody]ApproveRejectExternalActivityRequest approveRejectExternalActivityRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
