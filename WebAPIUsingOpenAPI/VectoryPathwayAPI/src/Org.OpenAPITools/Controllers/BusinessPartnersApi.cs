/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BusinessPartnersApiController : ControllerBase
    { 
        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="contacts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Business Partners/api/consumer/v1/business-partners/contacts/{contacts}/revoke")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessPartnersApiConsumerV1BusinessPartnersContactsByContactsRevoke")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteBusinessPartnersApiConsumerV1BusinessPartnersContactsByContactsRevoke([FromRoute (Name = "contacts")][Required]string contacts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="businessPartnerPortalInvites"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites/{business_partner_portal_invites}/revoke")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessPartnersApiConsumerV1BusinessPartnersInvitesByBusinessPartnerPortalInvitesRevoke")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteBusinessPartnersApiConsumerV1BusinessPartnersInvitesByBusinessPartnerPortalInvitesRevoke([FromRoute (Name = "business_partner_portal_invites")][Required]string businessPartnerPortalInvites, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="noteId"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Business Partners/api/consumer/v1/business-partners/students/notes/{noteId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessPartnersApiConsumerV1BusinessPartnersStudentsNotesByNoteId")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteBusinessPartnersApiConsumerV1BusinessPartnersStudentsNotesByNoteId([FromRoute (Name = "noteId")][Required]string noteId, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Business Partners/api/consumer/v1/business-partners/users/{users}/revoke")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessPartnersApiConsumerV1BusinessPartnersUsersByUsersRevoke")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteBusinessPartnersApiConsumerV1BusinessPartnersUsersByUsersRevoke([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/activities")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AdminPendingActivityData>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersActivities([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AdminPendingActivityData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"userActivityId\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"organizationIds\" : [ 0, 0 ],\r\n  \"form_submission_id\" : 1,\r\n  \"name\" : \"name\",\r\n  \"form_id\" : 2,\r\n  \"description\" : \"description\",\r\n  \"id\" : 6,\r\n  \"userActivity\" : {\r\n    \"emailToken\" : \"emailToken\",\r\n    \"notes\" : \"notes\",\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"user_id\" : 5,\r\n    \"activity_id\" : 0,\r\n    \"sponsorRejected\" : true,\r\n    \"externalApprovalData\" : {\r\n      \"businessPartnerId\" : 1,\r\n      \"role\" : \"role\",\r\n      \"organization\" : \"organization\",\r\n      \"name\" : \"name\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"sponsorApproved\" : true,\r\n    \"sponsorNotes\" : \"sponsorNotes\",\r\n    \"id\" : 1,\r\n    \"sponsor_form_submission_id\" : 6,\r\n    \"hasCheckedIn\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"folder_id\" : 7,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"contactIds\" : [ 5, 5 ]\r\n}, {\r\n  \"userActivityId\" : 5,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"organizationIds\" : [ 0, 0 ],\r\n  \"form_submission_id\" : 1,\r\n  \"name\" : \"name\",\r\n  \"form_id\" : 2,\r\n  \"description\" : \"description\",\r\n  \"id\" : 6,\r\n  \"userActivity\" : {\r\n    \"emailToken\" : \"emailToken\",\r\n    \"notes\" : \"notes\",\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"user_id\" : 5,\r\n    \"activity_id\" : 0,\r\n    \"sponsorRejected\" : true,\r\n    \"externalApprovalData\" : {\r\n      \"businessPartnerId\" : 1,\r\n      \"role\" : \"role\",\r\n      \"organization\" : \"organization\",\r\n      \"name\" : \"name\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"sponsorApproved\" : true,\r\n    \"sponsorNotes\" : \"sponsorNotes\",\r\n    \"id\" : 1,\r\n    \"sponsor_form_submission_id\" : 6,\r\n    \"hasCheckedIn\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"folder_id\" : 7,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"contactIds\" : [ 5, 5 ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AdminPendingActivityData>>(exampleJson)
            : default(List<AdminPendingActivityData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="activities"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/activities/{activities}")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersActivitiesByActivities")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalActivityDataResponse), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersActivitiesByActivities([FromRoute (Name = "activities")][Required]string activities, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExternalActivityDataResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"formSubmission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"parentSignatures\" : [ \"parentSignatures\", \"parentSignatures\" ],\r\n  \"user_activity_id\" : 6,\r\n  \"description\" : \"description\",\r\n  \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n  \"externalForm\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"form\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"name\" : \"name\",\r\n  \"activity_id\" : 0,\r\n  \"sponsorRejected\" : true,\r\n  \"externalApprovalData\" : {\r\n    \"businessPartnerId\" : 1,\r\n    \"role\" : \"role\",\r\n    \"organization\" : \"organization\",\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"sponsorNotes\" : \"sponsorNotes\",\r\n  \"sponsorApproved\" : true,\r\n  \"locked\" : true,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExternalActivityDataResponse>(exampleJson)
            : default(ExternalActivityDataResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="contacts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/contact/{contacts}")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersContactByContacts")]
        [SwaggerResponse(statusCode: 200, type: typeof(FullContactData), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersContactByContacts([FromRoute (Name = "contacts")][Required]string contacts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FullContactData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdByName\" : \"createdByName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"notes\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 3,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 3,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"students\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"title\" : \"title\",\r\n  \"emails\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"subject\" : \"subject\",\r\n    \"from\" : \"from\",\r\n    \"id\" : 9,\r\n    \"to\" : \"to\",\r\n    \"contact_id\" : 7,\r\n    \"message\" : \"message\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"subject\" : \"subject\",\r\n    \"from\" : \"from\",\r\n    \"id\" : 9,\r\n    \"to\" : \"to\",\r\n    \"contact_id\" : 7,\r\n    \"message\" : \"message\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"externalCreatedByName\" : \"externalCreatedByName\",\r\n  \"backgroundChecks\" : [ {\r\n    \"externalReferenceId\" : \"externalReferenceId\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"externalConsentUrl\" : \"externalConsentUrl\",\r\n    \"id\" : 5,\r\n    \"convictions\" : \"convictions\",\r\n    \"contact_id\" : 6,\r\n    \"type\" : 1,\r\n    \"externalWorkerReference\" : \"externalWorkerReference\",\r\n    \"status\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"runBy\" : 5\r\n  }, {\r\n    \"externalReferenceId\" : \"externalReferenceId\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"externalConsentUrl\" : \"externalConsentUrl\",\r\n    \"id\" : 5,\r\n    \"convictions\" : \"convictions\",\r\n    \"contact_id\" : 6,\r\n    \"type\" : 1,\r\n    \"externalWorkerReference\" : \"externalWorkerReference\",\r\n    \"status\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"runBy\" : 5\r\n  } ],\r\n  \"id\" : 2,\r\n  \"incomingEmail\" : \"incomingEmail\",\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"externalCreatedByEmail\" : \"externalCreatedByEmail\",\r\n  \"createdByDistrict\" : \"createdByDistrict\",\r\n  \"experiences\" : [ {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"firstName\" : \"firstName\",\r\n  \"createdBy\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"phone\" : \"phone\",\r\n  \"advisoryBoards\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FullContactData>(exampleJson)
            : default(FullContactData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/contacts")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersContacts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OrganizationContactData>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersContacts([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OrganizationContactData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"phone\" : \"phone\",\r\n  \"organization\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"profileImageUrl\" : \"profileImageUrl\"\r\n  },\r\n  \"id\" : 6,\r\n  \"title\" : \"title\",\r\n  \"email\" : \"email\"\r\n}, {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"phone\" : \"phone\",\r\n  \"organization\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"profileImageUrl\" : \"profileImageUrl\"\r\n  },\r\n  \"id\" : 6,\r\n  \"title\" : \"title\",\r\n  \"email\" : \"email\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<OrganizationContactData>>(exampleJson)
            : default(List<OrganizationContactData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceData>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersExperiences([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceData>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"numberOfSpotsTaken\" : 6,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"form_id\" : 1,\r\n  \"students\" : \"students\",\r\n  \"description\" : \"description\",\r\n  \"numberOfSpots\" : 0,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"applicantCount\" : 5,\r\n  \"isTemplate\" : true,\r\n  \"isSaved\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"isFull\" : true,\r\n  \"id\" : 5,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceData>>(exampleJson)
            : default(List<ExperienceData>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/applications")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesApplications")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ExperienceApplications>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesApplications([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ExperienceApplications>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"experience\" : {\r\n    \"formId\" : 5,\r\n    \"contact\" : {\r\n      \"lastName\" : \"lastName\",\r\n      \"organizationName\" : \"organizationName\",\r\n      \"form_submission_id\" : 6,\r\n      \"title\" : \"title\",\r\n      \"created_by\" : 6,\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"firstName\" : \"firstName\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 3,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1\r\n  },\r\n  \"applications\" : [ {\r\n    \"application\" : \"application\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"status\" : \"status\"\r\n  }, {\r\n    \"application\" : \"application\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"status\" : \"status\"\r\n  } ]\r\n}, {\r\n  \"experience\" : {\r\n    \"formId\" : 5,\r\n    \"contact\" : {\r\n      \"lastName\" : \"lastName\",\r\n      \"organizationName\" : \"organizationName\",\r\n      \"form_submission_id\" : 6,\r\n      \"title\" : \"title\",\r\n      \"created_by\" : 6,\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"firstName\" : \"firstName\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 3,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1\r\n  },\r\n  \"applications\" : [ {\r\n    \"application\" : \"application\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"status\" : \"status\"\r\n  }, {\r\n    \"application\" : \"application\",\r\n    \"formSubmissionId\" : 6,\r\n    \"id\" : 0,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"status\" : \"status\"\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ExperienceApplications>>(exampleJson)
            : default(List<ExperienceApplications>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdminExperienceData), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdminExperienceData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"completedStudents\" : [ {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"availableDistrictIds\" : [ 6, 6 ],\r\n  \"createdByName\" : \"createdByName\",\r\n  \"canGeoLog\" : true,\r\n  \"reflection_form_approval\" : 9,\r\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"description\" : \"description\",\r\n  \"students\" : [ {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"additionalData\" : {\r\n      \"completedEvaluationCount\" : 2,\r\n      \"pendingWorkflowsCount\" : 4,\r\n      \"completedWorkflowsCount\" : 7,\r\n      \"siteVisitCount\" : 6,\r\n      \"wblHours\" : 1.4894159098541704,\r\n      \"totalWorkflowsCount\" : 1,\r\n      \"totalEvaluationCount\" : 1\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"archived\" : true,\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"availableSchoolIds\" : [ 7, 7 ],\r\n  \"accommodationsAvailable\" : true,\r\n  \"externalCreatedByName\" : \"externalCreatedByName\",\r\n  \"showsOnExternalJobBoard\" : true,\r\n  \"contact\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 5,\r\n    \"id\" : 5,\r\n    \"title\" : \"title\",\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"hideFromSearch\" : true,\r\n  \"id\" : 1,\r\n  \"hasPayPeriods\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"careerClusters\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 6,\r\n    \"shortName\" : \"shortName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 6,\r\n    \"shortName\" : \"shortName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"approvedHours\" : 1.4658129805029452,\r\n  \"application_form_id\" : 2,\r\n  \"externalCreatedByEmail\" : \"externalCreatedByEmail\",\r\n  \"allowsTotalTimelogHoursSubmission\" : true,\r\n  \"createdByDistrict\" : \"createdByDistrict\",\r\n  \"numberOfStudents\" : 0,\r\n  \"specificSkills\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"numberOfSpots\" : 5,\r\n  \"maxNumberOfHours\" : 7.457744773683766,\r\n  \"licenses\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"reflection_form_id\" : 3,\r\n  \"isTemplate\" : true,\r\n  \"organization\" : {\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"website\" : \"website\",\r\n    \"form_submission_id\" : 2,\r\n    \"phone\" : \"phone\",\r\n    \"locationDescription\" : \"locationDescription\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 7,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"name\" : \"name\",\r\n  \"experienceText\" : \"experienceText\",\r\n  \"learning_target_id\" : 5,\r\n  \"location\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"generalSkills\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"id\" : 0,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"experience_template_id\" : 5,\r\n  \"folder_id\" : 4,\r\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"allowStudentsToAddPayPeriods\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdminExperienceData>(exampleJson)
            : default(AdminExperienceData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/meta")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesMeta")]
        [SwaggerResponse(statusCode: 200, type: typeof(BusinessPartnerEntityControllerExperiencesMetaResponse), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersExperiencesMeta([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BusinessPartnerEntityControllerExperiencesMetaResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"organizationId\" : 6,\r\n  \"dashboardText\" : \"dashboardText\",\r\n  \"externalLink\" : \"externalLink\",\r\n  \"forms\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"redirectsToExternal\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BusinessPartnerEntityControllerExperiencesMetaResponse>(exampleJson)
            : default(BusinessPartnerEntityControllerExperiencesMetaResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersInvites")]
        [SwaggerResponse(statusCode: 200, type: typeof(BusinessPartnerInvitesResponse), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersInvites([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BusinessPartnerInvitesResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"invites\" : [ {\r\n    \"inviteId\" : 0,\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\",\r\n    \"status\" : \"status\"\r\n  }, {\r\n    \"inviteId\" : 0,\r\n    \"name\" : \"name\",\r\n    \"email\" : \"email\",\r\n    \"status\" : \"status\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BusinessPartnerInvitesResponse>(exampleJson)
            : default(BusinessPartnerInvitesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="businessPartnerPortalInvites"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites/{business_partner_portal_invites}/resend")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersInvitesByBusinessPartnerPortalInvitesResend")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersInvitesByBusinessPartnerPortalInvitesResend([FromRoute (Name = "business_partner_portal_invites")][Required]string businessPartnerPortalInvites, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="contacts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites-contact/{contacts}/resend")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersInvitesContactByContactsResend")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersInvitesContactByContactsResend([FromRoute (Name = "contacts")][Required]string contacts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/organization/{organizations}")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizationByOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(FullOrganizationData), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizationByOrganizations([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FullOrganizationData));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdByName\" : \"createdByName\",\r\n  \"website\" : \"website\",\r\n  \"notes\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 5,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"customFields\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"externalCreatedByEmail\" : \"externalCreatedByEmail\",\r\n  \"createdByDistrict\" : \"createdByDistrict\",\r\n  \"experiences\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"organization_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1,\r\n    \"created_by\" : 5\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"organization_id\" : 6,\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"id\" : 1,\r\n    \"created_by\" : 5\r\n  } ],\r\n  \"tags\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 1,\r\n    \"sendsParentEmail\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"phone\" : \"phone\",\r\n  \"activities\" : [ {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  }, {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  } ],\r\n  \"externalCreatedByName\" : \"externalCreatedByName\",\r\n  \"name\" : \"name\",\r\n  \"locations\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"address\" : \"address\",\r\n    \"organization_id\" : 1,\r\n    \"latitude\" : \"latitude\",\r\n    \"nickname\" : \"nickname\",\r\n    \"id\" : 6,\r\n    \"longitude\" : \"longitude\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"id\" : 0,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"contacts\" : [ {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"lastName\" : \"lastName\",\r\n    \"organizationName\" : \"organizationName\",\r\n    \"form_submission_id\" : 6,\r\n    \"title\" : \"title\",\r\n    \"created_by\" : 6,\r\n    \"mainNotes\" : \"mainNotes\",\r\n    \"firstName\" : \"firstName\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"phone\" : \"phone\",\r\n    \"organization_id\" : 3,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FullOrganizationData>(exampleJson)
            : default(FullOrganizationData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="organizations"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/organization/{organizations}/locations")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizationByOrganizationsLocations")]
        [SwaggerResponse(statusCode: 200, type: typeof(LocationDTO), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizationByOrganizationsLocations([FromRoute (Name = "organizations")][Required]string organizations, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LocationDTO));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"address\" : \"address\",\r\n  \"organization_id\" : 1,\r\n  \"latitude\" : \"latitude\",\r\n  \"nickname\" : \"nickname\",\r\n  \"id\" : 6,\r\n  \"longitude\" : \"longitude\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LocationDTO>(exampleJson)
            : default(LocationDTO);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/organizations")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizations")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OrganizationDTO>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersOrganizations([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OrganizationDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"website\" : \"website\",\r\n  \"form_submission_id\" : 2,\r\n  \"phone\" : \"phone\",\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 7,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"mainNotes\" : \"mainNotes\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"website\" : \"website\",\r\n  \"form_submission_id\" : 2,\r\n  \"phone\" : \"phone\",\r\n  \"locationDescription\" : \"locationDescription\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 7,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<OrganizationDTO>>(exampleJson)
            : default(List<OrganizationDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/students/{users}/notes")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersStudentsByUsersNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StudentNoteDTO>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersStudentsByUsersNotes([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StudentNoteDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"notes\" : \"notes\",\r\n  \"id\" : 0\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"notes\" : \"notes\",\r\n  \"id\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StudentNoteDTO>>(exampleJson)
            : default(List<StudentNoteDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Business Partners/api/consumer/v1/business-partners/timelogs")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessPartnersApiConsumerV1BusinessPartnersTimelogs")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ReflectionTimeLogResponse>), description: "OK")]
        public virtual IActionResult GetBusinessPartnersApiConsumerV1BusinessPartnersTimelogs([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ReflectionTimeLogResponse>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n}, {\r\n  \"payPeriod\" : {\r\n    \"experience_id\" : 1,\r\n    \"isCurrent\" : true,\r\n    \"approved\" : true,\r\n    \"form_submission_id\" : 0,\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"experienceName\" : \"experienceName\",\r\n    \"id\" : 5,\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"status\" : 6\r\n  },\r\n  \"signatureUrl\" : \"signatureUrl\",\r\n  \"timeLog\" : {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  },\r\n  \"experience\" : {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  },\r\n  \"payPeriodSubmissionId\" : 5,\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ReflectionTimeLogResponse>>(exampleJson)
            : default(List<ReflectionTimeLogResponse>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="contacts"></param>
        /// <param name="updateContactRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/contact/{contacts}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersContactByContacts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersContactByContacts([FromRoute (Name = "contacts")][Required]string contacts, [FromBody]UpdateContactRequest updateContactRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="businessPartnerEntityControllerDeleteContactRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/contacts/delete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersContactsDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersContactsDelete([FromBody]BusinessPartnerEntityControllerDeleteContactRequest businessPartnerEntityControllerDeleteContactRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="businessPartnerEntityControllerEditExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiences([FromRoute (Name = "experiences")][Required]string experiences, [FromBody]BusinessPartnerEntityControllerEditExperienceRequest businessPartnerEntityControllerEditExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="pendingUserExperience"></param>
        /// <param name="scheduleInterviewRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}/applications/{pending_user_experience}/interview")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceInterview")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceInterview([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pending_user_experience")][Required]string pendingUserExperience, [FromBody]ScheduleInterviewRequest scheduleInterviewRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="pendingUserExperience"></param>
        /// <param name="actionExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}/applications/{pending_user_experience}/offer")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceOffer")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceOffer([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pending_user_experience")][Required]string pendingUserExperience, [FromBody]ActionExperienceRequest actionExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="pendingUserExperience"></param>
        /// <param name="actionExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}/applications/{pending_user_experience}/reject")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceReject")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceReject([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pending_user_experience")][Required]string pendingUserExperience, [FromBody]ActionExperienceRequest actionExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="experiences"></param>
        /// <param name="pendingUserExperience"></param>
        /// <param name="actionExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences/{experiences}/applications/{pending_user_experience}/revert")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceRevert")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersExperiencesByExperiencesApplicationsByPendingUserExperienceRevert([FromRoute (Name = "experiences")][Required]string experiences, [FromRoute (Name = "pending_user_experience")][Required]string pendingUserExperience, [FromBody]ActionExperienceRequest actionExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="contacts"></param>
        /// <param name="businessPartnerPortalControllerUpdateDistrictRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites/{contacts}/districts")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchBusinessPartnersApiConsumerV1BusinessPartnersInvitesByContactsDistricts")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchBusinessPartnersApiConsumerV1BusinessPartnersInvitesByContactsDistricts([FromRoute (Name = "contacts")][Required]string contacts, [FromBody]BusinessPartnerPortalControllerUpdateDistrictRequest businessPartnerPortalControllerUpdateDistrictRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="activities"></param>
        /// <param name="businessPartnerEntityControllerApproveRejectActivityRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/activities/{activities}/approval")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersActivitiesByActivitiesApproval")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersActivitiesByActivitiesApproval([FromRoute (Name = "activities")][Required]string activities, [FromBody]BusinessPartnerEntityControllerApproveRejectActivityRequest businessPartnerEntityControllerApproveRejectActivityRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/contact")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersContact")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersContact([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="businessPartnerEntityControllerCreateExperienceRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/experiences")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersExperiences")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersExperiences([FromBody]BusinessPartnerEntityControllerCreateExperienceRequest businessPartnerEntityControllerCreateExperienceRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersInvites")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersInvites([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="businessPartnerPortalControllerActivateRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites/activate")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesActivate")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesActivate([FromBody]BusinessPartnerPortalControllerActivateRequest businessPartnerPortalControllerActivateRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites-bulk")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesBulk")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesBulk([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Portal
        /// </summary>
        /// <remarks>Business Partners Portal</remarks>
        /// <param name="businessPartnerPortalControllerBulkResendInviteByContactIdRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/invites-bulk/resend")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesBulkResend")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersInvitesBulkResend([FromBody]BusinessPartnerPortalControllerBulkResendInviteByContactIdRequest businessPartnerPortalControllerBulkResendInviteByContactIdRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="businessPartnerEntityControllerCreateStudentNoteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/students/notes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersStudentsNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersStudentsNotes([FromBody]BusinessPartnerEntityControllerCreateStudentNoteRequest businessPartnerEntityControllerCreateStudentNoteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Business Partners Entity
        /// </summary>
        /// <remarks>Business Partners Entity</remarks>
        /// <param name="timeLogs"></param>
        /// <param name="businessPartnerEntityControllerApproveRejectReflectionRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Business Partners/api/consumer/v1/business-partners/timelogs/{time_logs}/approval")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostBusinessPartnersApiConsumerV1BusinessPartnersTimelogsByTimeLogsApproval")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostBusinessPartnersApiConsumerV1BusinessPartnersTimelogsByTimeLogsApproval([FromRoute (Name = "time_logs")][Required]string timeLogs, [FromBody]BusinessPartnerEntityControllerApproveRejectReflectionRequest businessPartnerEntityControllerApproveRejectReflectionRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
