/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProfileApiController : ControllerBase
    { 
        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Profile/api/consumer/v1/profile/{users}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfileApiConsumerV1ProfileByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteProfileApiConsumerV1ProfileByUsers([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="userFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Profile/api/consumer/v1/profile/{users}/file/{user_files}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfileApiConsumerV1ProfileByUsersFileByUserFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteProfileApiConsumerV1ProfileByUsersFileByUserFiles([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "user_files")][Required]string userFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="userParents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Profile/api/consumer/v1/profile/{users}/parent/{user_parents}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfileApiConsumerV1ProfileByUsersParentByUserParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteProfileApiConsumerV1ProfileByUsersParentByUserParents([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "user_parents")][Required]string userParents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="userParents"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Profile/api/consumer/v1/student-profile/parent/{user_parents}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfileApiConsumerV1StudentProfileParentByUserParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteProfileApiConsumerV1StudentProfileParentByUserParents([FromRoute (Name = "user_parents")][Required]string userParents, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="userNote"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpDelete]
        [Route("/Profile/api/consumer/v1/user-notes/{user_note}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProfileApiConsumerV1UserNotesByUserNote")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult DeleteProfileApiConsumerV1UserNotesByUserNote([FromRoute (Name = "user_note")][Required]string userNote, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/all-student-parents")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1AllStudentParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserParentDTO>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1AllStudentParents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserParentDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"approved\" : true,\r\n  \"phone\" : \"phone\",\r\n  \"student_id\" : 5,\r\n  \"id\" : 5,\r\n  \"email\" : \"email\",\r\n  \"token\" : \"token\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"approved\" : true,\r\n  \"phone\" : \"phone\",\r\n  \"student_id\" : 5,\r\n  \"id\" : 5,\r\n  \"email\" : \"email\",\r\n  \"token\" : \"token\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<UserParentDTO>>(exampleJson)
            : default(List<UserParentDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/alumni")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1Alumni")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<StudentAlumni>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1Alumni([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<StudentAlumni>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"personalPhone\" : \"personalPhone\",\r\n  \"id\" : 0,\r\n  \"personalEmail\" : \"personalEmail\"\r\n}, {\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"personalPhone\" : \"personalPhone\",\r\n  \"id\" : 0,\r\n  \"personalEmail\" : \"personalEmail\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<StudentAlumni>>(exampleJson)
            : default(List<StudentAlumni>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="addRecipientListRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/grades")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1Grades")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1Grades([FromBody]AddRecipientListRequest addRecipientListRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/me")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1Me")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentSelfProfileResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1Me([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentSelfProfileResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"cluster\" : \"cluster\",\r\n  \"optionalProfileSubmission\" : 6,\r\n  \"rejectedActivities\" : [ {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  }, {\r\n    \"allowsResubmission\" : true,\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 6,\r\n    \"registration_form_id\" : 7,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"order\" : 6,\r\n    \"tag_ids\" : [ 1, 1 ],\r\n    \"maxNumberRegistrations\" : 6,\r\n    \"studentReminderDays\" : 9,\r\n    \"numberApprovalsRequired\" : 4,\r\n    \"conditional_badge_group_id\" : 9,\r\n    \"form_id\" : 3,\r\n    \"created_by\" : 8,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 9,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"approvalProcess\" : 1,\r\n    \"folder_id\" : 6,\r\n    \"isEvent\" : true\r\n  } ],\r\n  \"pendingExperiences\" : [ {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"rejectedExperiences\" : [ {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"organizationName\" : \"organizationName\",\r\n    \"reflection_form_approval\" : 2,\r\n    \"form_submission_id\" : 4,\r\n    \"contactName\" : \"contactName\",\r\n    \"conditional_badge_group_id\" : 7,\r\n    \"form_id\" : 5,\r\n    \"description\" : \"description\",\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"contact_id\" : 3,\r\n    \"created_by\" : 5,\r\n    \"location_id\" : 6,\r\n    \"numberOfSpots\" : 2,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"reflection_form_id\" : 0,\r\n    \"organization_id\" : 1,\r\n    \"name\" : \"name\",\r\n    \"hideFromSearch\" : true,\r\n    \"id\" : 9,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"requiredProfileSubmission\" : 1,\r\n  \"canUpdateCluster\" : true,\r\n  \"pendingHours\" : 0.8008281904610115,\r\n  \"grades\" : [ {\r\n    \"assignment\" : \"assignment\",\r\n    \"grade\" : \"grade\",\r\n    \"course\" : \"course\"\r\n  }, {\r\n    \"assignment\" : \"assignment\",\r\n    \"grade\" : \"grade\",\r\n    \"course\" : \"course\"\r\n  } ],\r\n  \"user\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"forms\" : [ {\r\n    \"formId\" : 5,\r\n    \"formSubmissionDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"formSubmissionId\" : 6,\r\n    \"formName\" : \"formName\"\r\n  }, {\r\n    \"formId\" : 5,\r\n    \"formSubmissionDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"formSubmissionId\" : 6,\r\n    \"formName\" : \"formName\"\r\n  } ],\r\n  \"parents\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"approved\" : true,\r\n    \"phone\" : \"phone\",\r\n    \"student_id\" : 5,\r\n    \"id\" : 5,\r\n    \"email\" : \"email\",\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"approved\" : true,\r\n    \"phone\" : \"phone\",\r\n    \"student_id\" : 5,\r\n    \"id\" : 5,\r\n    \"email\" : \"email\",\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentSelfProfileResponse>(exampleJson)
            : default(StudentSelfProfileResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/me/cluster")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1MeCluster")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentProfileControllerClusterResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1MeCluster([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentProfileControllerClusterResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"cluster\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 6,\r\n    \"shortName\" : \"shortName\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentProfileControllerClusterResponse>(exampleJson)
            : default(StudentProfileControllerClusterResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/me/parents")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1MeParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserParentDTO>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1MeParents([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserParentDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"approved\" : true,\r\n  \"phone\" : \"phone\",\r\n  \"student_id\" : 5,\r\n  \"id\" : 5,\r\n  \"email\" : \"email\",\r\n  \"token\" : \"token\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"lastName\" : \"lastName\",\r\n  \"firstName\" : \"firstName\",\r\n  \"approved\" : true,\r\n  \"phone\" : \"phone\",\r\n  \"student_id\" : 5,\r\n  \"id\" : 5,\r\n  \"email\" : \"email\",\r\n  \"token\" : \"token\",\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<UserParentDTO>>(exampleJson)
            : default(List<UserParentDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/products")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1Products")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductsResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1Products([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProductsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"hasServe\" : true,\r\n  \"hasJobs\" : true,\r\n  \"hasJourney\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProductsResponse>(exampleJson)
            : default(ProductsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1Profile")]
        [SwaggerResponse(statusCode: 200, type: typeof(BasicUser), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1Profile([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BasicUser));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"firstName\" : \"firstName\",\r\n  \"lastName\" : \"lastName\",\r\n  \"role\" : 1,\r\n  \"school\" : \"school\",\r\n  \"grade\" : 6,\r\n  \"id\" : 5,\r\n  \"profileImageUrl\" : \"profileImageUrl\",\r\n  \"email\" : \"email\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BasicUser>(exampleJson)
            : default(BasicUser);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/{users}")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(StudentProfileResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileByUsers([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StudentProfileResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"overriddenSchoolYearServeGoal\" : 7.061401241503109,\r\n  \"lifetimeServiceHours\" : 6.438423552598547,\r\n  \"notes\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 7,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 7,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"credentials\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"careerPathway\" : \"careerPathway\",\r\n    \"careerField\" : \"careerField\",\r\n    \"code\" : \"code\",\r\n    \"pointValue\" : 6,\r\n    \"conditional_badge_group_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"id\" : 4,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"careerPathway\" : \"careerPathway\",\r\n    \"careerField\" : \"careerField\",\r\n    \"code\" : \"code\",\r\n    \"pointValue\" : 6,\r\n    \"conditional_badge_group_id\" : 0,\r\n    \"name\" : \"name\",\r\n    \"id\" : 4,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"lastSignInDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"grades\" : [ {\r\n    \"assignment\" : \"assignment\",\r\n    \"grade\" : \"grade\",\r\n    \"course\" : \"course\"\r\n  }, {\r\n    \"assignment\" : \"assignment\",\r\n    \"grade\" : \"grade\",\r\n    \"course\" : \"course\"\r\n  } ],\r\n  \"pendingHours\" : 3.0937452626664474,\r\n  \"bypassCollegeGradeRequirement\" : true,\r\n  \"emails\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 1,\r\n    \"message\" : \"message\",\r\n    \"sentBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"student\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"id\" : 1,\r\n    \"message\" : \"message\",\r\n    \"sentBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  } ],\r\n  \"completedTasks\" : [ {\r\n    \"task\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 3,\r\n      \"created_by\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"overdue\" : true,\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"complete\" : true\r\n  }, {\r\n    \"task\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 3,\r\n      \"created_by\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"overdue\" : true,\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"complete\" : true\r\n  } ],\r\n  \"rejectedServiceLogs\" : [ {\r\n    \"rejectedBy\" : \"rejectedBy\",\r\n    \"name\" : \"name\",\r\n    \"dateString\" : \"dateString\",\r\n    \"rejectedOn\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"rejectedBy\" : \"rejectedBy\",\r\n    \"name\" : \"name\",\r\n    \"dateString\" : \"dateString\",\r\n    \"rejectedOn\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"school\" : \"school\",\r\n  \"requiredProfileSubmission\" : 7,\r\n  \"logs\" : [ {\r\n    \"totalHours\" : 6.519180951018382,\r\n    \"year\" : \"year\",\r\n    \"name\" : \"name\",\r\n    \"verified\" : true,\r\n    \"id\" : 0\r\n  }, {\r\n    \"totalHours\" : 6.519180951018382,\r\n    \"year\" : \"year\",\r\n    \"name\" : \"name\",\r\n    \"verified\" : true,\r\n    \"id\" : 0\r\n  } ],\r\n  \"caseloadManagers\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"courses\" : [ {\r\n    \"grade\" : 0.8008281904610115,\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"complete\" : true\r\n  }, {\r\n    \"grade\" : 0.8008281904610115,\r\n    \"course\" : {\r\n      \"sourcedId\" : \"sourcedId\",\r\n      \"form_submission_id\" : 6,\r\n      \"level\" : 1,\r\n      \"ncaa\" : true,\r\n      \"conditional_badge_group_id\" : 2,\r\n      \"career_cluster_id\" : 0,\r\n      \"description\" : \"description\",\r\n      \"grades\" : [ 3, 3 ],\r\n      \"term_id\" : 7,\r\n      \"explicitSchoolIds\" : [ 7, 7 ],\r\n      \"showsOnGradPlan\" : true,\r\n      \"prerequisites\" : {\r\n        \"courseIds\" : [ 5, 5 ],\r\n        \"setting\" : 2\r\n      },\r\n      \"graduationStatus\" : 1,\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"credits\" : 9.301444243932576,\r\n      \"courseLength\" : 4,\r\n      \"name\" : \"name\",\r\n      \"completionIndicatorBy\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"id\" : 5,\r\n      \"courseId\" : \"courseId\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"complete\" : true\r\n  } ],\r\n  \"pendingTasks\" : [ {\r\n    \"task\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 3,\r\n      \"created_by\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"overdue\" : true,\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"complete\" : true\r\n  }, {\r\n    \"task\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 3,\r\n      \"created_by\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"overdue\" : true,\r\n    \"createdBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"complete\" : true\r\n  } ],\r\n  \"approvedHours\" : 9.018348186070783,\r\n  \"transcripts\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"upload_id\" : 1,\r\n    \"user_id\" : 5,\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"type\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"upload_id\" : 1,\r\n    \"user_id\" : 5,\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 6,\r\n    \"type\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"canMergeServeData\" : true,\r\n  \"colleges\" : [ {\r\n    \"college\" : \"college\",\r\n    \"status\" : 2\r\n  }, {\r\n    \"college\" : \"college\",\r\n    \"status\" : 2\r\n  } ],\r\n  \"shouldShowAttendance\" : true,\r\n  \"experiences\" : [ {\r\n    \"canGeoLog\" : true,\r\n    \"reflection_form_approval\" : 1,\r\n    \"reflectionFormResponse\" : {\r\n      \"externalToken\" : \"externalToken\",\r\n      \"description\" : \"description\",\r\n      \"canBeUsedByBusinessPartners\" : true,\r\n      \"appearsInMarketPlace\" : true,\r\n      \"premium\" : true,\r\n      \"name\" : \"name\",\r\n      \"files\" : [ {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"form_id\" : 0,\r\n        \"name\" : \"name\",\r\n        \"fileUrl\" : \"fileUrl\",\r\n        \"id\" : 6,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }, {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"form_id\" : 0,\r\n        \"name\" : \"name\",\r\n        \"fileUrl\" : \"fileUrl\",\r\n        \"id\" : 6,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      } ],\r\n      \"id\" : 7,\r\n      \"canBeUsedInWorkflow\" : true,\r\n      \"fields\" : [ {\r\n        \"allowsOtherField\" : true,\r\n        \"studentsCanViewOnEntity\" : true,\r\n        \"values\" : [ {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        }, {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        } ],\r\n        \"showToStudentsInExperience\" : true,\r\n        \"description\" : \"description\",\r\n        \"characterLimit\" : 2,\r\n        \"type\" : 5,\r\n        \"wordLimit\" : 2,\r\n        \"availableOnExternalEntityForm\" : true,\r\n        \"required\" : true,\r\n        \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n        \"hiddenFromStaffOnStudentProfile\" : true,\r\n        \"conditionalDisplayValue\" : 1,\r\n        \"hiddenFromStudents\" : true,\r\n        \"name\" : \"name\",\r\n        \"id\" : 5,\r\n        \"maxMultiSelect\" : 7\r\n      }, {\r\n        \"allowsOtherField\" : true,\r\n        \"studentsCanViewOnEntity\" : true,\r\n        \"values\" : [ {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        }, {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        } ],\r\n        \"showToStudentsInExperience\" : true,\r\n        \"description\" : \"description\",\r\n        \"characterLimit\" : 2,\r\n        \"type\" : 5,\r\n        \"wordLimit\" : 2,\r\n        \"availableOnExternalEntityForm\" : true,\r\n        \"required\" : true,\r\n        \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n        \"hiddenFromStaffOnStudentProfile\" : true,\r\n        \"conditionalDisplayValue\" : 1,\r\n        \"hiddenFromStudents\" : true,\r\n        \"name\" : \"name\",\r\n        \"id\" : 5,\r\n        \"maxMultiSelect\" : 7\r\n      } ],\r\n      \"approvalWorkflow\" : 4,\r\n      \"folder_id\" : 1,\r\n      \"user\" : {\r\n        \"firstName\" : \"firstName\",\r\n        \"lastName\" : \"lastName\",\r\n        \"role\" : 1,\r\n        \"school\" : \"school\",\r\n        \"grade\" : 6,\r\n        \"id\" : 5,\r\n        \"profileImageUrl\" : \"profileImageUrl\",\r\n        \"email\" : \"email\"\r\n      }\r\n    },\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"canSubmitPayPeriods\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"user_experience_id\" : 4,\r\n    \"id\" : 7,\r\n    \"hasPayPeriods\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"currentGeoLogs\" : [ {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    }, {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    } ],\r\n    \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvedHours\" : 6.027456183070403,\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"tags\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 1,\r\n      \"sendsParentEmail\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 1,\r\n      \"sendsParentEmail\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"maxNumberOfHours\" : 5.962133916683182,\r\n    \"isCurrent\" : true,\r\n    \"reflection_form_id\" : 0,\r\n    \"user_id\" : 5,\r\n    \"timeLogs\" : [ {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    }, {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    } ],\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experienceText\" : \"experienceText\",\r\n    \"name\" : \"name\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"canGeoLog\" : true,\r\n    \"reflection_form_approval\" : 1,\r\n    \"reflectionFormResponse\" : {\r\n      \"externalToken\" : \"externalToken\",\r\n      \"description\" : \"description\",\r\n      \"canBeUsedByBusinessPartners\" : true,\r\n      \"appearsInMarketPlace\" : true,\r\n      \"premium\" : true,\r\n      \"name\" : \"name\",\r\n      \"files\" : [ {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"form_id\" : 0,\r\n        \"name\" : \"name\",\r\n        \"fileUrl\" : \"fileUrl\",\r\n        \"id\" : 6,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      }, {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"form_id\" : 0,\r\n        \"name\" : \"name\",\r\n        \"fileUrl\" : \"fileUrl\",\r\n        \"id\" : 6,\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      } ],\r\n      \"id\" : 7,\r\n      \"canBeUsedInWorkflow\" : true,\r\n      \"fields\" : [ {\r\n        \"allowsOtherField\" : true,\r\n        \"studentsCanViewOnEntity\" : true,\r\n        \"values\" : [ {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        }, {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        } ],\r\n        \"showToStudentsInExperience\" : true,\r\n        \"description\" : \"description\",\r\n        \"characterLimit\" : 2,\r\n        \"type\" : 5,\r\n        \"wordLimit\" : 2,\r\n        \"availableOnExternalEntityForm\" : true,\r\n        \"required\" : true,\r\n        \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n        \"hiddenFromStaffOnStudentProfile\" : true,\r\n        \"conditionalDisplayValue\" : 1,\r\n        \"hiddenFromStudents\" : true,\r\n        \"name\" : \"name\",\r\n        \"id\" : 5,\r\n        \"maxMultiSelect\" : 7\r\n      }, {\r\n        \"allowsOtherField\" : true,\r\n        \"studentsCanViewOnEntity\" : true,\r\n        \"values\" : [ {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        }, {\r\n          \"id\" : 3,\r\n          \"value\" : \"value\",\r\n          \"order\" : 9\r\n        } ],\r\n        \"showToStudentsInExperience\" : true,\r\n        \"description\" : \"description\",\r\n        \"characterLimit\" : 2,\r\n        \"type\" : 5,\r\n        \"wordLimit\" : 2,\r\n        \"availableOnExternalEntityForm\" : true,\r\n        \"required\" : true,\r\n        \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n        \"hiddenFromStaffOnStudentProfile\" : true,\r\n        \"conditionalDisplayValue\" : 1,\r\n        \"hiddenFromStudents\" : true,\r\n        \"name\" : \"name\",\r\n        \"id\" : 5,\r\n        \"maxMultiSelect\" : 7\r\n      } ],\r\n      \"approvalWorkflow\" : 4,\r\n      \"folder_id\" : 1,\r\n      \"user\" : {\r\n        \"firstName\" : \"firstName\",\r\n        \"lastName\" : \"lastName\",\r\n        \"role\" : 1,\r\n        \"school\" : \"school\",\r\n        \"grade\" : 6,\r\n        \"id\" : 5,\r\n        \"profileImageUrl\" : \"profileImageUrl\",\r\n        \"email\" : \"email\"\r\n      }\r\n    },\r\n    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"canSubmitPayPeriods\" : true,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"contact\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"phone\" : \"phone\",\r\n      \"organization_id\" : 5,\r\n      \"id\" : 5,\r\n      \"title\" : \"title\",\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"user_experience_id\" : 4,\r\n    \"id\" : 7,\r\n    \"hasPayPeriods\" : true,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"currentGeoLogs\" : [ {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    }, {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    } ],\r\n    \"userStartedExperience\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvedHours\" : 6.027456183070403,\r\n    \"allowsTotalTimelogHoursSubmission\" : true,\r\n    \"tags\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 1,\r\n      \"sendsParentEmail\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"name\" : \"name\",\r\n      \"description\" : \"description\",\r\n      \"id\" : 1,\r\n      \"sendsParentEmail\" : true,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"maxNumberOfHours\" : 5.962133916683182,\r\n    \"isCurrent\" : true,\r\n    \"reflection_form_id\" : 0,\r\n    \"user_id\" : 5,\r\n    \"timeLogs\" : [ {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    }, {\r\n      \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"pay_period_id\" : 3,\r\n      \"reflection_form_submission_id\" : 2,\r\n      \"sponsorToken\" : \"sponsorToken\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"approved\" : true,\r\n      \"checkOutLat\" : \"checkOutLat\",\r\n      \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"user_experience_id\" : 2,\r\n      \"sponsorRejected\" : true,\r\n      \"studentReflectionText\" : \"studentReflectionText\",\r\n      \"isEnded\" : true,\r\n      \"id\" : 9,\r\n      \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"hours\" : 7.061401241503109,\r\n      \"checkOutLong\" : \"checkOutLong\",\r\n      \"sponsorComment\" : \"sponsorComment\",\r\n      \"timeOut\" : \"timeOut\",\r\n      \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"checkInLong\" : \"checkInLong\",\r\n      \"checkInLat\" : \"checkInLat\",\r\n      \"sponsorApproved\" : true,\r\n      \"timeIn\" : \"timeIn\"\r\n    } ],\r\n    \"organization\" : {\r\n      \"mainNotes\" : \"mainNotes\",\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"website\" : \"website\",\r\n      \"form_submission_id\" : 2,\r\n      \"phone\" : \"phone\",\r\n      \"locationDescription\" : \"locationDescription\",\r\n      \"name\" : \"name\",\r\n      \"id\" : 7,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"experienceText\" : \"experienceText\",\r\n    \"name\" : \"name\",\r\n    \"location\" : {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"address\" : \"address\",\r\n      \"organization_id\" : 1,\r\n      \"latitude\" : \"latitude\",\r\n      \"nickname\" : \"nickname\",\r\n      \"id\" : 6,\r\n      \"longitude\" : \"longitude\",\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    },\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"badges\" : [ {\r\n    \"decision_points_form_id\" : 6,\r\n    \"conditional_badge_group_id\" : 1,\r\n    \"decisionPointDescription\" : \"decisionPointDescription\",\r\n    \"numberOfCompletedExperiences\" : 0,\r\n    \"description\" : \"description\",\r\n    \"numberOfRequiredCareerSurveys\" : 5,\r\n    \"experienceHours\" : 3.616076749251911,\r\n    \"appearsInLibrary\" : true,\r\n    \"communityServiceHours\" : 9.301444243932576,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"badge_group_id\" : 2,\r\n    \"selectableOnPlan\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"name\" : \"name\",\r\n    \"showsOnStudentDashboard\" : true,\r\n    \"id\" : 7,\r\n    \"folder_id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"decision_points_form_id\" : 6,\r\n    \"conditional_badge_group_id\" : 1,\r\n    \"decisionPointDescription\" : \"decisionPointDescription\",\r\n    \"numberOfCompletedExperiences\" : 0,\r\n    \"description\" : \"description\",\r\n    \"numberOfRequiredCareerSurveys\" : 5,\r\n    \"experienceHours\" : 3.616076749251911,\r\n    \"appearsInLibrary\" : true,\r\n    \"communityServiceHours\" : 9.301444243932576,\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"badge_group_id\" : 2,\r\n    \"selectableOnPlan\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"name\" : \"name\",\r\n    \"showsOnStudentDashboard\" : true,\r\n    \"id\" : 7,\r\n    \"folder_id\" : 5,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"optionalProfileSubmission\" : 0,\r\n  \"tests\" : [ {\r\n    \"results\" : [ {\r\n      \"date\" : \"date\",\r\n      \"result\" : \"result\"\r\n    }, {\r\n      \"date\" : \"date\",\r\n      \"result\" : \"result\"\r\n    } ],\r\n    \"testName\" : \"testName\"\r\n  }, {\r\n    \"results\" : [ {\r\n      \"date\" : \"date\",\r\n      \"result\" : \"result\"\r\n    }, {\r\n      \"date\" : \"date\",\r\n      \"result\" : \"result\"\r\n    } ],\r\n    \"testName\" : \"testName\"\r\n  } ],\r\n  \"timeLogs\" : [ {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  }, {\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"pay_period_id\" : 3,\r\n    \"reflection_form_submission_id\" : 2,\r\n    \"sponsorToken\" : \"sponsorToken\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approved\" : true,\r\n    \"checkOutLat\" : \"checkOutLat\",\r\n    \"geoCheckInEnd\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_experience_id\" : 2,\r\n    \"sponsorRejected\" : true,\r\n    \"studentReflectionText\" : \"studentReflectionText\",\r\n    \"isEnded\" : true,\r\n    \"id\" : 9,\r\n    \"geoCheckinStart\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"hours\" : 7.061401241503109,\r\n    \"checkOutLong\" : \"checkOutLong\",\r\n    \"sponsorComment\" : \"sponsorComment\",\r\n    \"timeOut\" : \"timeOut\",\r\n    \"sponsorSignatureUrl\" : \"sponsorSignatureUrl\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"checkInLong\" : \"checkInLong\",\r\n    \"checkInLat\" : \"checkInLat\",\r\n    \"sponsorApproved\" : true,\r\n    \"timeIn\" : \"timeIn\"\r\n  } ],\r\n  \"activities\" : [ {\r\n    \"allowsResubmission\" : true,\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"user_activity_id\" : 6,\r\n    \"form_submission_id\" : 9,\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 7,\r\n    \"registration_form_id\" : 4,\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 8,\r\n    \"order\" : 7,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"tag_ids\" : [ 3, 3 ],\r\n    \"studentReminderDays\" : 6,\r\n    \"maxNumberRegistrations\" : 5,\r\n    \"numberApprovalsRequired\" : 1,\r\n    \"conditional_badge_group_id\" : 1,\r\n    \"form_id\" : 1,\r\n    \"addedViaBadge\" : true,\r\n    \"created_by\" : 9,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 1,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"externalApprovalData\" : {\r\n      \"businessPartnerId\" : 1,\r\n      \"role\" : \"role\",\r\n      \"organization\" : \"organization\",\r\n      \"name\" : \"name\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"approvalProcess\" : 2,\r\n    \"folder_id\" : 4,\r\n    \"isEvent\" : true\r\n  }, {\r\n    \"allowsResubmission\" : true,\r\n    \"date\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"user_activity_id\" : 6,\r\n    \"form_submission_id\" : 9,\r\n    \"signatureUrl\" : \"signatureUrl\",\r\n    \"dueDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"description\" : \"description\",\r\n    \"sponsorReminderDays\" : 7,\r\n    \"registration_form_id\" : 4,\r\n    \"availableUntil\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"premium\" : true,\r\n    \"imageUrl\" : \"imageUrl\",\r\n    \"id\" : 8,\r\n    \"order\" : 7,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"tag_ids\" : [ 3, 3 ],\r\n    \"studentReminderDays\" : 6,\r\n    \"maxNumberRegistrations\" : 5,\r\n    \"numberApprovalsRequired\" : 1,\r\n    \"conditional_badge_group_id\" : 1,\r\n    \"form_id\" : 1,\r\n    \"addedViaBadge\" : true,\r\n    \"created_by\" : 9,\r\n    \"iframeUrl\" : \"iframeUrl\",\r\n    \"canRegister\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"activity_type_id\" : 1,\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"visibleForEveryone\" : true,\r\n    \"name\" : \"name\",\r\n    \"externalApprovalData\" : {\r\n      \"businessPartnerId\" : 1,\r\n      \"role\" : \"role\",\r\n      \"organization\" : \"organization\",\r\n      \"name\" : \"name\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"approvalProcess\" : 2,\r\n    \"folder_id\" : 4,\r\n    \"isEvent\" : true\r\n  } ],\r\n  \"files\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_id\" : 2,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"user_id\" : 2,\r\n    \"name\" : \"name\",\r\n    \"fileUrl\" : \"fileUrl\",\r\n    \"id\" : 1,\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"serviceHoursThisYear\" : 3.353193347011243,\r\n  \"canUnlinkCommonAppAccount\" : true,\r\n  \"user\" : {\r\n    \"lastName\" : \"lastName\",\r\n    \"gender\" : 8,\r\n    \"wblHours\" : 5.533258397034986,\r\n    \"studentId\" : \"studentId\",\r\n    \"firstName\" : \"firstName\",\r\n    \"cluster_id\" : 3,\r\n    \"segment_ids\" : [ 4, 4 ],\r\n    \"serviceHours\" : 3.0576100241049344,\r\n    \"requiredProfileSubmission\" : 7,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 7,\r\n    \"district\" : \"district\",\r\n    \"specialPopulations\" : [ 3, 3 ],\r\n    \"id\" : 4,\r\n    \"fields\" : [ {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"attendance\" : [ {\r\n    \"courseName\" : \"courseName\",\r\n    \"notes\" : \"notes\",\r\n    \"dateString\" : \"dateString\",\r\n    \"attendance\" : 9\r\n  }, {\r\n    \"courseName\" : \"courseName\",\r\n    \"notes\" : \"notes\",\r\n    \"dateString\" : \"dateString\",\r\n    \"attendance\" : 9\r\n  } ],\r\n  \"forms\" : [ {\r\n    \"formId\" : 5,\r\n    \"formSubmissionDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"formSubmissionId\" : 6,\r\n    \"formName\" : \"formName\"\r\n  }, {\r\n    \"formId\" : 5,\r\n    \"formSubmissionDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"formSubmissionId\" : 6,\r\n    \"formName\" : \"formName\"\r\n  } ],\r\n  \"parents\" : [ {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"approved\" : true,\r\n    \"phone\" : \"phone\",\r\n    \"student_id\" : 5,\r\n    \"id\" : 5,\r\n    \"email\" : \"email\",\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  }, {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"lastName\" : \"lastName\",\r\n    \"firstName\" : \"firstName\",\r\n    \"approved\" : true,\r\n    \"phone\" : \"phone\",\r\n    \"student_id\" : 5,\r\n    \"id\" : 5,\r\n    \"email\" : \"email\",\r\n    \"token\" : \"token\",\r\n    \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n  } ],\r\n  \"serviceLogsPerGroup\" : [ {\r\n    \"groupName\" : \"groupName\",\r\n    \"lifetimeHours\" : 6.778324963048013,\r\n    \"schoolYearHours\" : 6.878052220127876\r\n  }, {\r\n    \"groupName\" : \"groupName\",\r\n    \"lifetimeHours\" : 6.778324963048013,\r\n    \"schoolYearHours\" : 6.878052220127876\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StudentProfileResponse>(exampleJson)
            : default(StudentProfileResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/{users}/demographics")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileByUsersDemographics")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<long>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileByUsersDemographics([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<long>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ 0, 0 ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<long>>(exampleJson)
            : default(List<long>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="userFiles"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/{users}/file/{user_files}")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileByUsersFileByUserFiles")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileByUsersFileByUserFiles([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "user_files")][Required]string userFiles, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/districts")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileDistricts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DistrictDTO>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileDistricts([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DistrictDTO>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"basicBackgroundCheckTokens\" : 1,\r\n  \"dailyPendingStudentEmailCount\" : 5,\r\n  \"requiredProfileForm\" : 0,\r\n  \"ncesID\" : \"ncesID\",\r\n  \"studentsCanUpdateCluster\" : true,\r\n  \"fullBackgroundCheckTokens\" : 6,\r\n  \"classlinkTenantId\" : \"classlinkTenantId\",\r\n  \"optionalProfileForm\" : 2,\r\n  \"googleDomain\" : \"googleDomain\",\r\n  \"logoUrl\" : \"logoUrl\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"isShutDown\" : true,\r\n  \"counselorOneRosterField\" : \"counselorOneRosterField\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 5,\r\n  \"samlMetadata\" : \"samlMetadata\",\r\n  \"shortName\" : \"shortName\",\r\n  \"incomingEmail\" : \"incomingEmail\",\r\n  \"requiresVerificationForStudents\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n}, {\r\n  \"basicBackgroundCheckTokens\" : 1,\r\n  \"dailyPendingStudentEmailCount\" : 5,\r\n  \"requiredProfileForm\" : 0,\r\n  \"ncesID\" : \"ncesID\",\r\n  \"studentsCanUpdateCluster\" : true,\r\n  \"fullBackgroundCheckTokens\" : 6,\r\n  \"classlinkTenantId\" : \"classlinkTenantId\",\r\n  \"optionalProfileForm\" : 2,\r\n  \"googleDomain\" : \"googleDomain\",\r\n  \"logoUrl\" : \"logoUrl\",\r\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"isShutDown\" : true,\r\n  \"counselorOneRosterField\" : \"counselorOneRosterField\",\r\n  \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"id\" : 5,\r\n  \"samlMetadata\" : \"samlMetadata\",\r\n  \"shortName\" : \"shortName\",\r\n  \"incomingEmail\" : \"incomingEmail\",\r\n  \"requiresVerificationForStudents\" : true,\r\n  \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<DistrictDTO>>(exampleJson)
            : default(List<DistrictDTO>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="districts"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/districts/{districts}/schools")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileDistrictsByDistrictsSchools")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileDistrictsByDistrictsSchools([FromRoute (Name = "districts")][Required]string districts, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ null, null ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/form-ids")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileFormIds")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetProfileFormsResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileFormIds([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(GetProfileFormsResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"optionalForm\" : 6,\r\n  \"requiredForm\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetProfileFormsResponse>(exampleJson)
            : default(GetProfileFormsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/form-required")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileFormRequired")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileFormRequired([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/optional-form-allowed")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileOptionalFormAllowed")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileOptionalFormAllowed([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/progress")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileProgress")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgressReport), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileProgress([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgressReport));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"numberOfApprovedHours\" : 0.8008281904610115,\r\n  \"numberOfActivities\" : 6,\r\n  \"numberOfExperiences\" : 1\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgressReport>(exampleJson)
            : default(ProgressReport);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/rolls-up-into-center-of-control")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileRollsUpIntoCenterOfControl")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProfileControllerRollsUpIntoCenterOfControlResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileRollsUpIntoCenterOfControl([FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProfileControllerRollsUpIntoCenterOfControlResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"rollsUpIntoCenterOfControl\" : true\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProfileControllerRollsUpIntoCenterOfControlResponse>(exampleJson)
            : default(ProfileControllerRollsUpIntoCenterOfControlResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="schools"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/profile/schools/{schools}/full")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1ProfileSchoolsBySchoolsFull")]
        [SwaggerResponse(statusCode: 200, type: typeof(FullSchool), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1ProfileSchoolsBySchoolsFull([FromRoute (Name = "schools")][Required]string schools, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FullSchool));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"notes\" : [ {\r\n    \"postedBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"postedBy\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    },\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"notes\" : \"notes\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"school\" : {\r\n    \"startingGrade\" : 0,\r\n    \"name\" : \"name\",\r\n    \"id\" : 1,\r\n    \"endingGrade\" : 6\r\n  },\r\n  \"students\" : [ {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FullSchool>(exampleJson)
            : default(FullSchool);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Teacher Profile
        /// </summary>
        /// <remarks>Teacher Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpGet]
        [Route("/Profile/api/consumer/v1/teacher/profile/{users}")]
        [ValidateModelState]
        [SwaggerOperation("GetProfileApiConsumerV1TeacherProfileByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(TeacherProfileResponse), description: "OK")]
        public virtual IActionResult GetProfileApiConsumerV1TeacherProfileByUsers([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TeacherProfileResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"basicUser\" : {\r\n    \"firstName\" : \"firstName\",\r\n    \"lastName\" : \"lastName\",\r\n    \"role\" : 1,\r\n    \"school\" : \"school\",\r\n    \"grade\" : 6,\r\n    \"id\" : 5,\r\n    \"profileImageUrl\" : \"profileImageUrl\",\r\n    \"email\" : \"email\"\r\n  },\r\n  \"entityPermissions\" : {\r\n    \"canCreateContacts\" : true,\r\n    \"canViewOrganizations\" : true,\r\n    \"canViewExperiences\" : true,\r\n    \"canViewContacts\" : true,\r\n    \"canCreateExperiences\" : true,\r\n    \"canCreateOrganizations\" : true,\r\n    \"canEditExperiences\" : true,\r\n    \"canEditOrganizations\" : true,\r\n    \"canEditContacts\" : true\r\n  },\r\n  \"submission\" : {\r\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"approvals\" : [ {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    }, {\r\n      \"parent\" : {\r\n        \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n        \"lastName\" : \"lastName\",\r\n        \"firstName\" : \"firstName\",\r\n        \"approved\" : true,\r\n        \"phone\" : \"phone\",\r\n        \"student_id\" : 5,\r\n        \"id\" : 5,\r\n        \"email\" : \"email\",\r\n        \"token\" : \"token\",\r\n        \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n      },\r\n      \"signatureImageUrl\" : \"signatureImageUrl\"\r\n    } ],\r\n    \"associatedUsers\" : [ {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    }, {\r\n      \"lastName\" : \"lastName\",\r\n      \"firstName\" : \"firstName\",\r\n      \"formSubmissionId\" : 6,\r\n      \"id\" : 0\r\n    } ],\r\n    \"id\" : 1,\r\n    \"fields\" : [ {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    }, {\r\n      \"attachedValue\" : {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      },\r\n      \"values\" : [ {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      }, {\r\n        \"id\" : 7,\r\n        \"value\" : \"value\"\r\n      } ],\r\n      \"name\" : \"name\",\r\n      \"formSubmissionFieldId\" : 9,\r\n      \"id\" : 2,\r\n      \"type\" : 3,\r\n      \"value\" : \"value\"\r\n    } ],\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  },\r\n  \"formResponse\" : {\r\n    \"externalToken\" : \"externalToken\",\r\n    \"description\" : \"description\",\r\n    \"canBeUsedByBusinessPartners\" : true,\r\n    \"appearsInMarketPlace\" : true,\r\n    \"premium\" : true,\r\n    \"name\" : \"name\",\r\n    \"files\" : [ {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    }, {\r\n      \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"deletedAt\" : \"2000-01-23T04:56:07.000+00:00\",\r\n      \"form_id\" : 0,\r\n      \"name\" : \"name\",\r\n      \"fileUrl\" : \"fileUrl\",\r\n      \"id\" : 6,\r\n      \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\"\r\n    } ],\r\n    \"id\" : 7,\r\n    \"canBeUsedInWorkflow\" : true,\r\n    \"fields\" : [ {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    }, {\r\n      \"allowsOtherField\" : true,\r\n      \"studentsCanViewOnEntity\" : true,\r\n      \"values\" : [ {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      }, {\r\n        \"id\" : 3,\r\n        \"value\" : \"value\",\r\n        \"order\" : 9\r\n      } ],\r\n      \"showToStudentsInExperience\" : true,\r\n      \"description\" : \"description\",\r\n      \"characterLimit\" : 2,\r\n      \"type\" : 5,\r\n      \"wordLimit\" : 2,\r\n      \"availableOnExternalEntityForm\" : true,\r\n      \"required\" : true,\r\n      \"hiddenFromSchoolAdminOnStudentProfile\" : true,\r\n      \"hiddenFromStaffOnStudentProfile\" : true,\r\n      \"conditionalDisplayValue\" : 1,\r\n      \"hiddenFromStudents\" : true,\r\n      \"name\" : \"name\",\r\n      \"id\" : 5,\r\n      \"maxMultiSelect\" : 7\r\n    } ],\r\n    \"approvalWorkflow\" : 4,\r\n    \"folder_id\" : 1,\r\n    \"user\" : {\r\n      \"firstName\" : \"firstName\",\r\n      \"lastName\" : \"lastName\",\r\n      \"role\" : 1,\r\n      \"school\" : \"school\",\r\n      \"grade\" : 6,\r\n      \"id\" : 5,\r\n      \"profileImageUrl\" : \"profileImageUrl\",\r\n      \"email\" : \"email\"\r\n    }\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TeacherProfileResponse>(exampleJson)
            : default(TeacherProfileResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="clusters"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/me/cluster/{clusters}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1MeClusterByClusters")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1MeClusterByClusters([FromRoute (Name = "clusters")][Required]string clusters, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="users"></param>
        /// <param name="updateStudentProfileDataRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/admin/update-profile/student/{users}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileAdminUpdateProfileStudentByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileAdminUpdateProfileStudentByUsers([FromRoute (Name = "users")][Required]string users, [FromBody]UpdateStudentProfileDataRequest updateStudentProfileDataRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="goal"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/{users}/overriden-serve-hours/{goal}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileByUsersOverridenServeHoursByGoal")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileByUsersOverridenServeHoursByGoal([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "goal")][Required]string goal, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="userParents"></param>
        /// <param name="editParentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/{users}/parent/{user_parents}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileByUsersParentByUserParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileByUsersParentByUserParents([FromRoute (Name = "users")][Required]string users, [FromRoute (Name = "user_parents")][Required]string userParents, [FromBody]EditParentRequest editParentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/{users}/update-demographics")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileByUsersUpdateDemographics")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileByUsersUpdateDemographics([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="clusters"></param>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile-cluster/{clusters}/{users}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileClusterByClustersByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileClusterByClustersByUsers([FromRoute (Name = "clusters")][Required]string clusters, [FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="user"></param>
        /// <param name="merge"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile-merge/{user}/merge-into/{merge}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileMergeByUserMergeIntoByMerge")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileMergeByUserMergeIntoByMerge([FromRoute (Name = "user")][Required]string user, [FromRoute (Name = "merge")][Required]string merge, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="formSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/optional-profile/{form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileOptionalProfileByFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileOptionalProfileByFormSubmissions([FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="formSubmissions"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/required-profile/{form_submissions}")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileRequiredProfileByFormSubmissions")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileRequiredProfileByFormSubmissions([FromRoute (Name = "form_submissions")][Required]string formSubmissions, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Profile
        /// </summary>
        /// <remarks>Profile</remarks>
        /// <param name="updatePasswordRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/profile/update-password")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1ProfileUpdatePassword")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1ProfileUpdatePassword([FromBody]UpdatePasswordRequest updatePasswordRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="userParents"></param>
        /// <param name="editParentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/student-profile/parent/{user_parents}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1StudentProfileParentByUserParents")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1StudentProfileParentByUserParents([FromRoute (Name = "user_parents")][Required]string userParents, [FromBody]EditParentRequest editParentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Teacher Profile
        /// </summary>
        /// <remarks>Teacher Profile</remarks>
        /// <param name="users"></param>
        /// <param name="updateTeacherDataRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPatch]
        [Route("/Profile/api/consumer/v1/teacher/profile/{users}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PatchProfileApiConsumerV1TeacherProfileByUsers")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PatchProfileApiConsumerV1TeacherProfileByUsers([FromRoute (Name = "users")][Required]string users, [FromBody]UpdateTeacherDataRequest updateTeacherDataRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="uploadFileToStudentProfileRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/file")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersFile")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersFile([FromRoute (Name = "users")][Required]string users, [FromBody]UploadFileToStudentProfileRequest uploadFileToStudentProfileRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/impersonation-token")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersImpersonationToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(LoginResponse), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersImpersonationToken([FromRoute (Name = "users")][Required]string users, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(LoginResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"school_id\" : 0,\r\n  \"district_id\" : 6,\r\n  \"token\" : \"token\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LoginResponse>(exampleJson)
            : default(LoginResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="addUserParentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/parent")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersParent")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersParent([FromRoute (Name = "users")][Required]string users, [FromBody]AddUserParentRequest addUserParentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="personalInfoRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/personal-info")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersPersonalInfo")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersPersonalInfo([FromRoute (Name = "users")][Required]string users, [FromBody]PersonalInfoRequest personalInfoRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="studentProfileEmailRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/send-email")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersSendEmail")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersSendEmail([FromRoute (Name = "users")][Required]string users, [FromBody]StudentProfileEmailRequest studentProfileEmailRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="users"></param>
        /// <param name="uploadTranscriptFileToStudentProfileRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/{users}/transcript")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileByUsersTranscript")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileByUsersTranscript([FromRoute (Name = "users")][Required]string users, [FromBody]UploadTranscriptFileToStudentProfileRequest uploadTranscriptFileToStudentProfileRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="uploadProfilePhotoRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/photo")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfilePhoto")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfilePhoto([FromBody]UploadProfilePhotoRequest uploadProfilePhotoRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Recipient List
        /// </summary>
        /// <remarks>Recipient List</remarks>
        /// <param name="schools"></param>
        /// <param name="addSchoolNoteRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile/schools/{schools}/notes")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileSchoolsBySchoolsNotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileSchoolsBySchoolsNotes([FromRoute (Name = "schools")][Required]string schools, [FromBody]AddSchoolNoteRequest addSchoolNoteRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="token"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/profile-verification/parent/{token}")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1ProfileVerificationParentByToken")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1ProfileVerificationParentByToken([FromRoute (Name = "token")][Required]string token)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Student Profile
        /// </summary>
        /// <remarks>Student Profile</remarks>
        /// <param name="addUserParentRequest"></param>
        /// <param name="authorization"></param>
        /// <response code="200">OK</response>
        /// <response code="404">Not found</response>
        [HttpPost]
        [Route("/Profile/api/consumer/v1/student-profile/parent")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PostProfileApiConsumerV1StudentProfileParent")]
        [SwaggerResponse(statusCode: 200, type: typeof(long), description: "OK")]
        public virtual IActionResult PostProfileApiConsumerV1StudentProfileParent([FromBody]AddUserParentRequest addUserParentRequest, [FromHeader (Name = "Authorization")]string authorization)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(long));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<long>(exampleJson)
            : default(long);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
