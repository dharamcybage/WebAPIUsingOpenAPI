/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class EvaluationDashboardResponse : IEquatable<EvaluationDashboardResponse>
    {
        /// <summary>
        /// Gets or Sets NumberEvaluationsCompleted
        /// </summary>
        [Required]
        [DataMember(Name="numberEvaluationsCompleted", EmitDefaultValue=true)]
        public long NumberEvaluationsCompleted { get; set; }

        /// <summary>
        /// Gets or Sets ExperienceId
        /// </summary>
        [Required]
        [DataMember(Name="experienceId", EmitDefaultValue=true)]
        public long ExperienceId { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [Required]
        [DataMember(Name="userId", EmitDefaultValue=true)]
        public long UserId { get; set; }

        /// <summary>
        /// Gets or Sets StudentName
        /// </summary>
        [Required]
        [DataMember(Name="studentName", EmitDefaultValue=false)]
        public string StudentName { get; set; }

        /// <summary>
        /// Gets or Sets ExperienceName
        /// </summary>
        [Required]
        [DataMember(Name="experienceName", EmitDefaultValue=false)]
        public string ExperienceName { get; set; }

        /// <summary>
        /// Gets or Sets StudentEmail
        /// </summary>
        [Required]
        [DataMember(Name="studentEmail", EmitDefaultValue=false)]
        public string StudentEmail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EvaluationDashboardResponse {\n");
            sb.Append("  NumberEvaluationsCompleted: ").Append(NumberEvaluationsCompleted).Append("\n");
            sb.Append("  ExperienceId: ").Append(ExperienceId).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  StudentName: ").Append(StudentName).Append("\n");
            sb.Append("  ExperienceName: ").Append(ExperienceName).Append("\n");
            sb.Append("  StudentEmail: ").Append(StudentEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((EvaluationDashboardResponse)obj);
        }

        /// <summary>
        /// Returns true if EvaluationDashboardResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of EvaluationDashboardResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EvaluationDashboardResponse other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    NumberEvaluationsCompleted == other.NumberEvaluationsCompleted ||
                    
                    NumberEvaluationsCompleted.Equals(other.NumberEvaluationsCompleted)
                ) && 
                (
                    ExperienceId == other.ExperienceId ||
                    
                    ExperienceId.Equals(other.ExperienceId)
                ) && 
                (
                    UserId == other.UserId ||
                    
                    UserId.Equals(other.UserId)
                ) && 
                (
                    StudentName == other.StudentName ||
                    StudentName != null &&
                    StudentName.Equals(other.StudentName)
                ) && 
                (
                    ExperienceName == other.ExperienceName ||
                    ExperienceName != null &&
                    ExperienceName.Equals(other.ExperienceName)
                ) && 
                (
                    StudentEmail == other.StudentEmail ||
                    StudentEmail != null &&
                    StudentEmail.Equals(other.StudentEmail)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + NumberEvaluationsCompleted.GetHashCode();
                    
                    hashCode = hashCode * 59 + ExperienceId.GetHashCode();
                    
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                    if (StudentName != null)
                    hashCode = hashCode * 59 + StudentName.GetHashCode();
                    if (ExperienceName != null)
                    hashCode = hashCode * 59 + ExperienceName.GetHashCode();
                    if (StudentEmail != null)
                    hashCode = hashCode * 59 + StudentEmail.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(EvaluationDashboardResponse left, EvaluationDashboardResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(EvaluationDashboardResponse left, EvaluationDashboardResponse right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
