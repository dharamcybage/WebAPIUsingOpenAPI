/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class PerkinsDashboardResponseStudentInfo : IEquatable<PerkinsDashboardResponseStudentInfo>
    {
        /// <summary>
        /// Gets or Sets StudentId
        /// </summary>
        [DataMember(Name="studentId", EmitDefaultValue=true)]
        public string StudentId { get; set; }

        /// <summary>
        /// Gets or Sets BlackOrAfricanAmerican
        /// </summary>
        [DataMember(Name="blackOrAfricanAmerican", EmitDefaultValue=true)]
        public bool? BlackOrAfricanAmerican { get; set; }

        /// <summary>
        /// Gets or Sets Grade
        /// </summary>
        [DataMember(Name="grade", EmitDefaultValue=true)]
        public long? Grade { get; set; }

        /// <summary>
        /// Gets or Sets NativeHawaiianOrOtherPacificIslander
        /// </summary>
        [DataMember(Name="nativeHawaiianOrOtherPacificIslander", EmitDefaultValue=true)]
        public bool? NativeHawaiianOrOtherPacificIslander { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Asian
        /// </summary>
        [DataMember(Name="asian", EmitDefaultValue=true)]
        public bool? Asian { get; set; }

        /// <summary>
        /// Gets or Sets AmericanIndianOrAlaskaNative
        /// </summary>
        [DataMember(Name="americanIndianOrAlaskaNative", EmitDefaultValue=true)]
        public bool? AmericanIndianOrAlaskaNative { get; set; }

        /// <summary>
        /// Gets or Sets SpecialPopulations
        /// </summary>
        [Required]
        [DataMember(Name="specialPopulations", EmitDefaultValue=false)]
        public List<long> SpecialPopulations { get; set; }

        /// <summary>
        /// Gets or Sets HispanicOrLatinoEthnicity
        /// </summary>
        [DataMember(Name="hispanicOrLatinoEthnicity", EmitDefaultValue=true)]
        public bool? HispanicOrLatinoEthnicity { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=true)]
        public long? Gender { get; set; }

        /// <summary>
        /// Gets or Sets ExperienceHours
        /// </summary>
        [Required]
        [DataMember(Name="experienceHours", EmitDefaultValue=false)]
        public List<PerkinsDashboardResponseStudentInfoExperienceHoursIntermediate> ExperienceHours { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [Required]
        [DataMember(Name="userId", EmitDefaultValue=true)]
        public long UserId { get; set; }

        /// <summary>
        /// Gets or Sets White
        /// </summary>
        [DataMember(Name="white", EmitDefaultValue=true)]
        public bool? White { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [Required]
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets CareerClusterName
        /// </summary>
        [DataMember(Name="careerClusterName", EmitDefaultValue=true)]
        public string CareerClusterName { get; set; }

        /// <summary>
        /// Gets or Sets SchoolName
        /// </summary>
        [Required]
        [DataMember(Name="schoolName", EmitDefaultValue=false)]
        public string SchoolName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PerkinsDashboardResponseStudentInfo {\n");
            sb.Append("  StudentId: ").Append(StudentId).Append("\n");
            sb.Append("  BlackOrAfricanAmerican: ").Append(BlackOrAfricanAmerican).Append("\n");
            sb.Append("  Grade: ").Append(Grade).Append("\n");
            sb.Append("  NativeHawaiianOrOtherPacificIslander: ").Append(NativeHawaiianOrOtherPacificIslander).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Asian: ").Append(Asian).Append("\n");
            sb.Append("  AmericanIndianOrAlaskaNative: ").Append(AmericanIndianOrAlaskaNative).Append("\n");
            sb.Append("  SpecialPopulations: ").Append(SpecialPopulations).Append("\n");
            sb.Append("  HispanicOrLatinoEthnicity: ").Append(HispanicOrLatinoEthnicity).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  ExperienceHours: ").Append(ExperienceHours).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  White: ").Append(White).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  CareerClusterName: ").Append(CareerClusterName).Append("\n");
            sb.Append("  SchoolName: ").Append(SchoolName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((PerkinsDashboardResponseStudentInfo)obj);
        }

        /// <summary>
        /// Returns true if PerkinsDashboardResponseStudentInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of PerkinsDashboardResponseStudentInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PerkinsDashboardResponseStudentInfo other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    StudentId == other.StudentId ||
                    StudentId != null &&
                    StudentId.Equals(other.StudentId)
                ) && 
                (
                    BlackOrAfricanAmerican == other.BlackOrAfricanAmerican ||
                    BlackOrAfricanAmerican != null &&
                    BlackOrAfricanAmerican.Equals(other.BlackOrAfricanAmerican)
                ) && 
                (
                    Grade == other.Grade ||
                    Grade != null &&
                    Grade.Equals(other.Grade)
                ) && 
                (
                    NativeHawaiianOrOtherPacificIslander == other.NativeHawaiianOrOtherPacificIslander ||
                    NativeHawaiianOrOtherPacificIslander != null &&
                    NativeHawaiianOrOtherPacificIslander.Equals(other.NativeHawaiianOrOtherPacificIslander)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Asian == other.Asian ||
                    Asian != null &&
                    Asian.Equals(other.Asian)
                ) && 
                (
                    AmericanIndianOrAlaskaNative == other.AmericanIndianOrAlaskaNative ||
                    AmericanIndianOrAlaskaNative != null &&
                    AmericanIndianOrAlaskaNative.Equals(other.AmericanIndianOrAlaskaNative)
                ) && 
                (
                    SpecialPopulations == other.SpecialPopulations ||
                    SpecialPopulations != null &&
                    other.SpecialPopulations != null &&
                    SpecialPopulations.SequenceEqual(other.SpecialPopulations)
                ) && 
                (
                    HispanicOrLatinoEthnicity == other.HispanicOrLatinoEthnicity ||
                    HispanicOrLatinoEthnicity != null &&
                    HispanicOrLatinoEthnicity.Equals(other.HispanicOrLatinoEthnicity)
                ) && 
                (
                    Gender == other.Gender ||
                    Gender != null &&
                    Gender.Equals(other.Gender)
                ) && 
                (
                    ExperienceHours == other.ExperienceHours ||
                    ExperienceHours != null &&
                    other.ExperienceHours != null &&
                    ExperienceHours.SequenceEqual(other.ExperienceHours)
                ) && 
                (
                    UserId == other.UserId ||
                    
                    UserId.Equals(other.UserId)
                ) && 
                (
                    White == other.White ||
                    White != null &&
                    White.Equals(other.White)
                ) && 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    CareerClusterName == other.CareerClusterName ||
                    CareerClusterName != null &&
                    CareerClusterName.Equals(other.CareerClusterName)
                ) && 
                (
                    SchoolName == other.SchoolName ||
                    SchoolName != null &&
                    SchoolName.Equals(other.SchoolName)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (StudentId != null)
                    hashCode = hashCode * 59 + StudentId.GetHashCode();
                    if (BlackOrAfricanAmerican != null)
                    hashCode = hashCode * 59 + BlackOrAfricanAmerican.GetHashCode();
                    if (Grade != null)
                    hashCode = hashCode * 59 + Grade.GetHashCode();
                    if (NativeHawaiianOrOtherPacificIslander != null)
                    hashCode = hashCode * 59 + NativeHawaiianOrOtherPacificIslander.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (Asian != null)
                    hashCode = hashCode * 59 + Asian.GetHashCode();
                    if (AmericanIndianOrAlaskaNative != null)
                    hashCode = hashCode * 59 + AmericanIndianOrAlaskaNative.GetHashCode();
                    if (SpecialPopulations != null)
                    hashCode = hashCode * 59 + SpecialPopulations.GetHashCode();
                    if (HispanicOrLatinoEthnicity != null)
                    hashCode = hashCode * 59 + HispanicOrLatinoEthnicity.GetHashCode();
                    if (Gender != null)
                    hashCode = hashCode * 59 + Gender.GetHashCode();
                    if (ExperienceHours != null)
                    hashCode = hashCode * 59 + ExperienceHours.GetHashCode();
                    
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                    if (White != null)
                    hashCode = hashCode * 59 + White.GetHashCode();
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (CareerClusterName != null)
                    hashCode = hashCode * 59 + CareerClusterName.GetHashCode();
                    if (SchoolName != null)
                    hashCode = hashCode * 59 + SchoolName.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(PerkinsDashboardResponseStudentInfo left, PerkinsDashboardResponseStudentInfo right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(PerkinsDashboardResponseStudentInfo left, PerkinsDashboardResponseStudentInfo right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
