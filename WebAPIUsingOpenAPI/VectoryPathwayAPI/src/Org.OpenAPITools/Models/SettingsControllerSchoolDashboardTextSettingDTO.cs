/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SettingsControllerSchoolDashboardTextSettingDTO : IEquatable<SettingsControllerSchoolDashboardTextSettingDTO>
    {
        /// <summary>
        /// Gets or Sets SchoolName
        /// </summary>
        [DataMember(Name="schoolName", EmitDefaultValue=true)]
        public string SchoolName { get; set; }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [Required]
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets SchoolId
        /// </summary>
        [Required]
        [DataMember(Name="schoolId", EmitDefaultValue=true)]
        public long SchoolId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SettingsControllerSchoolDashboardTextSettingDTO {\n");
            sb.Append("  SchoolName: ").Append(SchoolName).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  SchoolId: ").Append(SchoolId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SettingsControllerSchoolDashboardTextSettingDTO)obj);
        }

        /// <summary>
        /// Returns true if SettingsControllerSchoolDashboardTextSettingDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of SettingsControllerSchoolDashboardTextSettingDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SettingsControllerSchoolDashboardTextSettingDTO other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    SchoolName == other.SchoolName ||
                    SchoolName != null &&
                    SchoolName.Equals(other.SchoolName)
                ) && 
                (
                    Text == other.Text ||
                    Text != null &&
                    Text.Equals(other.Text)
                ) && 
                (
                    SchoolId == other.SchoolId ||
                    
                    SchoolId.Equals(other.SchoolId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (SchoolName != null)
                    hashCode = hashCode * 59 + SchoolName.GetHashCode();
                    if (Text != null)
                    hashCode = hashCode * 59 + Text.GetHashCode();
                    
                    hashCode = hashCode * 59 + SchoolId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SettingsControllerSchoolDashboardTextSettingDTO left, SettingsControllerSchoolDashboardTextSettingDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SettingsControllerSchoolDashboardTextSettingDTO left, SettingsControllerSchoolDashboardTextSettingDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
