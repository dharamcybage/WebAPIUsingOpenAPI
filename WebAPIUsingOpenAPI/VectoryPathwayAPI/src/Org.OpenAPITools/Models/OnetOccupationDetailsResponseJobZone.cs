/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class OnetOccupationDetailsResponseJobZone : IEquatable<OnetOccupationDetailsResponseJobZone>
    {
        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [Required]
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [Required]
        [DataMember(Name="value", EmitDefaultValue=true)]
        public long Value { get; set; }

        /// <summary>
        /// Gets or Sets Education
        /// </summary>
        [Required]
        [DataMember(Name="education", EmitDefaultValue=false)]
        public string Education { get; set; }

        /// <summary>
        /// Gets or Sets RelatedExperience
        /// </summary>
        [Required]
        [DataMember(Name="related_experience", EmitDefaultValue=false)]
        public string RelatedExperience { get; set; }

        /// <summary>
        /// Gets or Sets JobTraining
        /// </summary>
        [Required]
        [DataMember(Name="job_training", EmitDefaultValue=false)]
        public string JobTraining { get; set; }

        /// <summary>
        /// Gets or Sets JobZoneExamples
        /// </summary>
        [Required]
        [DataMember(Name="job_zone_examples", EmitDefaultValue=false)]
        public string JobZoneExamples { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OnetOccupationDetailsResponseJobZone {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Education: ").Append(Education).Append("\n");
            sb.Append("  RelatedExperience: ").Append(RelatedExperience).Append("\n");
            sb.Append("  JobTraining: ").Append(JobTraining).Append("\n");
            sb.Append("  JobZoneExamples: ").Append(JobZoneExamples).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((OnetOccupationDetailsResponseJobZone)obj);
        }

        /// <summary>
        /// Returns true if OnetOccupationDetailsResponseJobZone instances are equal
        /// </summary>
        /// <param name="other">Instance of OnetOccupationDetailsResponseJobZone to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OnetOccupationDetailsResponseJobZone other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Title == other.Title ||
                    Title != null &&
                    Title.Equals(other.Title)
                ) && 
                (
                    Value == other.Value ||
                    
                    Value.Equals(other.Value)
                ) && 
                (
                    Education == other.Education ||
                    Education != null &&
                    Education.Equals(other.Education)
                ) && 
                (
                    RelatedExperience == other.RelatedExperience ||
                    RelatedExperience != null &&
                    RelatedExperience.Equals(other.RelatedExperience)
                ) && 
                (
                    JobTraining == other.JobTraining ||
                    JobTraining != null &&
                    JobTraining.Equals(other.JobTraining)
                ) && 
                (
                    JobZoneExamples == other.JobZoneExamples ||
                    JobZoneExamples != null &&
                    JobZoneExamples.Equals(other.JobZoneExamples)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Title != null)
                    hashCode = hashCode * 59 + Title.GetHashCode();
                    
                    hashCode = hashCode * 59 + Value.GetHashCode();
                    if (Education != null)
                    hashCode = hashCode * 59 + Education.GetHashCode();
                    if (RelatedExperience != null)
                    hashCode = hashCode * 59 + RelatedExperience.GetHashCode();
                    if (JobTraining != null)
                    hashCode = hashCode * 59 + JobTraining.GetHashCode();
                    if (JobZoneExamples != null)
                    hashCode = hashCode * 59 + JobZoneExamples.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(OnetOccupationDetailsResponseJobZone left, OnetOccupationDetailsResponseJobZone right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(OnetOccupationDetailsResponseJobZone left, OnetOccupationDetailsResponseJobZone right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
