/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SettingsTestScoreConfiguration : IEquatable<SettingsTestScoreConfiguration>
    {
        /// <summary>
        /// Gets or Sets UnweightedGpaFieldId
        /// </summary>
        [DataMember(Name="unweightedGpaFieldId", EmitDefaultValue=true)]
        public long? UnweightedGpaFieldId { get; set; }

        /// <summary>
        /// Gets or Sets SatTestId
        /// </summary>
        [DataMember(Name="satTestId", EmitDefaultValue=true)]
        public long? SatTestId { get; set; }

        /// <summary>
        /// Gets or Sets ActFieldId
        /// </summary>
        [DataMember(Name="actFieldId", EmitDefaultValue=true)]
        public long? ActFieldId { get; set; }

        /// <summary>
        /// Gets or Sets ActTestId
        /// </summary>
        [DataMember(Name="actTestId", EmitDefaultValue=true)]
        public long? ActTestId { get; set; }

        /// <summary>
        /// Gets or Sets WeightedGpaTestId
        /// </summary>
        [DataMember(Name="weightedGpaTestId", EmitDefaultValue=true)]
        public long? WeightedGpaTestId { get; set; }

        /// <summary>
        /// Gets or Sets WeightedGpaFieldId
        /// </summary>
        [DataMember(Name="weightedGpaFieldId", EmitDefaultValue=true)]
        public long? WeightedGpaFieldId { get; set; }

        /// <summary>
        /// Gets or Sets SatFieldId
        /// </summary>
        [DataMember(Name="satFieldId", EmitDefaultValue=true)]
        public long? SatFieldId { get; set; }

        /// <summary>
        /// Gets or Sets UnweightedGpaTestId
        /// </summary>
        [DataMember(Name="unweightedGpaTestId", EmitDefaultValue=true)]
        public long? UnweightedGpaTestId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SettingsTestScoreConfiguration {\n");
            sb.Append("  UnweightedGpaFieldId: ").Append(UnweightedGpaFieldId).Append("\n");
            sb.Append("  SatTestId: ").Append(SatTestId).Append("\n");
            sb.Append("  ActFieldId: ").Append(ActFieldId).Append("\n");
            sb.Append("  ActTestId: ").Append(ActTestId).Append("\n");
            sb.Append("  WeightedGpaTestId: ").Append(WeightedGpaTestId).Append("\n");
            sb.Append("  WeightedGpaFieldId: ").Append(WeightedGpaFieldId).Append("\n");
            sb.Append("  SatFieldId: ").Append(SatFieldId).Append("\n");
            sb.Append("  UnweightedGpaTestId: ").Append(UnweightedGpaTestId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SettingsTestScoreConfiguration)obj);
        }

        /// <summary>
        /// Returns true if SettingsTestScoreConfiguration instances are equal
        /// </summary>
        /// <param name="other">Instance of SettingsTestScoreConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SettingsTestScoreConfiguration other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    UnweightedGpaFieldId == other.UnweightedGpaFieldId ||
                    UnweightedGpaFieldId != null &&
                    UnweightedGpaFieldId.Equals(other.UnweightedGpaFieldId)
                ) && 
                (
                    SatTestId == other.SatTestId ||
                    SatTestId != null &&
                    SatTestId.Equals(other.SatTestId)
                ) && 
                (
                    ActFieldId == other.ActFieldId ||
                    ActFieldId != null &&
                    ActFieldId.Equals(other.ActFieldId)
                ) && 
                (
                    ActTestId == other.ActTestId ||
                    ActTestId != null &&
                    ActTestId.Equals(other.ActTestId)
                ) && 
                (
                    WeightedGpaTestId == other.WeightedGpaTestId ||
                    WeightedGpaTestId != null &&
                    WeightedGpaTestId.Equals(other.WeightedGpaTestId)
                ) && 
                (
                    WeightedGpaFieldId == other.WeightedGpaFieldId ||
                    WeightedGpaFieldId != null &&
                    WeightedGpaFieldId.Equals(other.WeightedGpaFieldId)
                ) && 
                (
                    SatFieldId == other.SatFieldId ||
                    SatFieldId != null &&
                    SatFieldId.Equals(other.SatFieldId)
                ) && 
                (
                    UnweightedGpaTestId == other.UnweightedGpaTestId ||
                    UnweightedGpaTestId != null &&
                    UnweightedGpaTestId.Equals(other.UnweightedGpaTestId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (UnweightedGpaFieldId != null)
                    hashCode = hashCode * 59 + UnweightedGpaFieldId.GetHashCode();
                    if (SatTestId != null)
                    hashCode = hashCode * 59 + SatTestId.GetHashCode();
                    if (ActFieldId != null)
                    hashCode = hashCode * 59 + ActFieldId.GetHashCode();
                    if (ActTestId != null)
                    hashCode = hashCode * 59 + ActTestId.GetHashCode();
                    if (WeightedGpaTestId != null)
                    hashCode = hashCode * 59 + WeightedGpaTestId.GetHashCode();
                    if (WeightedGpaFieldId != null)
                    hashCode = hashCode * 59 + WeightedGpaFieldId.GetHashCode();
                    if (SatFieldId != null)
                    hashCode = hashCode * 59 + SatFieldId.GetHashCode();
                    if (UnweightedGpaTestId != null)
                    hashCode = hashCode * 59 + UnweightedGpaTestId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SettingsTestScoreConfiguration left, SettingsTestScoreConfiguration right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SettingsTestScoreConfiguration left, SettingsTestScoreConfiguration right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
