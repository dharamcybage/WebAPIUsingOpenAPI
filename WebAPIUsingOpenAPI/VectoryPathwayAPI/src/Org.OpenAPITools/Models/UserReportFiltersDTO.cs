/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class UserReportFiltersDTO : IEquatable<UserReportFiltersDTO>
    {
        /// <summary>
        /// Gets or Sets ExperienceReportFilter
        /// </summary>
        [DataMember(Name="experienceReportFilter", EmitDefaultValue=true)]
        public long? ExperienceReportFilter { get; set; }

        /// <summary>
        /// Gets or Sets CourseReportFilter
        /// </summary>
        [DataMember(Name="courseReportFilter", EmitDefaultValue=true)]
        public long? CourseReportFilter { get; set; }

        /// <summary>
        /// Gets or Sets ExperienceApplicationReportFilter
        /// </summary>
        [DataMember(Name="experienceApplicationReportFilter", EmitDefaultValue=true)]
        public long? ExperienceApplicationReportFilter { get; set; }

        /// <summary>
        /// Gets or Sets OrgReportFilter
        /// </summary>
        [DataMember(Name="orgReportFilter", EmitDefaultValue=true)]
        public long? OrgReportFilter { get; set; }

        /// <summary>
        /// Gets or Sets StudentReportFilter
        /// </summary>
        [DataMember(Name="studentReportFilter", EmitDefaultValue=true)]
        public long? StudentReportFilter { get; set; }

        /// <summary>
        /// Gets or Sets ContactReportFilter
        /// </summary>
        [DataMember(Name="contactReportFilter", EmitDefaultValue=true)]
        public long? ContactReportFilter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserReportFiltersDTO {\n");
            sb.Append("  ExperienceReportFilter: ").Append(ExperienceReportFilter).Append("\n");
            sb.Append("  CourseReportFilter: ").Append(CourseReportFilter).Append("\n");
            sb.Append("  ExperienceApplicationReportFilter: ").Append(ExperienceApplicationReportFilter).Append("\n");
            sb.Append("  OrgReportFilter: ").Append(OrgReportFilter).Append("\n");
            sb.Append("  StudentReportFilter: ").Append(StudentReportFilter).Append("\n");
            sb.Append("  ContactReportFilter: ").Append(ContactReportFilter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((UserReportFiltersDTO)obj);
        }

        /// <summary>
        /// Returns true if UserReportFiltersDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of UserReportFiltersDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserReportFiltersDTO other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ExperienceReportFilter == other.ExperienceReportFilter ||
                    ExperienceReportFilter != null &&
                    ExperienceReportFilter.Equals(other.ExperienceReportFilter)
                ) && 
                (
                    CourseReportFilter == other.CourseReportFilter ||
                    CourseReportFilter != null &&
                    CourseReportFilter.Equals(other.CourseReportFilter)
                ) && 
                (
                    ExperienceApplicationReportFilter == other.ExperienceApplicationReportFilter ||
                    ExperienceApplicationReportFilter != null &&
                    ExperienceApplicationReportFilter.Equals(other.ExperienceApplicationReportFilter)
                ) && 
                (
                    OrgReportFilter == other.OrgReportFilter ||
                    OrgReportFilter != null &&
                    OrgReportFilter.Equals(other.OrgReportFilter)
                ) && 
                (
                    StudentReportFilter == other.StudentReportFilter ||
                    StudentReportFilter != null &&
                    StudentReportFilter.Equals(other.StudentReportFilter)
                ) && 
                (
                    ContactReportFilter == other.ContactReportFilter ||
                    ContactReportFilter != null &&
                    ContactReportFilter.Equals(other.ContactReportFilter)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ExperienceReportFilter != null)
                    hashCode = hashCode * 59 + ExperienceReportFilter.GetHashCode();
                    if (CourseReportFilter != null)
                    hashCode = hashCode * 59 + CourseReportFilter.GetHashCode();
                    if (ExperienceApplicationReportFilter != null)
                    hashCode = hashCode * 59 + ExperienceApplicationReportFilter.GetHashCode();
                    if (OrgReportFilter != null)
                    hashCode = hashCode * 59 + OrgReportFilter.GetHashCode();
                    if (StudentReportFilter != null)
                    hashCode = hashCode * 59 + StudentReportFilter.GetHashCode();
                    if (ContactReportFilter != null)
                    hashCode = hashCode * 59 + ContactReportFilter.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(UserReportFiltersDTO left, UserReportFiltersDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(UserReportFiltersDTO left, UserReportFiltersDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
