/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TranseoAdminPortalDistrictResponseDistrict : IEquatable<TranseoAdminPortalDistrictResponseDistrict>
    {
        /// <summary>
        /// Gets or Sets NumberOfDistrictAdministrators
        /// </summary>
        [Required]
        [DataMember(Name="numberOfDistrictAdministrators", EmitDefaultValue=true)]
        public long NumberOfDistrictAdministrators { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets StudentInformationSystem
        /// </summary>
        [Required]
        [DataMember(Name="studentInformationSystem", EmitDefaultValue=false)]
        public DistrictSISDTO StudentInformationSystem { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=true)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets NcesID
        /// </summary>
        [Required]
        [DataMember(Name="ncesID", EmitDefaultValue=false)]
        public string NcesID { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfSuperUsers
        /// </summary>
        [Required]
        [DataMember(Name="numberOfSuperUsers", EmitDefaultValue=true)]
        public long NumberOfSuperUsers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TranseoAdminPortalDistrictResponseDistrict {\n");
            sb.Append("  NumberOfDistrictAdministrators: ").Append(NumberOfDistrictAdministrators).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  StudentInformationSystem: ").Append(StudentInformationSystem).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  NcesID: ").Append(NcesID).Append("\n");
            sb.Append("  NumberOfSuperUsers: ").Append(NumberOfSuperUsers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TranseoAdminPortalDistrictResponseDistrict)obj);
        }

        /// <summary>
        /// Returns true if TranseoAdminPortalDistrictResponseDistrict instances are equal
        /// </summary>
        /// <param name="other">Instance of TranseoAdminPortalDistrictResponseDistrict to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TranseoAdminPortalDistrictResponseDistrict other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    NumberOfDistrictAdministrators == other.NumberOfDistrictAdministrators ||
                    
                    NumberOfDistrictAdministrators.Equals(other.NumberOfDistrictAdministrators)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    StudentInformationSystem == other.StudentInformationSystem ||
                    StudentInformationSystem != null &&
                    StudentInformationSystem.Equals(other.StudentInformationSystem)
                ) && 
                (
                    Id == other.Id ||
                    
                    Id.Equals(other.Id)
                ) && 
                (
                    NcesID == other.NcesID ||
                    NcesID != null &&
                    NcesID.Equals(other.NcesID)
                ) && 
                (
                    NumberOfSuperUsers == other.NumberOfSuperUsers ||
                    
                    NumberOfSuperUsers.Equals(other.NumberOfSuperUsers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + NumberOfDistrictAdministrators.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (StudentInformationSystem != null)
                    hashCode = hashCode * 59 + StudentInformationSystem.GetHashCode();
                    
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (NcesID != null)
                    hashCode = hashCode * 59 + NcesID.GetHashCode();
                    
                    hashCode = hashCode * 59 + NumberOfSuperUsers.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(TranseoAdminPortalDistrictResponseDistrict left, TranseoAdminPortalDistrictResponseDistrict right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TranseoAdminPortalDistrictResponseDistrict left, TranseoAdminPortalDistrictResponseDistrict right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
