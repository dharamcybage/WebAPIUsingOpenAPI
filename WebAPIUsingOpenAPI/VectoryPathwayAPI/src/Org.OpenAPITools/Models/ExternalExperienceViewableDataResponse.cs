/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ExternalExperienceViewableDataResponse : IEquatable<ExternalExperienceViewableDataResponse>
    {
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByFirstName
        /// </summary>
        [Required]
        [DataMember(Name="createdByFirstName", EmitDefaultValue=false)]
        public string CreatedByFirstName { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByEmail
        /// </summary>
        [Required]
        [DataMember(Name="createdByEmail", EmitDefaultValue=false)]
        public string CreatedByEmail { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=true)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="createdAt", EmitDefaultValue=true)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets OrgExternalInputId
        /// </summary>
        [DataMember(Name="org_external_input_id", EmitDefaultValue=true)]
        public long? OrgExternalInputId { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfSpots
        /// </summary>
        [DataMember(Name="numberOfSpots", EmitDefaultValue=true)]
        public long? NumberOfSpots { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [Required]
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name="contact_id", EmitDefaultValue=true)]
        public long? ContactId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByLastName
        /// </summary>
        [Required]
        [DataMember(Name="createdByLastName", EmitDefaultValue=false)]
        public string CreatedByLastName { get; set; }

        /// <summary>
        /// Gets or Sets OrgId
        /// </summary>
        [DataMember(Name="org_id", EmitDefaultValue=true)]
        public long? OrgId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ExternalExperienceViewableDataResponse {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreatedByFirstName: ").Append(CreatedByFirstName).Append("\n");
            sb.Append("  CreatedByEmail: ").Append(CreatedByEmail).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  OrgExternalInputId: ").Append(OrgExternalInputId).Append("\n");
            sb.Append("  NumberOfSpots: ").Append(NumberOfSpots).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  CreatedByLastName: ").Append(CreatedByLastName).Append("\n");
            sb.Append("  OrgId: ").Append(OrgId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ExternalExperienceViewableDataResponse)obj);
        }

        /// <summary>
        /// Returns true if ExternalExperienceViewableDataResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of ExternalExperienceViewableDataResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExternalExperienceViewableDataResponse other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    CreatedByFirstName == other.CreatedByFirstName ||
                    CreatedByFirstName != null &&
                    CreatedByFirstName.Equals(other.CreatedByFirstName)
                ) && 
                (
                    CreatedByEmail == other.CreatedByEmail ||
                    CreatedByEmail != null &&
                    CreatedByEmail.Equals(other.CreatedByEmail)
                ) && 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    CreatedAt == other.CreatedAt ||
                    CreatedAt != null &&
                    CreatedAt.Equals(other.CreatedAt)
                ) && 
                (
                    OrgExternalInputId == other.OrgExternalInputId ||
                    OrgExternalInputId != null &&
                    OrgExternalInputId.Equals(other.OrgExternalInputId)
                ) && 
                (
                    NumberOfSpots == other.NumberOfSpots ||
                    NumberOfSpots != null &&
                    NumberOfSpots.Equals(other.NumberOfSpots)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    ContactId == other.ContactId ||
                    ContactId != null &&
                    ContactId.Equals(other.ContactId)
                ) && 
                (
                    CreatedByLastName == other.CreatedByLastName ||
                    CreatedByLastName != null &&
                    CreatedByLastName.Equals(other.CreatedByLastName)
                ) && 
                (
                    OrgId == other.OrgId ||
                    OrgId != null &&
                    OrgId.Equals(other.OrgId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (CreatedByFirstName != null)
                    hashCode = hashCode * 59 + CreatedByFirstName.GetHashCode();
                    if (CreatedByEmail != null)
                    hashCode = hashCode * 59 + CreatedByEmail.GetHashCode();
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (CreatedAt != null)
                    hashCode = hashCode * 59 + CreatedAt.GetHashCode();
                    if (OrgExternalInputId != null)
                    hashCode = hashCode * 59 + OrgExternalInputId.GetHashCode();
                    if (NumberOfSpots != null)
                    hashCode = hashCode * 59 + NumberOfSpots.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (ContactId != null)
                    hashCode = hashCode * 59 + ContactId.GetHashCode();
                    if (CreatedByLastName != null)
                    hashCode = hashCode * 59 + CreatedByLastName.GetHashCode();
                    if (OrgId != null)
                    hashCode = hashCode * 59 + OrgId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ExternalExperienceViewableDataResponse left, ExternalExperienceViewableDataResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ExternalExperienceViewableDataResponse left, ExternalExperienceViewableDataResponse right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
