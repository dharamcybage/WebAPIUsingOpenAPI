/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IllinoisCCRIDashboardResponseData : IEquatable<IllinoisCCRIDashboardResponseData>
    {
        /// <summary>
        /// Gets or Sets PercentCompletedThreeOrMore
        /// </summary>
        [Required]
        [DataMember(Name="percentCompletedThreeOrMore", EmitDefaultValue=false)]
        public IllinoisCCRIDashboardResponseDataPercentBreakdown PercentCompletedThreeOrMore { get; set; }

        /// <summary>
        /// Gets or Sets AllUsers
        /// </summary>
        [Required]
        [DataMember(Name="allUsers", EmitDefaultValue=false)]
        public List<UserBadgeProgressData> AllUsers { get; set; }

        /// <summary>
        /// Gets or Sets Users
        /// </summary>
        [Required]
        [DataMember(Name="users", EmitDefaultValue=false)]
        public List<IllinoisCCRIDashboardResponseDataUserData> Users { get; set; }

        /// <summary>
        /// Gets or Sets CcriBreakdown
        /// </summary>
        [Required]
        [DataMember(Name="ccriBreakdown", EmitDefaultValue=false)]
        public List<IllinoisCCRIDashboardResponseDataCCRIBreakdown> CcriBreakdown { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfCompletions
        /// </summary>
        [Required]
        [DataMember(Name="numberOfCompletions", EmitDefaultValue=false)]
        public List<IllinoisCCRIDashboardResponseDataNumberOfCompletion> NumberOfCompletions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IllinoisCCRIDashboardResponseData {\n");
            sb.Append("  PercentCompletedThreeOrMore: ").Append(PercentCompletedThreeOrMore).Append("\n");
            sb.Append("  AllUsers: ").Append(AllUsers).Append("\n");
            sb.Append("  Users: ").Append(Users).Append("\n");
            sb.Append("  CcriBreakdown: ").Append(CcriBreakdown).Append("\n");
            sb.Append("  NumberOfCompletions: ").Append(NumberOfCompletions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((IllinoisCCRIDashboardResponseData)obj);
        }

        /// <summary>
        /// Returns true if IllinoisCCRIDashboardResponseData instances are equal
        /// </summary>
        /// <param name="other">Instance of IllinoisCCRIDashboardResponseData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IllinoisCCRIDashboardResponseData other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    PercentCompletedThreeOrMore == other.PercentCompletedThreeOrMore ||
                    PercentCompletedThreeOrMore != null &&
                    PercentCompletedThreeOrMore.Equals(other.PercentCompletedThreeOrMore)
                ) && 
                (
                    AllUsers == other.AllUsers ||
                    AllUsers != null &&
                    other.AllUsers != null &&
                    AllUsers.SequenceEqual(other.AllUsers)
                ) && 
                (
                    Users == other.Users ||
                    Users != null &&
                    other.Users != null &&
                    Users.SequenceEqual(other.Users)
                ) && 
                (
                    CcriBreakdown == other.CcriBreakdown ||
                    CcriBreakdown != null &&
                    other.CcriBreakdown != null &&
                    CcriBreakdown.SequenceEqual(other.CcriBreakdown)
                ) && 
                (
                    NumberOfCompletions == other.NumberOfCompletions ||
                    NumberOfCompletions != null &&
                    other.NumberOfCompletions != null &&
                    NumberOfCompletions.SequenceEqual(other.NumberOfCompletions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (PercentCompletedThreeOrMore != null)
                    hashCode = hashCode * 59 + PercentCompletedThreeOrMore.GetHashCode();
                    if (AllUsers != null)
                    hashCode = hashCode * 59 + AllUsers.GetHashCode();
                    if (Users != null)
                    hashCode = hashCode * 59 + Users.GetHashCode();
                    if (CcriBreakdown != null)
                    hashCode = hashCode * 59 + CcriBreakdown.GetHashCode();
                    if (NumberOfCompletions != null)
                    hashCode = hashCode * 59 + NumberOfCompletions.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(IllinoisCCRIDashboardResponseData left, IllinoisCCRIDashboardResponseData right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IllinoisCCRIDashboardResponseData left, IllinoisCCRIDashboardResponseData right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
