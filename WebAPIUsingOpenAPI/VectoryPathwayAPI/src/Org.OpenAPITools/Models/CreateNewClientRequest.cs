/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CreateNewClientRequest : IEquatable<CreateNewClientRequest>
    {
        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [Required]
        [DataMember(Name="products", EmitDefaultValue=false)]
        public List<DistrictProductProduct> Products { get; set; }

        /// <summary>
        /// Gets or Sets SuperUserCanAlsoViewPlatform
        /// </summary>
        [DataMember(Name="superUserCanAlsoViewPlatform", EmitDefaultValue=true)]
        public bool? SuperUserCanAlsoViewPlatform { get; set; }

        /// <summary>
        /// Gets or Sets SupportOrgId
        /// </summary>
        [DataMember(Name="supportOrgId", EmitDefaultValue=true)]
        public long? SupportOrgId { get; set; }

        /// <summary>
        /// Gets or Sets Districts
        /// </summary>
        [Required]
        [DataMember(Name="districts", EmitDefaultValue=false)]
        public List<CreateNewClientRequestDistrict> Districts { get; set; }

        /// <summary>
        /// Gets or Sets SupportOrg
        /// </summary>
        [DataMember(Name="supportOrg", EmitDefaultValue=false)]
        public CreateNewClientRequestSupportOrg SupportOrg { get; set; }

        /// <summary>
        /// Gets or Sets DistrictContact
        /// </summary>
        [Required]
        [DataMember(Name="districtContact", EmitDefaultValue=false)]
        public CreateNewClientRequestDistrictContact DistrictContact { get; set; }

        /// <summary>
        /// Gets or Sets SendEmail
        /// </summary>
        [Required]
        [DataMember(Name="sendEmail", EmitDefaultValue=true)]
        public bool SendEmail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateNewClientRequest {\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  SuperUserCanAlsoViewPlatform: ").Append(SuperUserCanAlsoViewPlatform).Append("\n");
            sb.Append("  SupportOrgId: ").Append(SupportOrgId).Append("\n");
            sb.Append("  Districts: ").Append(Districts).Append("\n");
            sb.Append("  SupportOrg: ").Append(SupportOrg).Append("\n");
            sb.Append("  DistrictContact: ").Append(DistrictContact).Append("\n");
            sb.Append("  SendEmail: ").Append(SendEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CreateNewClientRequest)obj);
        }

        /// <summary>
        /// Returns true if CreateNewClientRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateNewClientRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateNewClientRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Products == other.Products ||
                    Products != null &&
                    other.Products != null &&
                    Products.SequenceEqual(other.Products)
                ) && 
                (
                    SuperUserCanAlsoViewPlatform == other.SuperUserCanAlsoViewPlatform ||
                    SuperUserCanAlsoViewPlatform != null &&
                    SuperUserCanAlsoViewPlatform.Equals(other.SuperUserCanAlsoViewPlatform)
                ) && 
                (
                    SupportOrgId == other.SupportOrgId ||
                    SupportOrgId != null &&
                    SupportOrgId.Equals(other.SupportOrgId)
                ) && 
                (
                    Districts == other.Districts ||
                    Districts != null &&
                    other.Districts != null &&
                    Districts.SequenceEqual(other.Districts)
                ) && 
                (
                    SupportOrg == other.SupportOrg ||
                    SupportOrg != null &&
                    SupportOrg.Equals(other.SupportOrg)
                ) && 
                (
                    DistrictContact == other.DistrictContact ||
                    DistrictContact != null &&
                    DistrictContact.Equals(other.DistrictContact)
                ) && 
                (
                    SendEmail == other.SendEmail ||
                    
                    SendEmail.Equals(other.SendEmail)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Products != null)
                    hashCode = hashCode * 59 + Products.GetHashCode();
                    if (SuperUserCanAlsoViewPlatform != null)
                    hashCode = hashCode * 59 + SuperUserCanAlsoViewPlatform.GetHashCode();
                    if (SupportOrgId != null)
                    hashCode = hashCode * 59 + SupportOrgId.GetHashCode();
                    if (Districts != null)
                    hashCode = hashCode * 59 + Districts.GetHashCode();
                    if (SupportOrg != null)
                    hashCode = hashCode * 59 + SupportOrg.GetHashCode();
                    if (DistrictContact != null)
                    hashCode = hashCode * 59 + DistrictContact.GetHashCode();
                    
                    hashCode = hashCode * 59 + SendEmail.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CreateNewClientRequest left, CreateNewClientRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CreateNewClientRequest left, CreateNewClientRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
