/*
 * Pathwayos API
 *
 * Pathwayos API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AdminUpdateSettingsRequestDistrictRequest : IEquatable<AdminUpdateSettingsRequestDistrictRequest>
    {
        /// <summary>
        /// Gets or Sets CreditCalculationMethod
        /// </summary>
        [Required]
        [DataMember(Name="creditCalculationMethod", EmitDefaultValue=true)]
        public long CreditCalculationMethod { get; set; }

        /// <summary>
        /// Gets or Sets GoogleDomain
        /// </summary>
        [DataMember(Name="googleDomain", EmitDefaultValue=true)]
        public string GoogleDomain { get; set; }

        /// <summary>
        /// Gets or Sets CsvSupplementalUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvSupplementalUploadMapping", EmitDefaultValue=false)]
        public Object CsvSupplementalUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets StudentsCanUpdateCluster
        /// </summary>
        [Required]
        [DataMember(Name="studentsCanUpdateCluster", EmitDefaultValue=true)]
        public bool StudentsCanUpdateCluster { get; set; }

        /// <summary>
        /// Gets or Sets CounselorOneRosterField
        /// </summary>
        [DataMember(Name="counselorOneRosterField", EmitDefaultValue=true)]
        public string CounselorOneRosterField { get; set; }

        /// <summary>
        /// Gets or Sets MicrosoftDomain
        /// </summary>
        [DataMember(Name="microsoftDomain", EmitDefaultValue=true)]
        public string MicrosoftDomain { get; set; }

        /// <summary>
        /// Gets or Sets CsvEnrollmentsUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvEnrollmentsUploadMapping", EmitDefaultValue=false)]
        public Object CsvEnrollmentsUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvCollegeStudentUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvCollegeStudentUploadMapping", EmitDefaultValue=false)]
        public Object CsvCollegeStudentUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvCoursesUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvCoursesUploadMapping", EmitDefaultValue=false)]
        public Object CsvCoursesUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvClassesUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvClassesUploadMapping", EmitDefaultValue=false)]
        public Object CsvClassesUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvEarnedCreditsUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvEarnedCreditsUploadMapping", EmitDefaultValue=false)]
        public Object CsvEarnedCreditsUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets NcesID
        /// </summary>
        [Required]
        [DataMember(Name="ncesID", EmitDefaultValue=false)]
        public string NcesID { get; set; }

        /// <summary>
        /// Gets or Sets CleverDistrictId
        /// </summary>
        [DataMember(Name="cleverDistrictId", EmitDefaultValue=true)]
        public string CleverDistrictId { get; set; }

        /// <summary>
        /// Gets or Sets SkipGoogleNameTransfer
        /// </summary>
        [Required]
        [DataMember(Name="skipGoogleNameTransfer", EmitDefaultValue=true)]
        public bool SkipGoogleNameTransfer { get; set; }

        /// <summary>
        /// Gets or Sets HideFromSearch
        /// </summary>
        [Required]
        [DataMember(Name="hideFromSearch", EmitDefaultValue=true)]
        public bool HideFromSearch { get; set; }

        /// <summary>
        /// Gets or Sets BlockEmailSendsToUsers
        /// </summary>
        [Required]
        [DataMember(Name="blockEmailSendsToUsers", EmitDefaultValue=true)]
        public bool BlockEmailSendsToUsers { get; set; }

        /// <summary>
        /// Gets or Sets CsvUserUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvUserUploadMapping", EmitDefaultValue=false)]
        public Object CsvUserUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvTestsUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvTestsUploadMapping", EmitDefaultValue=false)]
        public Object CsvTestsUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets CsvCredentialsUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvCredentialsUploadMapping", EmitDefaultValue=false)]
        public Object CsvCredentialsUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets ShortName
        /// </summary>
        [Required]
        [DataMember(Name="shortName", EmitDefaultValue=false)]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or Sets IsShutDown
        /// </summary>
        [Required]
        [DataMember(Name="isShutDown", EmitDefaultValue=true)]
        public bool IsShutDown { get; set; }

        /// <summary>
        /// Gets or Sets CsvGuardiansUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvGuardiansUploadMapping", EmitDefaultValue=false)]
        public Object CsvGuardiansUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets IgnoreInvalidSchoolCodes
        /// </summary>
        [Required]
        [DataMember(Name="ignoreInvalidSchoolCodes", EmitDefaultValue=true)]
        public bool IgnoreInvalidSchoolCodes { get; set; }

        /// <summary>
        /// Gets or Sets SamlMetadata
        /// </summary>
        [DataMember(Name="samlMetadata", EmitDefaultValue=true)]
        public string SamlMetadata { get; set; }

        /// <summary>
        /// Gets or Sets CsvRemoveUsersUploadMapping
        /// </summary>
        [Required]
        [DataMember(Name="csvRemoveUsersUploadMapping", EmitDefaultValue=false)]
        public Object CsvRemoveUsersUploadMapping { get; set; }

        /// <summary>
        /// Gets or Sets AllowInvalidEmailsInCSV
        /// </summary>
        [Required]
        [DataMember(Name="allowInvalidEmailsInCSV", EmitDefaultValue=true)]
        public bool AllowInvalidEmailsInCSV { get; set; }

        /// <summary>
        /// Gets or Sets StudentInformationSystem
        /// </summary>
        [Required]
        [DataMember(Name="studentInformationSystem", EmitDefaultValue=true)]
        public long StudentInformationSystem { get; set; }

        /// <summary>
        /// Gets or Sets ClasslinkTenantId
        /// </summary>
        [DataMember(Name="classlinkTenantId", EmitDefaultValue=true)]
        public string ClasslinkTenantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AdminUpdateSettingsRequestDistrictRequest {\n");
            sb.Append("  CreditCalculationMethod: ").Append(CreditCalculationMethod).Append("\n");
            sb.Append("  GoogleDomain: ").Append(GoogleDomain).Append("\n");
            sb.Append("  CsvSupplementalUploadMapping: ").Append(CsvSupplementalUploadMapping).Append("\n");
            sb.Append("  StudentsCanUpdateCluster: ").Append(StudentsCanUpdateCluster).Append("\n");
            sb.Append("  CounselorOneRosterField: ").Append(CounselorOneRosterField).Append("\n");
            sb.Append("  MicrosoftDomain: ").Append(MicrosoftDomain).Append("\n");
            sb.Append("  CsvEnrollmentsUploadMapping: ").Append(CsvEnrollmentsUploadMapping).Append("\n");
            sb.Append("  CsvCollegeStudentUploadMapping: ").Append(CsvCollegeStudentUploadMapping).Append("\n");
            sb.Append("  CsvCoursesUploadMapping: ").Append(CsvCoursesUploadMapping).Append("\n");
            sb.Append("  CsvClassesUploadMapping: ").Append(CsvClassesUploadMapping).Append("\n");
            sb.Append("  CsvEarnedCreditsUploadMapping: ").Append(CsvEarnedCreditsUploadMapping).Append("\n");
            sb.Append("  NcesID: ").Append(NcesID).Append("\n");
            sb.Append("  CleverDistrictId: ").Append(CleverDistrictId).Append("\n");
            sb.Append("  SkipGoogleNameTransfer: ").Append(SkipGoogleNameTransfer).Append("\n");
            sb.Append("  HideFromSearch: ").Append(HideFromSearch).Append("\n");
            sb.Append("  BlockEmailSendsToUsers: ").Append(BlockEmailSendsToUsers).Append("\n");
            sb.Append("  CsvUserUploadMapping: ").Append(CsvUserUploadMapping).Append("\n");
            sb.Append("  CsvTestsUploadMapping: ").Append(CsvTestsUploadMapping).Append("\n");
            sb.Append("  CsvCredentialsUploadMapping: ").Append(CsvCredentialsUploadMapping).Append("\n");
            sb.Append("  ShortName: ").Append(ShortName).Append("\n");
            sb.Append("  IsShutDown: ").Append(IsShutDown).Append("\n");
            sb.Append("  CsvGuardiansUploadMapping: ").Append(CsvGuardiansUploadMapping).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  IgnoreInvalidSchoolCodes: ").Append(IgnoreInvalidSchoolCodes).Append("\n");
            sb.Append("  SamlMetadata: ").Append(SamlMetadata).Append("\n");
            sb.Append("  CsvRemoveUsersUploadMapping: ").Append(CsvRemoveUsersUploadMapping).Append("\n");
            sb.Append("  AllowInvalidEmailsInCSV: ").Append(AllowInvalidEmailsInCSV).Append("\n");
            sb.Append("  StudentInformationSystem: ").Append(StudentInformationSystem).Append("\n");
            sb.Append("  ClasslinkTenantId: ").Append(ClasslinkTenantId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AdminUpdateSettingsRequestDistrictRequest)obj);
        }

        /// <summary>
        /// Returns true if AdminUpdateSettingsRequestDistrictRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of AdminUpdateSettingsRequestDistrictRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdminUpdateSettingsRequestDistrictRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CreditCalculationMethod == other.CreditCalculationMethod ||
                    
                    CreditCalculationMethod.Equals(other.CreditCalculationMethod)
                ) && 
                (
                    GoogleDomain == other.GoogleDomain ||
                    GoogleDomain != null &&
                    GoogleDomain.Equals(other.GoogleDomain)
                ) && 
                (
                    CsvSupplementalUploadMapping == other.CsvSupplementalUploadMapping ||
                    CsvSupplementalUploadMapping != null &&
                    CsvSupplementalUploadMapping.Equals(other.CsvSupplementalUploadMapping)
                ) && 
                (
                    StudentsCanUpdateCluster == other.StudentsCanUpdateCluster ||
                    
                    StudentsCanUpdateCluster.Equals(other.StudentsCanUpdateCluster)
                ) && 
                (
                    CounselorOneRosterField == other.CounselorOneRosterField ||
                    CounselorOneRosterField != null &&
                    CounselorOneRosterField.Equals(other.CounselorOneRosterField)
                ) && 
                (
                    MicrosoftDomain == other.MicrosoftDomain ||
                    MicrosoftDomain != null &&
                    MicrosoftDomain.Equals(other.MicrosoftDomain)
                ) && 
                (
                    CsvEnrollmentsUploadMapping == other.CsvEnrollmentsUploadMapping ||
                    CsvEnrollmentsUploadMapping != null &&
                    CsvEnrollmentsUploadMapping.Equals(other.CsvEnrollmentsUploadMapping)
                ) && 
                (
                    CsvCollegeStudentUploadMapping == other.CsvCollegeStudentUploadMapping ||
                    CsvCollegeStudentUploadMapping != null &&
                    CsvCollegeStudentUploadMapping.Equals(other.CsvCollegeStudentUploadMapping)
                ) && 
                (
                    CsvCoursesUploadMapping == other.CsvCoursesUploadMapping ||
                    CsvCoursesUploadMapping != null &&
                    CsvCoursesUploadMapping.Equals(other.CsvCoursesUploadMapping)
                ) && 
                (
                    CsvClassesUploadMapping == other.CsvClassesUploadMapping ||
                    CsvClassesUploadMapping != null &&
                    CsvClassesUploadMapping.Equals(other.CsvClassesUploadMapping)
                ) && 
                (
                    CsvEarnedCreditsUploadMapping == other.CsvEarnedCreditsUploadMapping ||
                    CsvEarnedCreditsUploadMapping != null &&
                    CsvEarnedCreditsUploadMapping.Equals(other.CsvEarnedCreditsUploadMapping)
                ) && 
                (
                    NcesID == other.NcesID ||
                    NcesID != null &&
                    NcesID.Equals(other.NcesID)
                ) && 
                (
                    CleverDistrictId == other.CleverDistrictId ||
                    CleverDistrictId != null &&
                    CleverDistrictId.Equals(other.CleverDistrictId)
                ) && 
                (
                    SkipGoogleNameTransfer == other.SkipGoogleNameTransfer ||
                    
                    SkipGoogleNameTransfer.Equals(other.SkipGoogleNameTransfer)
                ) && 
                (
                    HideFromSearch == other.HideFromSearch ||
                    
                    HideFromSearch.Equals(other.HideFromSearch)
                ) && 
                (
                    BlockEmailSendsToUsers == other.BlockEmailSendsToUsers ||
                    
                    BlockEmailSendsToUsers.Equals(other.BlockEmailSendsToUsers)
                ) && 
                (
                    CsvUserUploadMapping == other.CsvUserUploadMapping ||
                    CsvUserUploadMapping != null &&
                    CsvUserUploadMapping.Equals(other.CsvUserUploadMapping)
                ) && 
                (
                    CsvTestsUploadMapping == other.CsvTestsUploadMapping ||
                    CsvTestsUploadMapping != null &&
                    CsvTestsUploadMapping.Equals(other.CsvTestsUploadMapping)
                ) && 
                (
                    CsvCredentialsUploadMapping == other.CsvCredentialsUploadMapping ||
                    CsvCredentialsUploadMapping != null &&
                    CsvCredentialsUploadMapping.Equals(other.CsvCredentialsUploadMapping)
                ) && 
                (
                    ShortName == other.ShortName ||
                    ShortName != null &&
                    ShortName.Equals(other.ShortName)
                ) && 
                (
                    IsShutDown == other.IsShutDown ||
                    
                    IsShutDown.Equals(other.IsShutDown)
                ) && 
                (
                    CsvGuardiansUploadMapping == other.CsvGuardiansUploadMapping ||
                    CsvGuardiansUploadMapping != null &&
                    CsvGuardiansUploadMapping.Equals(other.CsvGuardiansUploadMapping)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    IgnoreInvalidSchoolCodes == other.IgnoreInvalidSchoolCodes ||
                    
                    IgnoreInvalidSchoolCodes.Equals(other.IgnoreInvalidSchoolCodes)
                ) && 
                (
                    SamlMetadata == other.SamlMetadata ||
                    SamlMetadata != null &&
                    SamlMetadata.Equals(other.SamlMetadata)
                ) && 
                (
                    CsvRemoveUsersUploadMapping == other.CsvRemoveUsersUploadMapping ||
                    CsvRemoveUsersUploadMapping != null &&
                    CsvRemoveUsersUploadMapping.Equals(other.CsvRemoveUsersUploadMapping)
                ) && 
                (
                    AllowInvalidEmailsInCSV == other.AllowInvalidEmailsInCSV ||
                    
                    AllowInvalidEmailsInCSV.Equals(other.AllowInvalidEmailsInCSV)
                ) && 
                (
                    StudentInformationSystem == other.StudentInformationSystem ||
                    
                    StudentInformationSystem.Equals(other.StudentInformationSystem)
                ) && 
                (
                    ClasslinkTenantId == other.ClasslinkTenantId ||
                    ClasslinkTenantId != null &&
                    ClasslinkTenantId.Equals(other.ClasslinkTenantId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + CreditCalculationMethod.GetHashCode();
                    if (GoogleDomain != null)
                    hashCode = hashCode * 59 + GoogleDomain.GetHashCode();
                    if (CsvSupplementalUploadMapping != null)
                    hashCode = hashCode * 59 + CsvSupplementalUploadMapping.GetHashCode();
                    
                    hashCode = hashCode * 59 + StudentsCanUpdateCluster.GetHashCode();
                    if (CounselorOneRosterField != null)
                    hashCode = hashCode * 59 + CounselorOneRosterField.GetHashCode();
                    if (MicrosoftDomain != null)
                    hashCode = hashCode * 59 + MicrosoftDomain.GetHashCode();
                    if (CsvEnrollmentsUploadMapping != null)
                    hashCode = hashCode * 59 + CsvEnrollmentsUploadMapping.GetHashCode();
                    if (CsvCollegeStudentUploadMapping != null)
                    hashCode = hashCode * 59 + CsvCollegeStudentUploadMapping.GetHashCode();
                    if (CsvCoursesUploadMapping != null)
                    hashCode = hashCode * 59 + CsvCoursesUploadMapping.GetHashCode();
                    if (CsvClassesUploadMapping != null)
                    hashCode = hashCode * 59 + CsvClassesUploadMapping.GetHashCode();
                    if (CsvEarnedCreditsUploadMapping != null)
                    hashCode = hashCode * 59 + CsvEarnedCreditsUploadMapping.GetHashCode();
                    if (NcesID != null)
                    hashCode = hashCode * 59 + NcesID.GetHashCode();
                    if (CleverDistrictId != null)
                    hashCode = hashCode * 59 + CleverDistrictId.GetHashCode();
                    
                    hashCode = hashCode * 59 + SkipGoogleNameTransfer.GetHashCode();
                    
                    hashCode = hashCode * 59 + HideFromSearch.GetHashCode();
                    
                    hashCode = hashCode * 59 + BlockEmailSendsToUsers.GetHashCode();
                    if (CsvUserUploadMapping != null)
                    hashCode = hashCode * 59 + CsvUserUploadMapping.GetHashCode();
                    if (CsvTestsUploadMapping != null)
                    hashCode = hashCode * 59 + CsvTestsUploadMapping.GetHashCode();
                    if (CsvCredentialsUploadMapping != null)
                    hashCode = hashCode * 59 + CsvCredentialsUploadMapping.GetHashCode();
                    if (ShortName != null)
                    hashCode = hashCode * 59 + ShortName.GetHashCode();
                    
                    hashCode = hashCode * 59 + IsShutDown.GetHashCode();
                    if (CsvGuardiansUploadMapping != null)
                    hashCode = hashCode * 59 + CsvGuardiansUploadMapping.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    
                    hashCode = hashCode * 59 + IgnoreInvalidSchoolCodes.GetHashCode();
                    if (SamlMetadata != null)
                    hashCode = hashCode * 59 + SamlMetadata.GetHashCode();
                    if (CsvRemoveUsersUploadMapping != null)
                    hashCode = hashCode * 59 + CsvRemoveUsersUploadMapping.GetHashCode();
                    
                    hashCode = hashCode * 59 + AllowInvalidEmailsInCSV.GetHashCode();
                    
                    hashCode = hashCode * 59 + StudentInformationSystem.GetHashCode();
                    if (ClasslinkTenantId != null)
                    hashCode = hashCode * 59 + ClasslinkTenantId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AdminUpdateSettingsRequestDistrictRequest left, AdminUpdateSettingsRequestDistrictRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AdminUpdateSettingsRequestDistrictRequest left, AdminUpdateSettingsRequestDistrictRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
